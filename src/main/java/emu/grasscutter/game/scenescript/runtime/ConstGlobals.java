package emu.grasscutter.game.scenescript.runtime;

import emu.grasscutter.game.scenescript.types.constants.*;
import org.luaj.vm2.Globals;
import org.luaj.vm2.LoadState;
import org.luaj.vm2.compiler.LuaC;

public class ConstGlobals {
    public static void loadConstGlobals(Globals globals) {
        globals.load(new Activity.ActivityActionType());
        globals.load(new Activity.ActivityCondDefaultStateType());
        globals.load(new Activity.ActivityCondType());
        globals.load(new Activity.ActivityDropType());
        globals.load(new Activity.ActivityType());
        globals.load(new Avatar.AvatarIdentityType());
        globals.load(new Avatar.AvatarUseType());
        globals.load(new AvatarSkill.MonitorType());
        globals.load(new AvatarTalent.TalentFilterCond());
        globals.load(new AvatarTalent.TalentPointType());
        globals.load(new AvatarTalent.EffectTargetType());
        globals.load(new AvatarTalent.ProudLifeEffectType());
        globals.load(new AvatarTalent.ProudSkillType());
        globals.load(new Bored.BoardEventType());
        globals.load(new Bored.BoredActionType());
        globals.load(new Buff.BuffStackType());
        globals.load(new Common.ArithType());
        globals.load(new Common.BodyType());
        globals.load(new Common.ItemType());
        globals.load(new Common.LifeState());
        globals.load(new Common.QualityType());
        globals.load(new Common.SkillDrag());
        globals.load(new Common.JobType());
        globals.load(new Common.MonsterType());
        globals.load(new Common.PropType());
        globals.load(new Common.FightPropType());
        globals.load(new Common.RoundType());
        globals.load(new Common.DungeonPlayType());
        globals.load(new Common.EquipType());
        globals.load(new Common.GrowCurveType());
        globals.load(new Common.MaterialType());
        globals.load(new Common.StateType());
        globals.load(new Common.WeaponType());
        globals.load(new Compound.CompoundType());
        globals.load(new ConstValue.ConstValueType());
        globals.load(new Cook.CookBonusType());
        globals.load(new Cook.CookFoodType());
        globals.load(new Cook.CookMethodType());
        globals.load(new DailyTask.DailyTaskFinishType());
        globals.load(new DailyTask.DailyTaskType());
        globals.load(new DailyTask.ConditionType());
        globals.load(new DailyTask.DailyTaskActionType());
        globals.load(new DailyTask.DailyTaskCondType());
        globals.load(new DieTypeTips.PlayerDieType());
        globals.load(new DisplayItem.DisplayItemType());
        globals.load(new DungeonEntryDataConfig.DungeonEntrySatisfiedConditionType());
        globals.load(new DungeonEntryDataConfig.DungunEntryType());
        globals.load(new Dungeon.ChallengeCondType());
        globals.load(new Dungeon.ChallengeRecordType());
        globals.load(new Dungeon.DungeonType());
        globals.load(new Dungeon.SettleShowType());
        globals.load(new Dungeon.SettleUIType());
        globals.load(new Dungeon.ChallengeType());
        globals.load(new Dungeon.CycleDungeonType());
        globals.load(new Dungeon.DungeonCondType());
        globals.load(new Dungeon.InvolveType());
        globals.load(new Equip.EquipSlotType());
        globals.load(new Equip.AffixEffect());
        globals.load(new ExpeditionData.ExpeditionOpenCondType());
        globals.load(new Gacha.GachaGuaranteeResetType());
        globals.load(new Gacha.GachaGuaranteeType());
        globals.load(new Gacha.GachaItemParentType());
        globals.load(new Gacha.GachaItemType());
        globals.load(new Gacha.GachaType());
        globals.load(new Gadget.InteractActionType());
        globals.load(new Gather.PointLocation());
        globals.load(new Giving.BagTab());
        globals.load(new Giving.GivingMethod());
        globals.load(new Guide.GuideTriggerType());
        globals.load(new Investigation.InvestigationMonsterMapMarkCreateConditionType());
        globals.load(new Investigation.InvestigationMonsterMapMarkCreateType());
        globals.load(new Item.ItemUseOp());
        globals.load(new ItemLimit.ItemLimitType());
        globals.load(new ItemLimit.OutputControlType());
        globals.load(new ItemLimit.ItemLimitRefreshType());
        globals.load(new Localization.LocalizationAssetType());
        globals.load(new Mail.ExcelMailType());
        globals.load(new Material.MaterialExpireType());
        globals.load(new Material.DocumentType());
        globals.load(new Material.FoodQualityType());
        globals.load(new Material.ItemUseOp());
        globals.load(new Material.ItemUseTarget());
        globals.load(new Monster.MonsterRarityType());
        globals.load(new Npc.BillboardType());
        globals.load(new OpenState.OpenStateCondType());
        globals.load(new OpenState.OpenStateType());
        globals.load(new Quest.TalkHeroType());
        globals.load(new Quest.TalkShowType());
        globals.load(new Quest.QuestCondType());
        globals.load(new Quest.QuestGuideLayer());
        globals.load(new Quest.QuestGuideStyle());
        globals.load(new Quest.RandomQuestFilterType());
        globals.load(new Quest.TalkBeginWay());
        globals.load(new Quest.QuestGuideAuto());
        globals.load(new Quest.QuestShowType());
        globals.load(new Quest.ShowQuestGuideType());
        globals.load(new Quest.TalkRoleType());
        globals.load(new Quest.QuestContentType());
        globals.load(new Quest.QuestExecType());
        globals.load(new Quest.QuestGuideType());
        globals.load(new Quest.QuestState());
        globals.load(new Quest.QuestType());
        globals.load(new RandTask.RandTaskType());
        globals.load(new RefreshPolicy.RefreshType());
        globals.load(new Reliquary.ReliquaryMainAffixName());
        globals.load(new Reminder.ReminderStyleType());
        globals.load(new Reminder.ReminderShowType());
        globals.load(new Scene.SceneType());
        globals.load(new Shop.ShopType());
        globals.load(new TextMap.TextParamType());
        globals.load(new TextMap.TextShowPlace());
        globals.load(new Tower.TowerBuffLastingType());
        globals.load(new Tower.TowerCondType());
        globals.load(new Tutorial.TutorialDetailType());
        globals.load(new Watcher.PushTipsType());
        globals.load(new Watcher.WatcherPredicateType());
        globals.load(new Watcher.WatcherTriggerType());
        globals.load(new Watcher.AvatarFilterType());
        globals.load(new Weapon.WeaponMaterialType());
        globals.load(new Weather.ClimateType());
        globals.load(new WorldArea.AreaTerrainType());
        globals.load(new WorldArea.ExploreEventType());
        globals.load(new WorldArea.WorldAreaLevelupActionType());
        globals.load(new WorldArea.WorldAreaType());
        LoadState.install(globals);
        LuaC.install(globals);
    }
}
