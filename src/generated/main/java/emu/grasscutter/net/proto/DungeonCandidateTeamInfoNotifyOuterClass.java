// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DungeonCandidateTeamInfoNotify.proto

package emu.grasscutter.net.proto;

public final class DungeonCandidateTeamInfoNotifyOuterClass {
  private DungeonCandidateTeamInfoNotifyOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DungeonCandidateTeamInfoNotifyOrBuilder extends
      // @@protoc_insertion_point(interface_extends:DungeonCandidateTeamInfoNotify)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 ready_player_uid = 2;</code>
     * @return A list containing the readyPlayerUid.
     */
    java.util.List<java.lang.Integer> getReadyPlayerUidList();
    /**
     * <code>repeated uint32 ready_player_uid = 2;</code>
     * @return The count of readyPlayerUid.
     */
    int getReadyPlayerUidCount();
    /**
     * <code>repeated uint32 ready_player_uid = 2;</code>
     * @param index The index of the element to return.
     * @return The readyPlayerUid at the given index.
     */
    int getReadyPlayerUid(int index);

    /**
     * <code>uint32 match_type = 12;</code>
     * @return The matchType.
     */
    int getMatchType();

    /**
     * <code>uint32 dungeon_id = 8;</code>
     * @return The dungeonId.
     */
    int getDungeonId();

    /**
     * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
     */
    java.util.List<emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar> 
        getAvatarListList();
    /**
     * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
     */
    emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar getAvatarList(int index);
    /**
     * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
     */
    int getAvatarListCount();
    /**
     * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
     */
    java.util.List<? extends emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatarOrBuilder> 
        getAvatarListOrBuilderList();
    /**
     * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
     */
    emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatarOrBuilder getAvatarListOrBuilder(
        int index);

    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */
    int getPlayerStateMapCount();
    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */
    boolean containsPlayerStateMap(
        int key);
    /**
     * Use {@link #getPlayerStateMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState>
    getPlayerStateMap();
    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */
    java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState>
    getPlayerStateMapMap();
    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */
    emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState getPlayerStateMapOrDefault(
        int key,
        emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState defaultValue);
    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */
    emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState getPlayerStateMapOrThrow(
        int key);
    /**
     * Use {@link #getPlayerStateMapValueMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getPlayerStateMapValue();
    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getPlayerStateMapValueMap();
    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */

    int getPlayerStateMapValueOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */

    int getPlayerStateMapValueOrThrow(
        int key);
  }
  /**
   * <pre>
   * enum CmdId {
   *   option allow_alias = true;
   *   NONE = 0;
   *   CMD_ID = 917;
   *   ENET_CHANNEL_ID = 0;
   *   ENET_IS_RELIABLE = 1;
   * }
   * </pre>
   *
   * Protobuf type {@code DungeonCandidateTeamInfoNotify}
   */
  public static final class DungeonCandidateTeamInfoNotify extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:DungeonCandidateTeamInfoNotify)
      DungeonCandidateTeamInfoNotifyOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use DungeonCandidateTeamInfoNotify.newBuilder() to construct.
    private DungeonCandidateTeamInfoNotify(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private DungeonCandidateTeamInfoNotify() {
      readyPlayerUid_ = emptyIntList();
      avatarList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new DungeonCandidateTeamInfoNotify();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private DungeonCandidateTeamInfoNotify(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                avatarList_ = new java.util.ArrayList<emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar>();
                mutable_bitField0_ |= 0x00000002;
              }
              avatarList_.add(
                  input.readMessage(emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar.parser(), extensionRegistry));
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                readyPlayerUid_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              readyPlayerUid_.addInt(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                readyPlayerUid_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                readyPlayerUid_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {

              dungeonId_ = input.readUInt32();
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                playerStateMap_ = com.google.protobuf.MapField.newMapField(
                    PlayerStateMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              playerStateMap__ = input.readMessage(
                  PlayerStateMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              playerStateMap_.getMutableMap().put(
                  playerStateMap__.getKey(), playerStateMap__.getValue());
              break;
            }
            case 96: {

              matchType_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          avatarList_ = java.util.Collections.unmodifiableList(avatarList_);
        }
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          readyPlayerUid_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.internal_static_DungeonCandidateTeamInfoNotify_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 10:
          return internalGetPlayerStateMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.internal_static_DungeonCandidateTeamInfoNotify_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify.class, emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify.Builder.class);
    }

    public static final int READY_PLAYER_UID_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList readyPlayerUid_;
    /**
     * <code>repeated uint32 ready_player_uid = 2;</code>
     * @return A list containing the readyPlayerUid.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getReadyPlayerUidList() {
      return readyPlayerUid_;
    }
    /**
     * <code>repeated uint32 ready_player_uid = 2;</code>
     * @return The count of readyPlayerUid.
     */
    public int getReadyPlayerUidCount() {
      return readyPlayerUid_.size();
    }
    /**
     * <code>repeated uint32 ready_player_uid = 2;</code>
     * @param index The index of the element to return.
     * @return The readyPlayerUid at the given index.
     */
    public int getReadyPlayerUid(int index) {
      return readyPlayerUid_.getInt(index);
    }
    private int readyPlayerUidMemoizedSerializedSize = -1;

    public static final int MATCH_TYPE_FIELD_NUMBER = 12;
    private int matchType_;
    /**
     * <code>uint32 match_type = 12;</code>
     * @return The matchType.
     */
    @java.lang.Override
    public int getMatchType() {
      return matchType_;
    }

    public static final int DUNGEON_ID_FIELD_NUMBER = 8;
    private int dungeonId_;
    /**
     * <code>uint32 dungeon_id = 8;</code>
     * @return The dungeonId.
     */
    @java.lang.Override
    public int getDungeonId() {
      return dungeonId_;
    }

    public static final int AVATAR_LIST_FIELD_NUMBER = 1;
    private java.util.List<emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar> avatarList_;
    /**
     * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
     */
    @java.lang.Override
    public java.util.List<emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar> getAvatarListList() {
      return avatarList_;
    }
    /**
     * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatarOrBuilder> 
        getAvatarListOrBuilderList() {
      return avatarList_;
    }
    /**
     * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
     */
    @java.lang.Override
    public int getAvatarListCount() {
      return avatarList_.size();
    }
    /**
     * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar getAvatarList(int index) {
      return avatarList_.get(index);
    }
    /**
     * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatarOrBuilder getAvatarListOrBuilder(
        int index) {
      return avatarList_.get(index);
    }

    public static final int PLAYER_STATE_MAP_FIELD_NUMBER = 10;
    private static final class PlayerStateMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.internal_static_DungeonCandidateTeamInfoNotify_PlayerStateMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.ENUM,
                  emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState.DUNGEON_CANDIDATE_TEAM_PLAYER_STATE_IDLE.getNumber());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> playerStateMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetPlayerStateMap() {
      if (playerStateMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PlayerStateMapDefaultEntryHolder.defaultEntry);
      }
      return playerStateMap_;
    }
    private static final
    com.google.protobuf.Internal.MapAdapter.Converter<
        java.lang.Integer, emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState> playerStateMapValueConverter =
            com.google.protobuf.Internal.MapAdapter.newEnumConverter(
                emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState.internalGetValueMap(),
                emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState.UNRECOGNIZED);
    private static final java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState>
    internalGetAdaptedPlayerStateMapMap(
        java.util.Map<java.lang.Integer, java.lang.Integer> map) {
      return new com.google.protobuf.Internal.MapAdapter<
          java.lang.Integer, emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState, java.lang.Integer>(
              map, playerStateMapValueConverter);
    }

    public int getPlayerStateMapCount() {
      return internalGetPlayerStateMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */

    @java.lang.Override
    public boolean containsPlayerStateMap(
        int key) {
      
      return internalGetPlayerStateMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPlayerStateMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState>
    getPlayerStateMap() {
      return getPlayerStateMapMap();
    }
    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState>
    getPlayerStateMapMap() {
      return internalGetAdaptedPlayerStateMapMap(
          internalGetPlayerStateMap().getMap());}
    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */
    @java.lang.Override

    public emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState getPlayerStateMapOrDefault(
        int key,
        emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetPlayerStateMap().getMap();
      return map.containsKey(key)
             ? playerStateMapValueConverter.doForward(map.get(key))
             : defaultValue;
    }
    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */
    @java.lang.Override

    public emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState getPlayerStateMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetPlayerStateMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return playerStateMapValueConverter.doForward(map.get(key));
    }
    /**
     * Use {@link #getPlayerStateMapValueMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getPlayerStateMapValue() {
      return getPlayerStateMapValueMap();
    }
    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer>
    getPlayerStateMapValueMap() {
      return internalGetPlayerStateMap().getMap();
    }
    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */
    @java.lang.Override

    public int getPlayerStateMapValueOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetPlayerStateMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
     */
    @java.lang.Override

    public int getPlayerStateMapValueOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetPlayerStateMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < avatarList_.size(); i++) {
        output.writeMessage(1, avatarList_.get(i));
      }
      if (getReadyPlayerUidList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(readyPlayerUidMemoizedSerializedSize);
      }
      for (int i = 0; i < readyPlayerUid_.size(); i++) {
        output.writeUInt32NoTag(readyPlayerUid_.getInt(i));
      }
      if (dungeonId_ != 0) {
        output.writeUInt32(8, dungeonId_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetPlayerStateMap(),
          PlayerStateMapDefaultEntryHolder.defaultEntry,
          10);
      if (matchType_ != 0) {
        output.writeUInt32(12, matchType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < avatarList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, avatarList_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < readyPlayerUid_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(readyPlayerUid_.getInt(i));
        }
        size += dataSize;
        if (!getReadyPlayerUidList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        readyPlayerUidMemoizedSerializedSize = dataSize;
      }
      if (dungeonId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, dungeonId_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetPlayerStateMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        playerStateMap__ = PlayerStateMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(10, playerStateMap__);
      }
      if (matchType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, matchType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify other = (emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify) obj;

      if (!getReadyPlayerUidList()
          .equals(other.getReadyPlayerUidList())) return false;
      if (getMatchType()
          != other.getMatchType()) return false;
      if (getDungeonId()
          != other.getDungeonId()) return false;
      if (!getAvatarListList()
          .equals(other.getAvatarListList())) return false;
      if (!internalGetPlayerStateMap().equals(
          other.internalGetPlayerStateMap())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getReadyPlayerUidCount() > 0) {
        hash = (37 * hash) + READY_PLAYER_UID_FIELD_NUMBER;
        hash = (53 * hash) + getReadyPlayerUidList().hashCode();
      }
      hash = (37 * hash) + MATCH_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getMatchType();
      hash = (37 * hash) + DUNGEON_ID_FIELD_NUMBER;
      hash = (53 * hash) + getDungeonId();
      if (getAvatarListCount() > 0) {
        hash = (37 * hash) + AVATAR_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getAvatarListList().hashCode();
      }
      if (!internalGetPlayerStateMap().getMap().isEmpty()) {
        hash = (37 * hash) + PLAYER_STATE_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPlayerStateMap().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * enum CmdId {
     *   option allow_alias = true;
     *   NONE = 0;
     *   CMD_ID = 917;
     *   ENET_CHANNEL_ID = 0;
     *   ENET_IS_RELIABLE = 1;
     * }
     * </pre>
     *
     * Protobuf type {@code DungeonCandidateTeamInfoNotify}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:DungeonCandidateTeamInfoNotify)
        emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotifyOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.internal_static_DungeonCandidateTeamInfoNotify_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetPlayerStateMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 10:
            return internalGetMutablePlayerStateMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.internal_static_DungeonCandidateTeamInfoNotify_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify.class, emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getAvatarListFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        readyPlayerUid_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        matchType_ = 0;

        dungeonId_ = 0;

        if (avatarListBuilder_ == null) {
          avatarList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          avatarListBuilder_.clear();
        }
        internalGetMutablePlayerStateMap().clear();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.internal_static_DungeonCandidateTeamInfoNotify_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify build() {
        emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify buildPartial() {
        emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify result = new emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          readyPlayerUid_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.readyPlayerUid_ = readyPlayerUid_;
        result.matchType_ = matchType_;
        result.dungeonId_ = dungeonId_;
        if (avatarListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            avatarList_ = java.util.Collections.unmodifiableList(avatarList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.avatarList_ = avatarList_;
        } else {
          result.avatarList_ = avatarListBuilder_.build();
        }
        result.playerStateMap_ = internalGetPlayerStateMap();
        result.playerStateMap_.makeImmutable();
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify) {
          return mergeFrom((emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify other) {
        if (other == emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify.getDefaultInstance()) return this;
        if (!other.readyPlayerUid_.isEmpty()) {
          if (readyPlayerUid_.isEmpty()) {
            readyPlayerUid_ = other.readyPlayerUid_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureReadyPlayerUidIsMutable();
            readyPlayerUid_.addAll(other.readyPlayerUid_);
          }
          onChanged();
        }
        if (other.getMatchType() != 0) {
          setMatchType(other.getMatchType());
        }
        if (other.getDungeonId() != 0) {
          setDungeonId(other.getDungeonId());
        }
        if (avatarListBuilder_ == null) {
          if (!other.avatarList_.isEmpty()) {
            if (avatarList_.isEmpty()) {
              avatarList_ = other.avatarList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAvatarListIsMutable();
              avatarList_.addAll(other.avatarList_);
            }
            onChanged();
          }
        } else {
          if (!other.avatarList_.isEmpty()) {
            if (avatarListBuilder_.isEmpty()) {
              avatarListBuilder_.dispose();
              avatarListBuilder_ = null;
              avatarList_ = other.avatarList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              avatarListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getAvatarListFieldBuilder() : null;
            } else {
              avatarListBuilder_.addAllMessages(other.avatarList_);
            }
          }
        }
        internalGetMutablePlayerStateMap().mergeFrom(
            other.internalGetPlayerStateMap());
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList readyPlayerUid_ = emptyIntList();
      private void ensureReadyPlayerUidIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          readyPlayerUid_ = mutableCopy(readyPlayerUid_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 ready_player_uid = 2;</code>
       * @return A list containing the readyPlayerUid.
       */
      public java.util.List<java.lang.Integer>
          getReadyPlayerUidList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(readyPlayerUid_) : readyPlayerUid_;
      }
      /**
       * <code>repeated uint32 ready_player_uid = 2;</code>
       * @return The count of readyPlayerUid.
       */
      public int getReadyPlayerUidCount() {
        return readyPlayerUid_.size();
      }
      /**
       * <code>repeated uint32 ready_player_uid = 2;</code>
       * @param index The index of the element to return.
       * @return The readyPlayerUid at the given index.
       */
      public int getReadyPlayerUid(int index) {
        return readyPlayerUid_.getInt(index);
      }
      /**
       * <code>repeated uint32 ready_player_uid = 2;</code>
       * @param index The index to set the value at.
       * @param value The readyPlayerUid to set.
       * @return This builder for chaining.
       */
      public Builder setReadyPlayerUid(
          int index, int value) {
        ensureReadyPlayerUidIsMutable();
        readyPlayerUid_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ready_player_uid = 2;</code>
       * @param value The readyPlayerUid to add.
       * @return This builder for chaining.
       */
      public Builder addReadyPlayerUid(int value) {
        ensureReadyPlayerUidIsMutable();
        readyPlayerUid_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ready_player_uid = 2;</code>
       * @param values The readyPlayerUid to add.
       * @return This builder for chaining.
       */
      public Builder addAllReadyPlayerUid(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureReadyPlayerUidIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, readyPlayerUid_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ready_player_uid = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearReadyPlayerUid() {
        readyPlayerUid_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int matchType_ ;
      /**
       * <code>uint32 match_type = 12;</code>
       * @return The matchType.
       */
      @java.lang.Override
      public int getMatchType() {
        return matchType_;
      }
      /**
       * <code>uint32 match_type = 12;</code>
       * @param value The matchType to set.
       * @return This builder for chaining.
       */
      public Builder setMatchType(int value) {
        
        matchType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 match_type = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearMatchType() {
        
        matchType_ = 0;
        onChanged();
        return this;
      }

      private int dungeonId_ ;
      /**
       * <code>uint32 dungeon_id = 8;</code>
       * @return The dungeonId.
       */
      @java.lang.Override
      public int getDungeonId() {
        return dungeonId_;
      }
      /**
       * <code>uint32 dungeon_id = 8;</code>
       * @param value The dungeonId to set.
       * @return This builder for chaining.
       */
      public Builder setDungeonId(int value) {
        
        dungeonId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 dungeon_id = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearDungeonId() {
        
        dungeonId_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar> avatarList_ =
        java.util.Collections.emptyList();
      private void ensureAvatarListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          avatarList_ = new java.util.ArrayList<emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar>(avatarList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar, emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar.Builder, emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatarOrBuilder> avatarListBuilder_;

      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar> getAvatarListList() {
        if (avatarListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(avatarList_);
        } else {
          return avatarListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public int getAvatarListCount() {
        if (avatarListBuilder_ == null) {
          return avatarList_.size();
        } else {
          return avatarListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar getAvatarList(int index) {
        if (avatarListBuilder_ == null) {
          return avatarList_.get(index);
        } else {
          return avatarListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public Builder setAvatarList(
          int index, emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar value) {
        if (avatarListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAvatarListIsMutable();
          avatarList_.set(index, value);
          onChanged();
        } else {
          avatarListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public Builder setAvatarList(
          int index, emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar.Builder builderForValue) {
        if (avatarListBuilder_ == null) {
          ensureAvatarListIsMutable();
          avatarList_.set(index, builderForValue.build());
          onChanged();
        } else {
          avatarListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public Builder addAvatarList(emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar value) {
        if (avatarListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAvatarListIsMutable();
          avatarList_.add(value);
          onChanged();
        } else {
          avatarListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public Builder addAvatarList(
          int index, emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar value) {
        if (avatarListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAvatarListIsMutable();
          avatarList_.add(index, value);
          onChanged();
        } else {
          avatarListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public Builder addAvatarList(
          emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar.Builder builderForValue) {
        if (avatarListBuilder_ == null) {
          ensureAvatarListIsMutable();
          avatarList_.add(builderForValue.build());
          onChanged();
        } else {
          avatarListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public Builder addAvatarList(
          int index, emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar.Builder builderForValue) {
        if (avatarListBuilder_ == null) {
          ensureAvatarListIsMutable();
          avatarList_.add(index, builderForValue.build());
          onChanged();
        } else {
          avatarListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public Builder addAllAvatarList(
          java.lang.Iterable<? extends emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar> values) {
        if (avatarListBuilder_ == null) {
          ensureAvatarListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, avatarList_);
          onChanged();
        } else {
          avatarListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public Builder clearAvatarList() {
        if (avatarListBuilder_ == null) {
          avatarList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          avatarListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public Builder removeAvatarList(int index) {
        if (avatarListBuilder_ == null) {
          ensureAvatarListIsMutable();
          avatarList_.remove(index);
          onChanged();
        } else {
          avatarListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar.Builder getAvatarListBuilder(
          int index) {
        return getAvatarListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatarOrBuilder getAvatarListOrBuilder(
          int index) {
        if (avatarListBuilder_ == null) {
          return avatarList_.get(index);  } else {
          return avatarListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public java.util.List<? extends emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatarOrBuilder> 
           getAvatarListOrBuilderList() {
        if (avatarListBuilder_ != null) {
          return avatarListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(avatarList_);
        }
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar.Builder addAvatarListBuilder() {
        return getAvatarListFieldBuilder().addBuilder(
            emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar.getDefaultInstance());
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar.Builder addAvatarListBuilder(
          int index) {
        return getAvatarListFieldBuilder().addBuilder(
            index, emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar.getDefaultInstance());
      }
      /**
       * <code>repeated .DungeonCandidateTeamAvatar avatar_list = 1;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar.Builder> 
           getAvatarListBuilderList() {
        return getAvatarListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar, emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar.Builder, emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatarOrBuilder> 
          getAvatarListFieldBuilder() {
        if (avatarListBuilder_ == null) {
          avatarListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar, emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatar.Builder, emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.DungeonCandidateTeamAvatarOrBuilder>(
                  avatarList_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          avatarList_ = null;
        }
        return avatarListBuilder_;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> playerStateMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetPlayerStateMap() {
        if (playerStateMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PlayerStateMapDefaultEntryHolder.defaultEntry);
        }
        return playerStateMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutablePlayerStateMap() {
        onChanged();;
        if (playerStateMap_ == null) {
          playerStateMap_ = com.google.protobuf.MapField.newMapField(
              PlayerStateMapDefaultEntryHolder.defaultEntry);
        }
        if (!playerStateMap_.isMutable()) {
          playerStateMap_ = playerStateMap_.copy();
        }
        return playerStateMap_;
      }

      public int getPlayerStateMapCount() {
        return internalGetPlayerStateMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
       */

      @java.lang.Override
      public boolean containsPlayerStateMap(
          int key) {
        
        return internalGetPlayerStateMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPlayerStateMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState>
      getPlayerStateMap() {
        return getPlayerStateMapMap();
      }
      /**
       * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState>
      getPlayerStateMapMap() {
        return internalGetAdaptedPlayerStateMapMap(
            internalGetPlayerStateMap().getMap());}
      /**
       * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
       */
      @java.lang.Override

      public emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState getPlayerStateMapOrDefault(
          int key,
          emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetPlayerStateMap().getMap();
        return map.containsKey(key)
               ? playerStateMapValueConverter.doForward(map.get(key))
               : defaultValue;
      }
      /**
       * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
       */
      @java.lang.Override

      public emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState getPlayerStateMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetPlayerStateMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return playerStateMapValueConverter.doForward(map.get(key));
      }
      /**
       * Use {@link #getPlayerStateMapValueMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getPlayerStateMapValue() {
        return getPlayerStateMapValueMap();
      }
      /**
       * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getPlayerStateMapValueMap() {
        return internalGetPlayerStateMap().getMap();
      }
      /**
       * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
       */
      @java.lang.Override

      public int getPlayerStateMapValueOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetPlayerStateMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
       */
      @java.lang.Override

      public int getPlayerStateMapValueOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetPlayerStateMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPlayerStateMap() {
        internalGetMutablePlayerStateMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
       */

      public Builder removePlayerStateMap(
          int key) {
        
        internalGetMutablePlayerStateMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState>
      getMutablePlayerStateMap() {
        return internalGetAdaptedPlayerStateMapMap(
             internalGetMutablePlayerStateMap().getMutableMap());
      }
      /**
       * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
       */
      public Builder putPlayerStateMap(
          int key,
          emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePlayerStateMap().getMutableMap()
            .put(key, playerStateMapValueConverter.doBackward(value));
        return this;
      }
      /**
       * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
       */
      public Builder putAllPlayerStateMap(
          java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.DungeonCandidateTeamPlayerState> values) {
        internalGetAdaptedPlayerStateMapMap(
            internalGetMutablePlayerStateMap().getMutableMap())
                .putAll(values);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutablePlayerStateMapValue() {
        return internalGetMutablePlayerStateMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
       */
      public Builder putPlayerStateMapValue(
          int key,
          int value) {
        
        internalGetMutablePlayerStateMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, .DungeonCandidateTeamPlayerState&gt; player_state_map = 10;</code>
       */
      public Builder putAllPlayerStateMapValue(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutablePlayerStateMap().getMutableMap()
            .putAll(values);
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:DungeonCandidateTeamInfoNotify)
    }

    // @@protoc_insertion_point(class_scope:DungeonCandidateTeamInfoNotify)
    private static final emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify();
    }

    public static emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DungeonCandidateTeamInfoNotify>
        PARSER = new com.google.protobuf.AbstractParser<DungeonCandidateTeamInfoNotify>() {
      @java.lang.Override
      public DungeonCandidateTeamInfoNotify parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DungeonCandidateTeamInfoNotify(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<DungeonCandidateTeamInfoNotify> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DungeonCandidateTeamInfoNotify> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.DungeonCandidateTeamInfoNotifyOuterClass.DungeonCandidateTeamInfoNotify getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DungeonCandidateTeamInfoNotify_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DungeonCandidateTeamInfoNotify_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_DungeonCandidateTeamInfoNotify_PlayerStateMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_DungeonCandidateTeamInfoNotify_PlayerStateMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n$DungeonCandidateTeamInfoNotify.proto\032 " +
      "DungeonCandidateTeamAvatar.proto\032%Dungeo" +
      "nCandidateTeamPlayerState.proto\"\274\002\n\036Dung" +
      "eonCandidateTeamInfoNotify\022\030\n\020ready_play" +
      "er_uid\030\002 \003(\r\022\022\n\nmatch_type\030\014 \001(\r\022\022\n\ndung" +
      "eon_id\030\010 \001(\r\0220\n\013avatar_list\030\001 \003(\0132\033.Dung" +
      "eonCandidateTeamAvatar\022M\n\020player_state_m" +
      "ap\030\n \003(\01323.DungeonCandidateTeamInfoNotif" +
      "y.PlayerStateMapEntry\032W\n\023PlayerStateMapE" +
      "ntry\022\013\n\003key\030\001 \001(\r\022/\n\005value\030\002 \001(\0162 .Dunge" +
      "onCandidateTeamPlayerState:\0028\001B\033\n\031emu.gr" +
      "asscutter.net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.getDescriptor(),
        });
    internal_static_DungeonCandidateTeamInfoNotify_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_DungeonCandidateTeamInfoNotify_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DungeonCandidateTeamInfoNotify_descriptor,
        new java.lang.String[] { "ReadyPlayerUid", "MatchType", "DungeonId", "AvatarList", "PlayerStateMap", });
    internal_static_DungeonCandidateTeamInfoNotify_PlayerStateMapEntry_descriptor =
      internal_static_DungeonCandidateTeamInfoNotify_descriptor.getNestedTypes().get(0);
    internal_static_DungeonCandidateTeamInfoNotify_PlayerStateMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_DungeonCandidateTeamInfoNotify_PlayerStateMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    emu.grasscutter.net.proto.DungeonCandidateTeamAvatarOuterClass.getDescriptor();
    emu.grasscutter.net.proto.DungeonCandidateTeamPlayerStateOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
