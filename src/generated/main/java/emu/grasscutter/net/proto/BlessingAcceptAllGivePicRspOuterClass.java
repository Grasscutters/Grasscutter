// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BlessingAcceptAllGivePicRsp.proto

package emu.grasscutter.net.proto;

public final class BlessingAcceptAllGivePicRspOuterClass {
  private BlessingAcceptAllGivePicRspOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BlessingAcceptAllGivePicRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BlessingAcceptAllGivePicRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
     */
    int getAcceptPicNumMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
     */
    boolean containsAcceptPicNumMap(
        int key);
    /**
     * Use {@link #getAcceptPicNumMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getAcceptPicNumMap();
    /**
     * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getAcceptPicNumMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
     */

    int getAcceptPicNumMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
     */

    int getAcceptPicNumMapOrThrow(
        int key);

    /**
     * <code>int32 retcode = 13;</code>
     * @return The retcode.
     */
    int getRetcode();

    /**
     * <code>repeated uint32 accept_index_list = 9;</code>
     * @return A list containing the acceptIndexList.
     */
    java.util.List<java.lang.Integer> getAcceptIndexListList();
    /**
     * <code>repeated uint32 accept_index_list = 9;</code>
     * @return The count of acceptIndexList.
     */
    int getAcceptIndexListCount();
    /**
     * <code>repeated uint32 accept_index_list = 9;</code>
     * @param index The index of the element to return.
     * @return The acceptIndexList at the given index.
     */
    int getAcceptIndexList(int index);
  }
  /**
   * <pre>
   * CmdId: 7340
   * Obf: DMOMEJPEGMC
   * </pre>
   *
   * Protobuf type {@code BlessingAcceptAllGivePicRsp}
   */
  public static final class BlessingAcceptAllGivePicRsp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BlessingAcceptAllGivePicRsp)
      BlessingAcceptAllGivePicRspOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlessingAcceptAllGivePicRsp.newBuilder() to construct.
    private BlessingAcceptAllGivePicRsp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlessingAcceptAllGivePicRsp() {
      acceptIndexList_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new BlessingAcceptAllGivePicRsp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlessingAcceptAllGivePicRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 72: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                acceptIndexList_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              acceptIndexList_.addInt(input.readUInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                acceptIndexList_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                acceptIndexList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {

              retcode_ = input.readInt32();
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                acceptPicNumMap_ = com.google.protobuf.MapField.newMapField(
                    AcceptPicNumMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              acceptPicNumMap__ = input.readMessage(
                  AcceptPicNumMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              acceptPicNumMap_.getMutableMap().put(
                  acceptPicNumMap__.getKey(), acceptPicNumMap__.getValue());
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          acceptIndexList_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.internal_static_BlessingAcceptAllGivePicRsp_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 15:
          return internalGetAcceptPicNumMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.internal_static_BlessingAcceptAllGivePicRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp.class, emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp.Builder.class);
    }

    public static final int ACCEPT_PIC_NUM_MAP_FIELD_NUMBER = 15;
    private static final class AcceptPicNumMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.internal_static_BlessingAcceptAllGivePicRsp_AcceptPicNumMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> acceptPicNumMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetAcceptPicNumMap() {
      if (acceptPicNumMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            AcceptPicNumMapDefaultEntryHolder.defaultEntry);
      }
      return acceptPicNumMap_;
    }

    public int getAcceptPicNumMapCount() {
      return internalGetAcceptPicNumMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
     */

    @java.lang.Override
    public boolean containsAcceptPicNumMap(
        int key) {
      
      return internalGetAcceptPicNumMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getAcceptPicNumMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getAcceptPicNumMap() {
      return getAcceptPicNumMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getAcceptPicNumMapMap() {
      return internalGetAcceptPicNumMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
     */
    @java.lang.Override

    public int getAcceptPicNumMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetAcceptPicNumMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
     */
    @java.lang.Override

    public int getAcceptPicNumMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetAcceptPicNumMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int RETCODE_FIELD_NUMBER = 13;
    private int retcode_;
    /**
     * <code>int32 retcode = 13;</code>
     * @return The retcode.
     */
    @java.lang.Override
    public int getRetcode() {
      return retcode_;
    }

    public static final int ACCEPT_INDEX_LIST_FIELD_NUMBER = 9;
    private com.google.protobuf.Internal.IntList acceptIndexList_;
    /**
     * <code>repeated uint32 accept_index_list = 9;</code>
     * @return A list containing the acceptIndexList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getAcceptIndexListList() {
      return acceptIndexList_;
    }
    /**
     * <code>repeated uint32 accept_index_list = 9;</code>
     * @return The count of acceptIndexList.
     */
    public int getAcceptIndexListCount() {
      return acceptIndexList_.size();
    }
    /**
     * <code>repeated uint32 accept_index_list = 9;</code>
     * @param index The index of the element to return.
     * @return The acceptIndexList at the given index.
     */
    public int getAcceptIndexList(int index) {
      return acceptIndexList_.getInt(index);
    }
    private int acceptIndexListMemoizedSerializedSize = -1;

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getAcceptIndexListList().size() > 0) {
        output.writeUInt32NoTag(74);
        output.writeUInt32NoTag(acceptIndexListMemoizedSerializedSize);
      }
      for (int i = 0; i < acceptIndexList_.size(); i++) {
        output.writeUInt32NoTag(acceptIndexList_.getInt(i));
      }
      if (retcode_ != 0) {
        output.writeInt32(13, retcode_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetAcceptPicNumMap(),
          AcceptPicNumMapDefaultEntryHolder.defaultEntry,
          15);
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < acceptIndexList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(acceptIndexList_.getInt(i));
        }
        size += dataSize;
        if (!getAcceptIndexListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        acceptIndexListMemoizedSerializedSize = dataSize;
      }
      if (retcode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, retcode_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetAcceptPicNumMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        acceptPicNumMap__ = AcceptPicNumMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(15, acceptPicNumMap__);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp other = (emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp) obj;

      if (!internalGetAcceptPicNumMap().equals(
          other.internalGetAcceptPicNumMap())) return false;
      if (getRetcode()
          != other.getRetcode()) return false;
      if (!getAcceptIndexListList()
          .equals(other.getAcceptIndexListList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetAcceptPicNumMap().getMap().isEmpty()) {
        hash = (37 * hash) + ACCEPT_PIC_NUM_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetAcceptPicNumMap().hashCode();
      }
      hash = (37 * hash) + RETCODE_FIELD_NUMBER;
      hash = (53 * hash) + getRetcode();
      if (getAcceptIndexListCount() > 0) {
        hash = (37 * hash) + ACCEPT_INDEX_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getAcceptIndexListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * CmdId: 7340
     * Obf: DMOMEJPEGMC
     * </pre>
     *
     * Protobuf type {@code BlessingAcceptAllGivePicRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BlessingAcceptAllGivePicRsp)
        emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.internal_static_BlessingAcceptAllGivePicRsp_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 15:
            return internalGetAcceptPicNumMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 15:
            return internalGetMutableAcceptPicNumMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.internal_static_BlessingAcceptAllGivePicRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp.class, emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableAcceptPicNumMap().clear();
        retcode_ = 0;

        acceptIndexList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.internal_static_BlessingAcceptAllGivePicRsp_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp build() {
        emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp buildPartial() {
        emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp result = new emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp(this);
        int from_bitField0_ = bitField0_;
        result.acceptPicNumMap_ = internalGetAcceptPicNumMap();
        result.acceptPicNumMap_.makeImmutable();
        result.retcode_ = retcode_;
        if (((bitField0_ & 0x00000002) != 0)) {
          acceptIndexList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.acceptIndexList_ = acceptIndexList_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp) {
          return mergeFrom((emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp other) {
        if (other == emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp.getDefaultInstance()) return this;
        internalGetMutableAcceptPicNumMap().mergeFrom(
            other.internalGetAcceptPicNumMap());
        if (other.getRetcode() != 0) {
          setRetcode(other.getRetcode());
        }
        if (!other.acceptIndexList_.isEmpty()) {
          if (acceptIndexList_.isEmpty()) {
            acceptIndexList_ = other.acceptIndexList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureAcceptIndexListIsMutable();
            acceptIndexList_.addAll(other.acceptIndexList_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> acceptPicNumMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetAcceptPicNumMap() {
        if (acceptPicNumMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              AcceptPicNumMapDefaultEntryHolder.defaultEntry);
        }
        return acceptPicNumMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableAcceptPicNumMap() {
        onChanged();;
        if (acceptPicNumMap_ == null) {
          acceptPicNumMap_ = com.google.protobuf.MapField.newMapField(
              AcceptPicNumMapDefaultEntryHolder.defaultEntry);
        }
        if (!acceptPicNumMap_.isMutable()) {
          acceptPicNumMap_ = acceptPicNumMap_.copy();
        }
        return acceptPicNumMap_;
      }

      public int getAcceptPicNumMapCount() {
        return internalGetAcceptPicNumMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
       */

      @java.lang.Override
      public boolean containsAcceptPicNumMap(
          int key) {
        
        return internalGetAcceptPicNumMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getAcceptPicNumMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getAcceptPicNumMap() {
        return getAcceptPicNumMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getAcceptPicNumMapMap() {
        return internalGetAcceptPicNumMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
       */
      @java.lang.Override

      public int getAcceptPicNumMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetAcceptPicNumMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
       */
      @java.lang.Override

      public int getAcceptPicNumMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetAcceptPicNumMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearAcceptPicNumMap() {
        internalGetMutableAcceptPicNumMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
       */

      public Builder removeAcceptPicNumMap(
          int key) {
        
        internalGetMutableAcceptPicNumMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableAcceptPicNumMap() {
        return internalGetMutableAcceptPicNumMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
       */
      public Builder putAcceptPicNumMap(
          int key,
          int value) {
        
        
        internalGetMutableAcceptPicNumMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; accept_pic_num_map = 15;</code>
       */

      public Builder putAllAcceptPicNumMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableAcceptPicNumMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private int retcode_ ;
      /**
       * <code>int32 retcode = 13;</code>
       * @return The retcode.
       */
      @java.lang.Override
      public int getRetcode() {
        return retcode_;
      }
      /**
       * <code>int32 retcode = 13;</code>
       * @param value The retcode to set.
       * @return This builder for chaining.
       */
      public Builder setRetcode(int value) {
        
        retcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 retcode = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearRetcode() {
        
        retcode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList acceptIndexList_ = emptyIntList();
      private void ensureAcceptIndexListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          acceptIndexList_ = mutableCopy(acceptIndexList_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 accept_index_list = 9;</code>
       * @return A list containing the acceptIndexList.
       */
      public java.util.List<java.lang.Integer>
          getAcceptIndexListList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(acceptIndexList_) : acceptIndexList_;
      }
      /**
       * <code>repeated uint32 accept_index_list = 9;</code>
       * @return The count of acceptIndexList.
       */
      public int getAcceptIndexListCount() {
        return acceptIndexList_.size();
      }
      /**
       * <code>repeated uint32 accept_index_list = 9;</code>
       * @param index The index of the element to return.
       * @return The acceptIndexList at the given index.
       */
      public int getAcceptIndexList(int index) {
        return acceptIndexList_.getInt(index);
      }
      /**
       * <code>repeated uint32 accept_index_list = 9;</code>
       * @param index The index to set the value at.
       * @param value The acceptIndexList to set.
       * @return This builder for chaining.
       */
      public Builder setAcceptIndexList(
          int index, int value) {
        ensureAcceptIndexListIsMutable();
        acceptIndexList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 accept_index_list = 9;</code>
       * @param value The acceptIndexList to add.
       * @return This builder for chaining.
       */
      public Builder addAcceptIndexList(int value) {
        ensureAcceptIndexListIsMutable();
        acceptIndexList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 accept_index_list = 9;</code>
       * @param values The acceptIndexList to add.
       * @return This builder for chaining.
       */
      public Builder addAllAcceptIndexList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAcceptIndexListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, acceptIndexList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 accept_index_list = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearAcceptIndexList() {
        acceptIndexList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:BlessingAcceptAllGivePicRsp)
    }

    // @@protoc_insertion_point(class_scope:BlessingAcceptAllGivePicRsp)
    private static final emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp();
    }

    public static emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlessingAcceptAllGivePicRsp>
        PARSER = new com.google.protobuf.AbstractParser<BlessingAcceptAllGivePicRsp>() {
      @java.lang.Override
      public BlessingAcceptAllGivePicRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlessingAcceptAllGivePicRsp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlessingAcceptAllGivePicRsp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlessingAcceptAllGivePicRsp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.BlessingAcceptAllGivePicRspOuterClass.BlessingAcceptAllGivePicRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BlessingAcceptAllGivePicRsp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BlessingAcceptAllGivePicRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BlessingAcceptAllGivePicRsp_AcceptPicNumMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BlessingAcceptAllGivePicRsp_AcceptPicNumMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n!BlessingAcceptAllGivePicRsp.proto\"\320\001\n\033" +
      "BlessingAcceptAllGivePicRsp\022M\n\022accept_pi" +
      "c_num_map\030\017 \003(\01321.BlessingAcceptAllGiveP" +
      "icRsp.AcceptPicNumMapEntry\022\017\n\007retcode\030\r " +
      "\001(\005\022\031\n\021accept_index_list\030\t \003(\r\0326\n\024Accept" +
      "PicNumMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001" +
      "(\r:\0028\001B\033\n\031emu.grasscutter.net.protob\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_BlessingAcceptAllGivePicRsp_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_BlessingAcceptAllGivePicRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BlessingAcceptAllGivePicRsp_descriptor,
        new java.lang.String[] { "AcceptPicNumMap", "Retcode", "AcceptIndexList", });
    internal_static_BlessingAcceptAllGivePicRsp_AcceptPicNumMapEntry_descriptor =
      internal_static_BlessingAcceptAllGivePicRsp_descriptor.getNestedTypes().get(0);
    internal_static_BlessingAcceptAllGivePicRsp_AcceptPicNumMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BlessingAcceptAllGivePicRsp_AcceptPicNumMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
