// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ArenaChallengeInfo.proto

package emu.grasscutter.net.proto;

public final class ArenaChallengeInfoOuterClass {
  private ArenaChallengeInfoOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ArenaChallengeInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ArenaChallengeInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
     */
    int getLevelOpenTimeMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
     */
    boolean containsLevelOpenTimeMap(
        int key);
    /**
     * Use {@link #getLevelOpenTimeMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLevelOpenTimeMap();
    /**
     * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLevelOpenTimeMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
     */

    int getLevelOpenTimeMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
     */

    int getLevelOpenTimeMapOrThrow(
        int key);

    /**
     * <code>uint32 worldLevel = 6;</code>
     * @return The worldLevel.
     */
    int getWorldLevel();

    /**
     * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
     */
    java.util.List<emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel> 
        getLevelListList();
    /**
     * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
     */
    emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel getLevelList(int index);
    /**
     * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
     */
    int getLevelListCount();
    /**
     * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
     */
    java.util.List<? extends emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevelOrBuilder> 
        getLevelListOrBuilderList();
    /**
     * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
     */
    emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevelOrBuilder getLevelListOrBuilder(
        int index);

    /**
     * <code>bool isFinishAnyLevel = 5;</code>
     * @return The isFinishAnyLevel.
     */
    boolean getIsFinishAnyLevel();
  }
  /**
   * Protobuf type {@code ArenaChallengeInfo}
   */
  public static final class ArenaChallengeInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ArenaChallengeInfo)
      ArenaChallengeInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ArenaChallengeInfo.newBuilder() to construct.
    private ArenaChallengeInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ArenaChallengeInfo() {
      levelList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ArenaChallengeInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ArenaChallengeInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                levelOpenTimeMap_ = com.google.protobuf.MapField.newMapField(
                    LevelOpenTimeMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              levelOpenTimeMap__ = input.readMessage(
                  LevelOpenTimeMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              levelOpenTimeMap_.getMutableMap().put(
                  levelOpenTimeMap__.getKey(), levelOpenTimeMap__.getValue());
              break;
            }
            case 40: {

              isFinishAnyLevel_ = input.readBool();
              break;
            }
            case 48: {

              worldLevel_ = input.readUInt32();
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                levelList_ = new java.util.ArrayList<emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel>();
                mutable_bitField0_ |= 0x00000002;
              }
              levelList_.add(
                  input.readMessage(emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          levelList_ = java.util.Collections.unmodifiableList(levelList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.internal_static_ArenaChallengeInfo_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetLevelOpenTimeMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.internal_static_ArenaChallengeInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo.class, emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo.Builder.class);
    }

    public static final int LEVELOPENTIMEMAP_FIELD_NUMBER = 2;
    private static final class LevelOpenTimeMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.internal_static_ArenaChallengeInfo_LevelOpenTimeMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> levelOpenTimeMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetLevelOpenTimeMap() {
      if (levelOpenTimeMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LevelOpenTimeMapDefaultEntryHolder.defaultEntry);
      }
      return levelOpenTimeMap_;
    }

    public int getLevelOpenTimeMapCount() {
      return internalGetLevelOpenTimeMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
     */

    @java.lang.Override
    public boolean containsLevelOpenTimeMap(
        int key) {
      
      return internalGetLevelOpenTimeMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLevelOpenTimeMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getLevelOpenTimeMap() {
      return getLevelOpenTimeMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getLevelOpenTimeMapMap() {
      return internalGetLevelOpenTimeMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
     */
    @java.lang.Override

    public int getLevelOpenTimeMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLevelOpenTimeMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
     */
    @java.lang.Override

    public int getLevelOpenTimeMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLevelOpenTimeMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int WORLDLEVEL_FIELD_NUMBER = 6;
    private int worldLevel_;
    /**
     * <code>uint32 worldLevel = 6;</code>
     * @return The worldLevel.
     */
    @java.lang.Override
    public int getWorldLevel() {
      return worldLevel_;
    }

    public static final int LEVELLIST_FIELD_NUMBER = 7;
    private java.util.List<emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel> levelList_;
    /**
     * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
     */
    @java.lang.Override
    public java.util.List<emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel> getLevelListList() {
      return levelList_;
    }
    /**
     * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
     */
    @java.lang.Override
    public java.util.List<? extends emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevelOrBuilder> 
        getLevelListOrBuilderList() {
      return levelList_;
    }
    /**
     * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
     */
    @java.lang.Override
    public int getLevelListCount() {
      return levelList_.size();
    }
    /**
     * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel getLevelList(int index) {
      return levelList_.get(index);
    }
    /**
     * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevelOrBuilder getLevelListOrBuilder(
        int index) {
      return levelList_.get(index);
    }

    public static final int ISFINISHANYLEVEL_FIELD_NUMBER = 5;
    private boolean isFinishAnyLevel_;
    /**
     * <code>bool isFinishAnyLevel = 5;</code>
     * @return The isFinishAnyLevel.
     */
    @java.lang.Override
    public boolean getIsFinishAnyLevel() {
      return isFinishAnyLevel_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetLevelOpenTimeMap(),
          LevelOpenTimeMapDefaultEntryHolder.defaultEntry,
          2);
      if (isFinishAnyLevel_ != false) {
        output.writeBool(5, isFinishAnyLevel_);
      }
      if (worldLevel_ != 0) {
        output.writeUInt32(6, worldLevel_);
      }
      for (int i = 0; i < levelList_.size(); i++) {
        output.writeMessage(7, levelList_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetLevelOpenTimeMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        levelOpenTimeMap__ = LevelOpenTimeMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, levelOpenTimeMap__);
      }
      if (isFinishAnyLevel_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, isFinishAnyLevel_);
      }
      if (worldLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, worldLevel_);
      }
      for (int i = 0; i < levelList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, levelList_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo other = (emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo) obj;

      if (!internalGetLevelOpenTimeMap().equals(
          other.internalGetLevelOpenTimeMap())) return false;
      if (getWorldLevel()
          != other.getWorldLevel()) return false;
      if (!getLevelListList()
          .equals(other.getLevelListList())) return false;
      if (getIsFinishAnyLevel()
          != other.getIsFinishAnyLevel()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (!internalGetLevelOpenTimeMap().getMap().isEmpty()) {
        hash = (37 * hash) + LEVELOPENTIMEMAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLevelOpenTimeMap().hashCode();
      }
      hash = (37 * hash) + WORLDLEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getWorldLevel();
      if (getLevelListCount() > 0) {
        hash = (37 * hash) + LEVELLIST_FIELD_NUMBER;
        hash = (53 * hash) + getLevelListList().hashCode();
      }
      hash = (37 * hash) + ISFINISHANYLEVEL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsFinishAnyLevel());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code ArenaChallengeInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ArenaChallengeInfo)
        emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.internal_static_ArenaChallengeInfo_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetLevelOpenTimeMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutableLevelOpenTimeMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.internal_static_ArenaChallengeInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo.class, emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLevelListFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        internalGetMutableLevelOpenTimeMap().clear();
        worldLevel_ = 0;

        if (levelListBuilder_ == null) {
          levelList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          levelListBuilder_.clear();
        }
        isFinishAnyLevel_ = false;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.internal_static_ArenaChallengeInfo_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo build() {
        emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo buildPartial() {
        emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo result = new emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo(this);
        int from_bitField0_ = bitField0_;
        result.levelOpenTimeMap_ = internalGetLevelOpenTimeMap();
        result.levelOpenTimeMap_.makeImmutable();
        result.worldLevel_ = worldLevel_;
        if (levelListBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            levelList_ = java.util.Collections.unmodifiableList(levelList_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.levelList_ = levelList_;
        } else {
          result.levelList_ = levelListBuilder_.build();
        }
        result.isFinishAnyLevel_ = isFinishAnyLevel_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo) {
          return mergeFrom((emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo other) {
        if (other == emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo.getDefaultInstance()) return this;
        internalGetMutableLevelOpenTimeMap().mergeFrom(
            other.internalGetLevelOpenTimeMap());
        if (other.getWorldLevel() != 0) {
          setWorldLevel(other.getWorldLevel());
        }
        if (levelListBuilder_ == null) {
          if (!other.levelList_.isEmpty()) {
            if (levelList_.isEmpty()) {
              levelList_ = other.levelList_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureLevelListIsMutable();
              levelList_.addAll(other.levelList_);
            }
            onChanged();
          }
        } else {
          if (!other.levelList_.isEmpty()) {
            if (levelListBuilder_.isEmpty()) {
              levelListBuilder_.dispose();
              levelListBuilder_ = null;
              levelList_ = other.levelList_;
              bitField0_ = (bitField0_ & ~0x00000002);
              levelListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getLevelListFieldBuilder() : null;
            } else {
              levelListBuilder_.addAllMessages(other.levelList_);
            }
          }
        }
        if (other.getIsFinishAnyLevel() != false) {
          setIsFinishAnyLevel(other.getIsFinishAnyLevel());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> levelOpenTimeMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetLevelOpenTimeMap() {
        if (levelOpenTimeMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LevelOpenTimeMapDefaultEntryHolder.defaultEntry);
        }
        return levelOpenTimeMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableLevelOpenTimeMap() {
        onChanged();;
        if (levelOpenTimeMap_ == null) {
          levelOpenTimeMap_ = com.google.protobuf.MapField.newMapField(
              LevelOpenTimeMapDefaultEntryHolder.defaultEntry);
        }
        if (!levelOpenTimeMap_.isMutable()) {
          levelOpenTimeMap_ = levelOpenTimeMap_.copy();
        }
        return levelOpenTimeMap_;
      }

      public int getLevelOpenTimeMapCount() {
        return internalGetLevelOpenTimeMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
       */

      @java.lang.Override
      public boolean containsLevelOpenTimeMap(
          int key) {
        
        return internalGetLevelOpenTimeMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLevelOpenTimeMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getLevelOpenTimeMap() {
        return getLevelOpenTimeMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getLevelOpenTimeMapMap() {
        return internalGetLevelOpenTimeMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
       */
      @java.lang.Override

      public int getLevelOpenTimeMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLevelOpenTimeMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
       */
      @java.lang.Override

      public int getLevelOpenTimeMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLevelOpenTimeMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLevelOpenTimeMap() {
        internalGetMutableLevelOpenTimeMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
       */

      public Builder removeLevelOpenTimeMap(
          int key) {
        
        internalGetMutableLevelOpenTimeMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableLevelOpenTimeMap() {
        return internalGetMutableLevelOpenTimeMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
       */
      public Builder putLevelOpenTimeMap(
          int key,
          int value) {
        
        
        internalGetMutableLevelOpenTimeMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; levelOpenTimeMap = 2;</code>
       */

      public Builder putAllLevelOpenTimeMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableLevelOpenTimeMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private int worldLevel_ ;
      /**
       * <code>uint32 worldLevel = 6;</code>
       * @return The worldLevel.
       */
      @java.lang.Override
      public int getWorldLevel() {
        return worldLevel_;
      }
      /**
       * <code>uint32 worldLevel = 6;</code>
       * @param value The worldLevel to set.
       * @return This builder for chaining.
       */
      public Builder setWorldLevel(int value) {
        
        worldLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 worldLevel = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearWorldLevel() {
        
        worldLevel_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel> levelList_ =
        java.util.Collections.emptyList();
      private void ensureLevelListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          levelList_ = new java.util.ArrayList<emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel>(levelList_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel, emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel.Builder, emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevelOrBuilder> levelListBuilder_;

      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel> getLevelListList() {
        if (levelListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(levelList_);
        } else {
          return levelListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public int getLevelListCount() {
        if (levelListBuilder_ == null) {
          return levelList_.size();
        } else {
          return levelListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel getLevelList(int index) {
        if (levelListBuilder_ == null) {
          return levelList_.get(index);
        } else {
          return levelListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public Builder setLevelList(
          int index, emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel value) {
        if (levelListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLevelListIsMutable();
          levelList_.set(index, value);
          onChanged();
        } else {
          levelListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public Builder setLevelList(
          int index, emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel.Builder builderForValue) {
        if (levelListBuilder_ == null) {
          ensureLevelListIsMutable();
          levelList_.set(index, builderForValue.build());
          onChanged();
        } else {
          levelListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public Builder addLevelList(emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel value) {
        if (levelListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLevelListIsMutable();
          levelList_.add(value);
          onChanged();
        } else {
          levelListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public Builder addLevelList(
          int index, emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel value) {
        if (levelListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureLevelListIsMutable();
          levelList_.add(index, value);
          onChanged();
        } else {
          levelListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public Builder addLevelList(
          emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel.Builder builderForValue) {
        if (levelListBuilder_ == null) {
          ensureLevelListIsMutable();
          levelList_.add(builderForValue.build());
          onChanged();
        } else {
          levelListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public Builder addLevelList(
          int index, emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel.Builder builderForValue) {
        if (levelListBuilder_ == null) {
          ensureLevelListIsMutable();
          levelList_.add(index, builderForValue.build());
          onChanged();
        } else {
          levelListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public Builder addAllLevelList(
          java.lang.Iterable<? extends emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel> values) {
        if (levelListBuilder_ == null) {
          ensureLevelListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, levelList_);
          onChanged();
        } else {
          levelListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public Builder clearLevelList() {
        if (levelListBuilder_ == null) {
          levelList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          levelListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public Builder removeLevelList(int index) {
        if (levelListBuilder_ == null) {
          ensureLevelListIsMutable();
          levelList_.remove(index);
          onChanged();
        } else {
          levelListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel.Builder getLevelListBuilder(
          int index) {
        return getLevelListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevelOrBuilder getLevelListOrBuilder(
          int index) {
        if (levelListBuilder_ == null) {
          return levelList_.get(index);  } else {
          return levelListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public java.util.List<? extends emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevelOrBuilder> 
           getLevelListOrBuilderList() {
        if (levelListBuilder_ != null) {
          return levelListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(levelList_);
        }
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel.Builder addLevelListBuilder() {
        return getLevelListFieldBuilder().addBuilder(
            emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel.getDefaultInstance());
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel.Builder addLevelListBuilder(
          int index) {
        return getLevelListFieldBuilder().addBuilder(
            index, emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel.getDefaultInstance());
      }
      /**
       * <code>repeated .ArenaChallengeMonsterLevel levelList = 7;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel.Builder> 
           getLevelListBuilderList() {
        return getLevelListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel, emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel.Builder, emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevelOrBuilder> 
          getLevelListFieldBuilder() {
        if (levelListBuilder_ == null) {
          levelListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel, emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevel.Builder, emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.ArenaChallengeMonsterLevelOrBuilder>(
                  levelList_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          levelList_ = null;
        }
        return levelListBuilder_;
      }

      private boolean isFinishAnyLevel_ ;
      /**
       * <code>bool isFinishAnyLevel = 5;</code>
       * @return The isFinishAnyLevel.
       */
      @java.lang.Override
      public boolean getIsFinishAnyLevel() {
        return isFinishAnyLevel_;
      }
      /**
       * <code>bool isFinishAnyLevel = 5;</code>
       * @param value The isFinishAnyLevel to set.
       * @return This builder for chaining.
       */
      public Builder setIsFinishAnyLevel(boolean value) {
        
        isFinishAnyLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool isFinishAnyLevel = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsFinishAnyLevel() {
        
        isFinishAnyLevel_ = false;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ArenaChallengeInfo)
    }

    // @@protoc_insertion_point(class_scope:ArenaChallengeInfo)
    private static final emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo();
    }

    public static emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ArenaChallengeInfo>
        PARSER = new com.google.protobuf.AbstractParser<ArenaChallengeInfo>() {
      @java.lang.Override
      public ArenaChallengeInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ArenaChallengeInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ArenaChallengeInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ArenaChallengeInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.ArenaChallengeInfoOuterClass.ArenaChallengeInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ArenaChallengeInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ArenaChallengeInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ArenaChallengeInfo_LevelOpenTimeMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ArenaChallengeInfo_LevelOpenTimeMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\030ArenaChallengeInfo.proto\032 ArenaChallen" +
      "geMonsterLevel.proto\"\360\001\n\022ArenaChallengeI" +
      "nfo\022C\n\020levelOpenTimeMap\030\002 \003(\0132).ArenaCha" +
      "llengeInfo.LevelOpenTimeMapEntry\022\022\n\nworl" +
      "dLevel\030\006 \001(\r\022.\n\tlevelList\030\007 \003(\0132\033.ArenaC" +
      "hallengeMonsterLevel\022\030\n\020isFinishAnyLevel" +
      "\030\005 \001(\010\0327\n\025LevelOpenTimeMapEntry\022\013\n\003key\030\001" +
      " \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001B\033\n\031emu.grasscutt" +
      "er.net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.getDescriptor(),
        });
    internal_static_ArenaChallengeInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ArenaChallengeInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ArenaChallengeInfo_descriptor,
        new java.lang.String[] { "LevelOpenTimeMap", "WorldLevel", "LevelList", "IsFinishAnyLevel", });
    internal_static_ArenaChallengeInfo_LevelOpenTimeMapEntry_descriptor =
      internal_static_ArenaChallengeInfo_descriptor.getNestedTypes().get(0);
    internal_static_ArenaChallengeInfo_LevelOpenTimeMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ArenaChallengeInfo_LevelOpenTimeMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    emu.grasscutter.net.proto.ArenaChallengeMonsterLevelOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
