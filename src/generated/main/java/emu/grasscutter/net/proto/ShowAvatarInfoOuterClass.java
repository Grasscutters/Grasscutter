// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ShowAvatarInfo.proto

package emu.grasscutter.net.proto;

public final class ShowAvatarInfoOuterClass {
  private ShowAvatarInfoOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ShowAvatarInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ShowAvatarInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 avatar_id = 1;</code>
     * @return The avatarId.
     */
    int getAvatarId();

    /**
     * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
     */
    int getPropMapCount();
    /**
     * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
     */
    boolean containsPropMap(
        int key);
    /**
     * Use {@link #getPropMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue>
    getPropMap();
    /**
     * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
     */
    java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue>
    getPropMapMap();
    /**
     * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
     */

    emu.grasscutter.net.proto.PropValueOuterClass.PropValue getPropMapOrDefault(
        int key,
        emu.grasscutter.net.proto.PropValueOuterClass.PropValue defaultValue);
    /**
     * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
     */

    emu.grasscutter.net.proto.PropValueOuterClass.PropValue getPropMapOrThrow(
        int key);

    /**
     * <code>repeated uint32 talent_id_list = 3;</code>
     * @return A list containing the talentIdList.
     */
    java.util.List<java.lang.Integer> getTalentIdListList();
    /**
     * <code>repeated uint32 talent_id_list = 3;</code>
     * @return The count of talentIdList.
     */
    int getTalentIdListCount();
    /**
     * <code>repeated uint32 talent_id_list = 3;</code>
     * @param index The index of the element to return.
     * @return The talentIdList at the given index.
     */
    int getTalentIdList(int index);

    /**
     * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
     */
    int getFightPropMapCount();
    /**
     * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
     */
    boolean containsFightPropMap(
        int key);
    /**
     * Use {@link #getFightPropMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Float>
    getFightPropMap();
    /**
     * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Float>
    getFightPropMapMap();
    /**
     * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
     */

    float getFightPropMapOrDefault(
        int key,
        float defaultValue);
    /**
     * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
     */

    float getFightPropMapOrThrow(
        int key);

    /**
     * <code>uint32 skill_depot_id = 5;</code>
     * @return The skillDepotId.
     */
    int getSkillDepotId();

    /**
     * <code>uint32 core_proud_skill_level = 6;</code>
     * @return The coreProudSkillLevel.
     */
    int getCoreProudSkillLevel();

    /**
     * <code>repeated uint32 inherent_proud_skill_list = 7;</code>
     * @return A list containing the inherentProudSkillList.
     */
    java.util.List<java.lang.Integer> getInherentProudSkillListList();
    /**
     * <code>repeated uint32 inherent_proud_skill_list = 7;</code>
     * @return The count of inherentProudSkillList.
     */
    int getInherentProudSkillListCount();
    /**
     * <code>repeated uint32 inherent_proud_skill_list = 7;</code>
     * @param index The index of the element to return.
     * @return The inherentProudSkillList at the given index.
     */
    int getInherentProudSkillList(int index);

    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
     */
    int getSkillLevelMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
     */
    boolean containsSkillLevelMap(
        int key);
    /**
     * Use {@link #getSkillLevelMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getSkillLevelMap();
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getSkillLevelMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
     */

    int getSkillLevelMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
     */

    int getSkillLevelMapOrThrow(
        int key);

    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
     */
    int getProudSkillExtraLevelMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
     */
    boolean containsProudSkillExtraLevelMap(
        int key);
    /**
     * Use {@link #getProudSkillExtraLevelMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getProudSkillExtraLevelMap();
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getProudSkillExtraLevelMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
     */

    int getProudSkillExtraLevelMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
     */

    int getProudSkillExtraLevelMapOrThrow(
        int key);

    /**
     * <code>repeated .ShowEquip equip_list = 10;</code>
     */
    java.util.List<emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip> 
        getEquipListList();
    /**
     * <code>repeated .ShowEquip equip_list = 10;</code>
     */
    emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip getEquipList(int index);
    /**
     * <code>repeated .ShowEquip equip_list = 10;</code>
     */
    int getEquipListCount();
    /**
     * <code>repeated .ShowEquip equip_list = 10;</code>
     */
    java.util.List<? extends emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquipOrBuilder> 
        getEquipListOrBuilderList();
    /**
     * <code>repeated .ShowEquip equip_list = 10;</code>
     */
    emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquipOrBuilder getEquipListOrBuilder(
        int index);

    /**
     * <code>.AvatarFetterInfo fetter_info = 11;</code>
     * @return Whether the fetterInfo field is set.
     */
    boolean hasFetterInfo();
    /**
     * <code>.AvatarFetterInfo fetter_info = 11;</code>
     * @return The fetterInfo.
     */
    emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo getFetterInfo();
    /**
     * <code>.AvatarFetterInfo fetter_info = 11;</code>
     */
    emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfoOrBuilder getFetterInfoOrBuilder();

    /**
     * <code>uint32 costume_id = 12;</code>
     * @return The costumeId.
     */
    int getCostumeId();

    /**
     * <code>.AvatarExcelInfo excel_info = 13;</code>
     * @return Whether the excelInfo field is set.
     */
    boolean hasExcelInfo();
    /**
     * <code>.AvatarExcelInfo excel_info = 13;</code>
     * @return The excelInfo.
     */
    emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo getExcelInfo();
    /**
     * <code>.AvatarExcelInfo excel_info = 13;</code>
     */
    emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfoOrBuilder getExcelInfoOrBuilder();
  }
  /**
   * <pre>
   * Name: LFKBPFHPKCN
   * </pre>
   *
   * Protobuf type {@code ShowAvatarInfo}
   */
  public static final class ShowAvatarInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ShowAvatarInfo)
      ShowAvatarInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ShowAvatarInfo.newBuilder() to construct.
    private ShowAvatarInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ShowAvatarInfo() {
      talentIdList_ = emptyIntList();
      inherentProudSkillList_ = emptyIntList();
      equipList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ShowAvatarInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ShowAvatarInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              avatarId_ = input.readUInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                propMap_ = com.google.protobuf.MapField.newMapField(
                    PropMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue>
              propMap__ = input.readMessage(
                  PropMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              propMap_.getMutableMap().put(
                  propMap__.getKey(), propMap__.getValue());
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                talentIdList_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              talentIdList_.addInt(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                talentIdList_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                talentIdList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                fightPropMap_ = com.google.protobuf.MapField.newMapField(
                    FightPropMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000004;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Float>
              fightPropMap__ = input.readMessage(
                  FightPropMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              fightPropMap_.getMutableMap().put(
                  fightPropMap__.getKey(), fightPropMap__.getValue());
              break;
            }
            case 40: {

              skillDepotId_ = input.readUInt32();
              break;
            }
            case 48: {

              coreProudSkillLevel_ = input.readUInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                inherentProudSkillList_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              inherentProudSkillList_.addInt(input.readUInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                inherentProudSkillList_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                inherentProudSkillList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000010) != 0)) {
                skillLevelMap_ = com.google.protobuf.MapField.newMapField(
                    SkillLevelMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000010;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              skillLevelMap__ = input.readMessage(
                  SkillLevelMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              skillLevelMap_.getMutableMap().put(
                  skillLevelMap__.getKey(), skillLevelMap__.getValue());
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000020) != 0)) {
                proudSkillExtraLevelMap_ = com.google.protobuf.MapField.newMapField(
                    ProudSkillExtraLevelMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000020;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              proudSkillExtraLevelMap__ = input.readMessage(
                  ProudSkillExtraLevelMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              proudSkillExtraLevelMap_.getMutableMap().put(
                  proudSkillExtraLevelMap__.getKey(), proudSkillExtraLevelMap__.getValue());
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000040) != 0)) {
                equipList_ = new java.util.ArrayList<emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip>();
                mutable_bitField0_ |= 0x00000040;
              }
              equipList_.add(
                  input.readMessage(emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip.parser(), extensionRegistry));
              break;
            }
            case 90: {
              emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo.Builder subBuilder = null;
              if (fetterInfo_ != null) {
                subBuilder = fetterInfo_.toBuilder();
              }
              fetterInfo_ = input.readMessage(emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(fetterInfo_);
                fetterInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 96: {

              costumeId_ = input.readUInt32();
              break;
            }
            case 106: {
              emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo.Builder subBuilder = null;
              if (excelInfo_ != null) {
                subBuilder = excelInfo_.toBuilder();
              }
              excelInfo_ = input.readMessage(emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(excelInfo_);
                excelInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          talentIdList_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          inherentProudSkillList_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000040) != 0)) {
          equipList_ = java.util.Collections.unmodifiableList(equipList_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.internal_static_ShowAvatarInfo_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 2:
          return internalGetPropMap();
        case 4:
          return internalGetFightPropMap();
        case 8:
          return internalGetSkillLevelMap();
        case 9:
          return internalGetProudSkillExtraLevelMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.internal_static_ShowAvatarInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo.class, emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo.Builder.class);
    }

    public static final int AVATAR_ID_FIELD_NUMBER = 1;
    private int avatarId_;
    /**
     * <code>uint32 avatar_id = 1;</code>
     * @return The avatarId.
     */
    @java.lang.Override
    public int getAvatarId() {
      return avatarId_;
    }

    public static final int PROP_MAP_FIELD_NUMBER = 2;
    private static final class PropMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue>newDefaultInstance(
                  emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.internal_static_ShowAvatarInfo_PropMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  emu.grasscutter.net.proto.PropValueOuterClass.PropValue.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue> propMap_;
    private com.google.protobuf.MapField<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue>
    internalGetPropMap() {
      if (propMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PropMapDefaultEntryHolder.defaultEntry);
      }
      return propMap_;
    }

    public int getPropMapCount() {
      return internalGetPropMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
     */

    @java.lang.Override
    public boolean containsPropMap(
        int key) {
      
      return internalGetPropMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPropMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue> getPropMap() {
      return getPropMapMap();
    }
    /**
     * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue> getPropMapMap() {
      return internalGetPropMap().getMap();
    }
    /**
     * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
     */
    @java.lang.Override

    public emu.grasscutter.net.proto.PropValueOuterClass.PropValue getPropMapOrDefault(
        int key,
        emu.grasscutter.net.proto.PropValueOuterClass.PropValue defaultValue) {
      
      java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue> map =
          internalGetPropMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
     */
    @java.lang.Override

    public emu.grasscutter.net.proto.PropValueOuterClass.PropValue getPropMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue> map =
          internalGetPropMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int TALENT_ID_LIST_FIELD_NUMBER = 3;
    private com.google.protobuf.Internal.IntList talentIdList_;
    /**
     * <code>repeated uint32 talent_id_list = 3;</code>
     * @return A list containing the talentIdList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getTalentIdListList() {
      return talentIdList_;
    }
    /**
     * <code>repeated uint32 talent_id_list = 3;</code>
     * @return The count of talentIdList.
     */
    public int getTalentIdListCount() {
      return talentIdList_.size();
    }
    /**
     * <code>repeated uint32 talent_id_list = 3;</code>
     * @param index The index of the element to return.
     * @return The talentIdList at the given index.
     */
    public int getTalentIdList(int index) {
      return talentIdList_.getInt(index);
    }
    private int talentIdListMemoizedSerializedSize = -1;

    public static final int FIGHT_PROP_MAP_FIELD_NUMBER = 4;
    private static final class FightPropMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Float> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Float>newDefaultInstance(
                  emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.internal_static_ShowAvatarInfo_FightPropMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.FLOAT,
                  0F);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Float> fightPropMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
    internalGetFightPropMap() {
      if (fightPropMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FightPropMapDefaultEntryHolder.defaultEntry);
      }
      return fightPropMap_;
    }

    public int getFightPropMapCount() {
      return internalGetFightPropMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
     */

    @java.lang.Override
    public boolean containsFightPropMap(
        int key) {
      
      return internalGetFightPropMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFightPropMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Float> getFightPropMap() {
      return getFightPropMapMap();
    }
    /**
     * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Float> getFightPropMapMap() {
      return internalGetFightPropMap().getMap();
    }
    /**
     * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
     */
    @java.lang.Override

    public float getFightPropMapOrDefault(
        int key,
        float defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Float> map =
          internalGetFightPropMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
     */
    @java.lang.Override

    public float getFightPropMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Float> map =
          internalGetFightPropMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int SKILL_DEPOT_ID_FIELD_NUMBER = 5;
    private int skillDepotId_;
    /**
     * <code>uint32 skill_depot_id = 5;</code>
     * @return The skillDepotId.
     */
    @java.lang.Override
    public int getSkillDepotId() {
      return skillDepotId_;
    }

    public static final int CORE_PROUD_SKILL_LEVEL_FIELD_NUMBER = 6;
    private int coreProudSkillLevel_;
    /**
     * <code>uint32 core_proud_skill_level = 6;</code>
     * @return The coreProudSkillLevel.
     */
    @java.lang.Override
    public int getCoreProudSkillLevel() {
      return coreProudSkillLevel_;
    }

    public static final int INHERENT_PROUD_SKILL_LIST_FIELD_NUMBER = 7;
    private com.google.protobuf.Internal.IntList inherentProudSkillList_;
    /**
     * <code>repeated uint32 inherent_proud_skill_list = 7;</code>
     * @return A list containing the inherentProudSkillList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getInherentProudSkillListList() {
      return inherentProudSkillList_;
    }
    /**
     * <code>repeated uint32 inherent_proud_skill_list = 7;</code>
     * @return The count of inherentProudSkillList.
     */
    public int getInherentProudSkillListCount() {
      return inherentProudSkillList_.size();
    }
    /**
     * <code>repeated uint32 inherent_proud_skill_list = 7;</code>
     * @param index The index of the element to return.
     * @return The inherentProudSkillList at the given index.
     */
    public int getInherentProudSkillList(int index) {
      return inherentProudSkillList_.getInt(index);
    }
    private int inherentProudSkillListMemoizedSerializedSize = -1;

    public static final int SKILL_LEVEL_MAP_FIELD_NUMBER = 8;
    private static final class SkillLevelMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.internal_static_ShowAvatarInfo_SkillLevelMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> skillLevelMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetSkillLevelMap() {
      if (skillLevelMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            SkillLevelMapDefaultEntryHolder.defaultEntry);
      }
      return skillLevelMap_;
    }

    public int getSkillLevelMapCount() {
      return internalGetSkillLevelMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
     */

    @java.lang.Override
    public boolean containsSkillLevelMap(
        int key) {
      
      return internalGetSkillLevelMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getSkillLevelMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getSkillLevelMap() {
      return getSkillLevelMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getSkillLevelMapMap() {
      return internalGetSkillLevelMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
     */
    @java.lang.Override

    public int getSkillLevelMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetSkillLevelMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
     */
    @java.lang.Override

    public int getSkillLevelMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetSkillLevelMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int PROUD_SKILL_EXTRA_LEVEL_MAP_FIELD_NUMBER = 9;
    private static final class ProudSkillExtraLevelMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.internal_static_ShowAvatarInfo_ProudSkillExtraLevelMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> proudSkillExtraLevelMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetProudSkillExtraLevelMap() {
      if (proudSkillExtraLevelMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            ProudSkillExtraLevelMapDefaultEntryHolder.defaultEntry);
      }
      return proudSkillExtraLevelMap_;
    }

    public int getProudSkillExtraLevelMapCount() {
      return internalGetProudSkillExtraLevelMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
     */

    @java.lang.Override
    public boolean containsProudSkillExtraLevelMap(
        int key) {
      
      return internalGetProudSkillExtraLevelMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getProudSkillExtraLevelMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getProudSkillExtraLevelMap() {
      return getProudSkillExtraLevelMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getProudSkillExtraLevelMapMap() {
      return internalGetProudSkillExtraLevelMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
     */
    @java.lang.Override

    public int getProudSkillExtraLevelMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetProudSkillExtraLevelMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
     */
    @java.lang.Override

    public int getProudSkillExtraLevelMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetProudSkillExtraLevelMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int EQUIP_LIST_FIELD_NUMBER = 10;
    private java.util.List<emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip> equipList_;
    /**
     * <code>repeated .ShowEquip equip_list = 10;</code>
     */
    @java.lang.Override
    public java.util.List<emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip> getEquipListList() {
      return equipList_;
    }
    /**
     * <code>repeated .ShowEquip equip_list = 10;</code>
     */
    @java.lang.Override
    public java.util.List<? extends emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquipOrBuilder> 
        getEquipListOrBuilderList() {
      return equipList_;
    }
    /**
     * <code>repeated .ShowEquip equip_list = 10;</code>
     */
    @java.lang.Override
    public int getEquipListCount() {
      return equipList_.size();
    }
    /**
     * <code>repeated .ShowEquip equip_list = 10;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip getEquipList(int index) {
      return equipList_.get(index);
    }
    /**
     * <code>repeated .ShowEquip equip_list = 10;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquipOrBuilder getEquipListOrBuilder(
        int index) {
      return equipList_.get(index);
    }

    public static final int FETTER_INFO_FIELD_NUMBER = 11;
    private emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo fetterInfo_;
    /**
     * <code>.AvatarFetterInfo fetter_info = 11;</code>
     * @return Whether the fetterInfo field is set.
     */
    @java.lang.Override
    public boolean hasFetterInfo() {
      return fetterInfo_ != null;
    }
    /**
     * <code>.AvatarFetterInfo fetter_info = 11;</code>
     * @return The fetterInfo.
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo getFetterInfo() {
      return fetterInfo_ == null ? emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo.getDefaultInstance() : fetterInfo_;
    }
    /**
     * <code>.AvatarFetterInfo fetter_info = 11;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfoOrBuilder getFetterInfoOrBuilder() {
      return getFetterInfo();
    }

    public static final int COSTUME_ID_FIELD_NUMBER = 12;
    private int costumeId_;
    /**
     * <code>uint32 costume_id = 12;</code>
     * @return The costumeId.
     */
    @java.lang.Override
    public int getCostumeId() {
      return costumeId_;
    }

    public static final int EXCEL_INFO_FIELD_NUMBER = 13;
    private emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo excelInfo_;
    /**
     * <code>.AvatarExcelInfo excel_info = 13;</code>
     * @return Whether the excelInfo field is set.
     */
    @java.lang.Override
    public boolean hasExcelInfo() {
      return excelInfo_ != null;
    }
    /**
     * <code>.AvatarExcelInfo excel_info = 13;</code>
     * @return The excelInfo.
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo getExcelInfo() {
      return excelInfo_ == null ? emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo.getDefaultInstance() : excelInfo_;
    }
    /**
     * <code>.AvatarExcelInfo excel_info = 13;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfoOrBuilder getExcelInfoOrBuilder() {
      return getExcelInfo();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (avatarId_ != 0) {
        output.writeUInt32(1, avatarId_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetPropMap(),
          PropMapDefaultEntryHolder.defaultEntry,
          2);
      if (getTalentIdListList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(talentIdListMemoizedSerializedSize);
      }
      for (int i = 0; i < talentIdList_.size(); i++) {
        output.writeUInt32NoTag(talentIdList_.getInt(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetFightPropMap(),
          FightPropMapDefaultEntryHolder.defaultEntry,
          4);
      if (skillDepotId_ != 0) {
        output.writeUInt32(5, skillDepotId_);
      }
      if (coreProudSkillLevel_ != 0) {
        output.writeUInt32(6, coreProudSkillLevel_);
      }
      if (getInherentProudSkillListList().size() > 0) {
        output.writeUInt32NoTag(58);
        output.writeUInt32NoTag(inherentProudSkillListMemoizedSerializedSize);
      }
      for (int i = 0; i < inherentProudSkillList_.size(); i++) {
        output.writeUInt32NoTag(inherentProudSkillList_.getInt(i));
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetSkillLevelMap(),
          SkillLevelMapDefaultEntryHolder.defaultEntry,
          8);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetProudSkillExtraLevelMap(),
          ProudSkillExtraLevelMapDefaultEntryHolder.defaultEntry,
          9);
      for (int i = 0; i < equipList_.size(); i++) {
        output.writeMessage(10, equipList_.get(i));
      }
      if (fetterInfo_ != null) {
        output.writeMessage(11, getFetterInfo());
      }
      if (costumeId_ != 0) {
        output.writeUInt32(12, costumeId_);
      }
      if (excelInfo_ != null) {
        output.writeMessage(13, getExcelInfo());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (avatarId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, avatarId_);
      }
      for (java.util.Map.Entry<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue> entry
           : internalGetPropMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue>
        propMap__ = PropMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, propMap__);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < talentIdList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(talentIdList_.getInt(i));
        }
        size += dataSize;
        if (!getTalentIdListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        talentIdListMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Float> entry
           : internalGetFightPropMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Float>
        fightPropMap__ = FightPropMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, fightPropMap__);
      }
      if (skillDepotId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, skillDepotId_);
      }
      if (coreProudSkillLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, coreProudSkillLevel_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < inherentProudSkillList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(inherentProudSkillList_.getInt(i));
        }
        size += dataSize;
        if (!getInherentProudSkillListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        inherentProudSkillListMemoizedSerializedSize = dataSize;
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetSkillLevelMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        skillLevelMap__ = SkillLevelMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(8, skillLevelMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetProudSkillExtraLevelMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        proudSkillExtraLevelMap__ = ProudSkillExtraLevelMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, proudSkillExtraLevelMap__);
      }
      for (int i = 0; i < equipList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, equipList_.get(i));
      }
      if (fetterInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getFetterInfo());
      }
      if (costumeId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, costumeId_);
      }
      if (excelInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, getExcelInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo other = (emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo) obj;

      if (getAvatarId()
          != other.getAvatarId()) return false;
      if (!internalGetPropMap().equals(
          other.internalGetPropMap())) return false;
      if (!getTalentIdListList()
          .equals(other.getTalentIdListList())) return false;
      if (!internalGetFightPropMap().equals(
          other.internalGetFightPropMap())) return false;
      if (getSkillDepotId()
          != other.getSkillDepotId()) return false;
      if (getCoreProudSkillLevel()
          != other.getCoreProudSkillLevel()) return false;
      if (!getInherentProudSkillListList()
          .equals(other.getInherentProudSkillListList())) return false;
      if (!internalGetSkillLevelMap().equals(
          other.internalGetSkillLevelMap())) return false;
      if (!internalGetProudSkillExtraLevelMap().equals(
          other.internalGetProudSkillExtraLevelMap())) return false;
      if (!getEquipListList()
          .equals(other.getEquipListList())) return false;
      if (hasFetterInfo() != other.hasFetterInfo()) return false;
      if (hasFetterInfo()) {
        if (!getFetterInfo()
            .equals(other.getFetterInfo())) return false;
      }
      if (getCostumeId()
          != other.getCostumeId()) return false;
      if (hasExcelInfo() != other.hasExcelInfo()) return false;
      if (hasExcelInfo()) {
        if (!getExcelInfo()
            .equals(other.getExcelInfo())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + AVATAR_ID_FIELD_NUMBER;
      hash = (53 * hash) + getAvatarId();
      if (!internalGetPropMap().getMap().isEmpty()) {
        hash = (37 * hash) + PROP_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPropMap().hashCode();
      }
      if (getTalentIdListCount() > 0) {
        hash = (37 * hash) + TALENT_ID_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getTalentIdListList().hashCode();
      }
      if (!internalGetFightPropMap().getMap().isEmpty()) {
        hash = (37 * hash) + FIGHT_PROP_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFightPropMap().hashCode();
      }
      hash = (37 * hash) + SKILL_DEPOT_ID_FIELD_NUMBER;
      hash = (53 * hash) + getSkillDepotId();
      hash = (37 * hash) + CORE_PROUD_SKILL_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getCoreProudSkillLevel();
      if (getInherentProudSkillListCount() > 0) {
        hash = (37 * hash) + INHERENT_PROUD_SKILL_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getInherentProudSkillListList().hashCode();
      }
      if (!internalGetSkillLevelMap().getMap().isEmpty()) {
        hash = (37 * hash) + SKILL_LEVEL_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetSkillLevelMap().hashCode();
      }
      if (!internalGetProudSkillExtraLevelMap().getMap().isEmpty()) {
        hash = (37 * hash) + PROUD_SKILL_EXTRA_LEVEL_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetProudSkillExtraLevelMap().hashCode();
      }
      if (getEquipListCount() > 0) {
        hash = (37 * hash) + EQUIP_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getEquipListList().hashCode();
      }
      if (hasFetterInfo()) {
        hash = (37 * hash) + FETTER_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getFetterInfo().hashCode();
      }
      hash = (37 * hash) + COSTUME_ID_FIELD_NUMBER;
      hash = (53 * hash) + getCostumeId();
      if (hasExcelInfo()) {
        hash = (37 * hash) + EXCEL_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getExcelInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Name: LFKBPFHPKCN
     * </pre>
     *
     * Protobuf type {@code ShowAvatarInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ShowAvatarInfo)
        emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.internal_static_ShowAvatarInfo_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetPropMap();
          case 4:
            return internalGetFightPropMap();
          case 8:
            return internalGetSkillLevelMap();
          case 9:
            return internalGetProudSkillExtraLevelMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 2:
            return internalGetMutablePropMap();
          case 4:
            return internalGetMutableFightPropMap();
          case 8:
            return internalGetMutableSkillLevelMap();
          case 9:
            return internalGetMutableProudSkillExtraLevelMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.internal_static_ShowAvatarInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo.class, emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getEquipListFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        avatarId_ = 0;

        internalGetMutablePropMap().clear();
        talentIdList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        internalGetMutableFightPropMap().clear();
        skillDepotId_ = 0;

        coreProudSkillLevel_ = 0;

        inherentProudSkillList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        internalGetMutableSkillLevelMap().clear();
        internalGetMutableProudSkillExtraLevelMap().clear();
        if (equipListBuilder_ == null) {
          equipList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          equipListBuilder_.clear();
        }
        if (fetterInfoBuilder_ == null) {
          fetterInfo_ = null;
        } else {
          fetterInfo_ = null;
          fetterInfoBuilder_ = null;
        }
        costumeId_ = 0;

        if (excelInfoBuilder_ == null) {
          excelInfo_ = null;
        } else {
          excelInfo_ = null;
          excelInfoBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.internal_static_ShowAvatarInfo_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo build() {
        emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo buildPartial() {
        emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo result = new emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo(this);
        int from_bitField0_ = bitField0_;
        result.avatarId_ = avatarId_;
        result.propMap_ = internalGetPropMap();
        result.propMap_.makeImmutable();
        if (((bitField0_ & 0x00000002) != 0)) {
          talentIdList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.talentIdList_ = talentIdList_;
        result.fightPropMap_ = internalGetFightPropMap();
        result.fightPropMap_.makeImmutable();
        result.skillDepotId_ = skillDepotId_;
        result.coreProudSkillLevel_ = coreProudSkillLevel_;
        if (((bitField0_ & 0x00000008) != 0)) {
          inherentProudSkillList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.inherentProudSkillList_ = inherentProudSkillList_;
        result.skillLevelMap_ = internalGetSkillLevelMap();
        result.skillLevelMap_.makeImmutable();
        result.proudSkillExtraLevelMap_ = internalGetProudSkillExtraLevelMap();
        result.proudSkillExtraLevelMap_.makeImmutable();
        if (equipListBuilder_ == null) {
          if (((bitField0_ & 0x00000040) != 0)) {
            equipList_ = java.util.Collections.unmodifiableList(equipList_);
            bitField0_ = (bitField0_ & ~0x00000040);
          }
          result.equipList_ = equipList_;
        } else {
          result.equipList_ = equipListBuilder_.build();
        }
        if (fetterInfoBuilder_ == null) {
          result.fetterInfo_ = fetterInfo_;
        } else {
          result.fetterInfo_ = fetterInfoBuilder_.build();
        }
        result.costumeId_ = costumeId_;
        if (excelInfoBuilder_ == null) {
          result.excelInfo_ = excelInfo_;
        } else {
          result.excelInfo_ = excelInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo) {
          return mergeFrom((emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo other) {
        if (other == emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo.getDefaultInstance()) return this;
        if (other.getAvatarId() != 0) {
          setAvatarId(other.getAvatarId());
        }
        internalGetMutablePropMap().mergeFrom(
            other.internalGetPropMap());
        if (!other.talentIdList_.isEmpty()) {
          if (talentIdList_.isEmpty()) {
            talentIdList_ = other.talentIdList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTalentIdListIsMutable();
            talentIdList_.addAll(other.talentIdList_);
          }
          onChanged();
        }
        internalGetMutableFightPropMap().mergeFrom(
            other.internalGetFightPropMap());
        if (other.getSkillDepotId() != 0) {
          setSkillDepotId(other.getSkillDepotId());
        }
        if (other.getCoreProudSkillLevel() != 0) {
          setCoreProudSkillLevel(other.getCoreProudSkillLevel());
        }
        if (!other.inherentProudSkillList_.isEmpty()) {
          if (inherentProudSkillList_.isEmpty()) {
            inherentProudSkillList_ = other.inherentProudSkillList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureInherentProudSkillListIsMutable();
            inherentProudSkillList_.addAll(other.inherentProudSkillList_);
          }
          onChanged();
        }
        internalGetMutableSkillLevelMap().mergeFrom(
            other.internalGetSkillLevelMap());
        internalGetMutableProudSkillExtraLevelMap().mergeFrom(
            other.internalGetProudSkillExtraLevelMap());
        if (equipListBuilder_ == null) {
          if (!other.equipList_.isEmpty()) {
            if (equipList_.isEmpty()) {
              equipList_ = other.equipList_;
              bitField0_ = (bitField0_ & ~0x00000040);
            } else {
              ensureEquipListIsMutable();
              equipList_.addAll(other.equipList_);
            }
            onChanged();
          }
        } else {
          if (!other.equipList_.isEmpty()) {
            if (equipListBuilder_.isEmpty()) {
              equipListBuilder_.dispose();
              equipListBuilder_ = null;
              equipList_ = other.equipList_;
              bitField0_ = (bitField0_ & ~0x00000040);
              equipListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getEquipListFieldBuilder() : null;
            } else {
              equipListBuilder_.addAllMessages(other.equipList_);
            }
          }
        }
        if (other.hasFetterInfo()) {
          mergeFetterInfo(other.getFetterInfo());
        }
        if (other.getCostumeId() != 0) {
          setCostumeId(other.getCostumeId());
        }
        if (other.hasExcelInfo()) {
          mergeExcelInfo(other.getExcelInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int avatarId_ ;
      /**
       * <code>uint32 avatar_id = 1;</code>
       * @return The avatarId.
       */
      @java.lang.Override
      public int getAvatarId() {
        return avatarId_;
      }
      /**
       * <code>uint32 avatar_id = 1;</code>
       * @param value The avatarId to set.
       * @return This builder for chaining.
       */
      public Builder setAvatarId(int value) {
        
        avatarId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 avatar_id = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearAvatarId() {
        
        avatarId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue> propMap_;
      private com.google.protobuf.MapField<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue>
      internalGetPropMap() {
        if (propMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PropMapDefaultEntryHolder.defaultEntry);
        }
        return propMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue>
      internalGetMutablePropMap() {
        onChanged();;
        if (propMap_ == null) {
          propMap_ = com.google.protobuf.MapField.newMapField(
              PropMapDefaultEntryHolder.defaultEntry);
        }
        if (!propMap_.isMutable()) {
          propMap_ = propMap_.copy();
        }
        return propMap_;
      }

      public int getPropMapCount() {
        return internalGetPropMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
       */

      @java.lang.Override
      public boolean containsPropMap(
          int key) {
        
        return internalGetPropMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPropMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue> getPropMap() {
        return getPropMapMap();
      }
      /**
       * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue> getPropMapMap() {
        return internalGetPropMap().getMap();
      }
      /**
       * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
       */
      @java.lang.Override

      public emu.grasscutter.net.proto.PropValueOuterClass.PropValue getPropMapOrDefault(
          int key,
          emu.grasscutter.net.proto.PropValueOuterClass.PropValue defaultValue) {
        
        java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue> map =
            internalGetPropMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
       */
      @java.lang.Override

      public emu.grasscutter.net.proto.PropValueOuterClass.PropValue getPropMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue> map =
            internalGetPropMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPropMap() {
        internalGetMutablePropMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
       */

      public Builder removePropMap(
          int key) {
        
        internalGetMutablePropMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue>
      getMutablePropMap() {
        return internalGetMutablePropMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
       */
      public Builder putPropMap(
          int key,
          emu.grasscutter.net.proto.PropValueOuterClass.PropValue value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePropMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, .PropValue&gt; prop_map = 2;</code>
       */

      public Builder putAllPropMap(
          java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.PropValueOuterClass.PropValue> values) {
        internalGetMutablePropMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.Internal.IntList talentIdList_ = emptyIntList();
      private void ensureTalentIdListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          talentIdList_ = mutableCopy(talentIdList_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 talent_id_list = 3;</code>
       * @return A list containing the talentIdList.
       */
      public java.util.List<java.lang.Integer>
          getTalentIdListList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(talentIdList_) : talentIdList_;
      }
      /**
       * <code>repeated uint32 talent_id_list = 3;</code>
       * @return The count of talentIdList.
       */
      public int getTalentIdListCount() {
        return talentIdList_.size();
      }
      /**
       * <code>repeated uint32 talent_id_list = 3;</code>
       * @param index The index of the element to return.
       * @return The talentIdList at the given index.
       */
      public int getTalentIdList(int index) {
        return talentIdList_.getInt(index);
      }
      /**
       * <code>repeated uint32 talent_id_list = 3;</code>
       * @param index The index to set the value at.
       * @param value The talentIdList to set.
       * @return This builder for chaining.
       */
      public Builder setTalentIdList(
          int index, int value) {
        ensureTalentIdListIsMutable();
        talentIdList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 talent_id_list = 3;</code>
       * @param value The talentIdList to add.
       * @return This builder for chaining.
       */
      public Builder addTalentIdList(int value) {
        ensureTalentIdListIsMutable();
        talentIdList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 talent_id_list = 3;</code>
       * @param values The talentIdList to add.
       * @return This builder for chaining.
       */
      public Builder addAllTalentIdList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTalentIdListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, talentIdList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 talent_id_list = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearTalentIdList() {
        talentIdList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Float> fightPropMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
      internalGetFightPropMap() {
        if (fightPropMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              FightPropMapDefaultEntryHolder.defaultEntry);
        }
        return fightPropMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Float>
      internalGetMutableFightPropMap() {
        onChanged();;
        if (fightPropMap_ == null) {
          fightPropMap_ = com.google.protobuf.MapField.newMapField(
              FightPropMapDefaultEntryHolder.defaultEntry);
        }
        if (!fightPropMap_.isMutable()) {
          fightPropMap_ = fightPropMap_.copy();
        }
        return fightPropMap_;
      }

      public int getFightPropMapCount() {
        return internalGetFightPropMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
       */

      @java.lang.Override
      public boolean containsFightPropMap(
          int key) {
        
        return internalGetFightPropMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFightPropMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Float> getFightPropMap() {
        return getFightPropMapMap();
      }
      /**
       * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Float> getFightPropMapMap() {
        return internalGetFightPropMap().getMap();
      }
      /**
       * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
       */
      @java.lang.Override

      public float getFightPropMapOrDefault(
          int key,
          float defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Float> map =
            internalGetFightPropMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
       */
      @java.lang.Override

      public float getFightPropMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Float> map =
            internalGetFightPropMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearFightPropMap() {
        internalGetMutableFightPropMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
       */

      public Builder removeFightPropMap(
          int key) {
        
        internalGetMutableFightPropMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Float>
      getMutableFightPropMap() {
        return internalGetMutableFightPropMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
       */
      public Builder putFightPropMap(
          int key,
          float value) {
        
        
        internalGetMutableFightPropMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, float&gt; fight_prop_map = 4;</code>
       */

      public Builder putAllFightPropMap(
          java.util.Map<java.lang.Integer, java.lang.Float> values) {
        internalGetMutableFightPropMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private int skillDepotId_ ;
      /**
       * <code>uint32 skill_depot_id = 5;</code>
       * @return The skillDepotId.
       */
      @java.lang.Override
      public int getSkillDepotId() {
        return skillDepotId_;
      }
      /**
       * <code>uint32 skill_depot_id = 5;</code>
       * @param value The skillDepotId to set.
       * @return This builder for chaining.
       */
      public Builder setSkillDepotId(int value) {
        
        skillDepotId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 skill_depot_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearSkillDepotId() {
        
        skillDepotId_ = 0;
        onChanged();
        return this;
      }

      private int coreProudSkillLevel_ ;
      /**
       * <code>uint32 core_proud_skill_level = 6;</code>
       * @return The coreProudSkillLevel.
       */
      @java.lang.Override
      public int getCoreProudSkillLevel() {
        return coreProudSkillLevel_;
      }
      /**
       * <code>uint32 core_proud_skill_level = 6;</code>
       * @param value The coreProudSkillLevel to set.
       * @return This builder for chaining.
       */
      public Builder setCoreProudSkillLevel(int value) {
        
        coreProudSkillLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 core_proud_skill_level = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearCoreProudSkillLevel() {
        
        coreProudSkillLevel_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList inherentProudSkillList_ = emptyIntList();
      private void ensureInherentProudSkillListIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          inherentProudSkillList_ = mutableCopy(inherentProudSkillList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated uint32 inherent_proud_skill_list = 7;</code>
       * @return A list containing the inherentProudSkillList.
       */
      public java.util.List<java.lang.Integer>
          getInherentProudSkillListList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(inherentProudSkillList_) : inherentProudSkillList_;
      }
      /**
       * <code>repeated uint32 inherent_proud_skill_list = 7;</code>
       * @return The count of inherentProudSkillList.
       */
      public int getInherentProudSkillListCount() {
        return inherentProudSkillList_.size();
      }
      /**
       * <code>repeated uint32 inherent_proud_skill_list = 7;</code>
       * @param index The index of the element to return.
       * @return The inherentProudSkillList at the given index.
       */
      public int getInherentProudSkillList(int index) {
        return inherentProudSkillList_.getInt(index);
      }
      /**
       * <code>repeated uint32 inherent_proud_skill_list = 7;</code>
       * @param index The index to set the value at.
       * @param value The inherentProudSkillList to set.
       * @return This builder for chaining.
       */
      public Builder setInherentProudSkillList(
          int index, int value) {
        ensureInherentProudSkillListIsMutable();
        inherentProudSkillList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 inherent_proud_skill_list = 7;</code>
       * @param value The inherentProudSkillList to add.
       * @return This builder for chaining.
       */
      public Builder addInherentProudSkillList(int value) {
        ensureInherentProudSkillListIsMutable();
        inherentProudSkillList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 inherent_proud_skill_list = 7;</code>
       * @param values The inherentProudSkillList to add.
       * @return This builder for chaining.
       */
      public Builder addAllInherentProudSkillList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureInherentProudSkillListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, inherentProudSkillList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 inherent_proud_skill_list = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearInherentProudSkillList() {
        inherentProudSkillList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> skillLevelMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetSkillLevelMap() {
        if (skillLevelMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              SkillLevelMapDefaultEntryHolder.defaultEntry);
        }
        return skillLevelMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableSkillLevelMap() {
        onChanged();;
        if (skillLevelMap_ == null) {
          skillLevelMap_ = com.google.protobuf.MapField.newMapField(
              SkillLevelMapDefaultEntryHolder.defaultEntry);
        }
        if (!skillLevelMap_.isMutable()) {
          skillLevelMap_ = skillLevelMap_.copy();
        }
        return skillLevelMap_;
      }

      public int getSkillLevelMapCount() {
        return internalGetSkillLevelMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
       */

      @java.lang.Override
      public boolean containsSkillLevelMap(
          int key) {
        
        return internalGetSkillLevelMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getSkillLevelMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getSkillLevelMap() {
        return getSkillLevelMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getSkillLevelMapMap() {
        return internalGetSkillLevelMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
       */
      @java.lang.Override

      public int getSkillLevelMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetSkillLevelMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
       */
      @java.lang.Override

      public int getSkillLevelMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetSkillLevelMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearSkillLevelMap() {
        internalGetMutableSkillLevelMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
       */

      public Builder removeSkillLevelMap(
          int key) {
        
        internalGetMutableSkillLevelMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableSkillLevelMap() {
        return internalGetMutableSkillLevelMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
       */
      public Builder putSkillLevelMap(
          int key,
          int value) {
        
        
        internalGetMutableSkillLevelMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; skill_level_map = 8;</code>
       */

      public Builder putAllSkillLevelMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableSkillLevelMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> proudSkillExtraLevelMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetProudSkillExtraLevelMap() {
        if (proudSkillExtraLevelMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              ProudSkillExtraLevelMapDefaultEntryHolder.defaultEntry);
        }
        return proudSkillExtraLevelMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableProudSkillExtraLevelMap() {
        onChanged();;
        if (proudSkillExtraLevelMap_ == null) {
          proudSkillExtraLevelMap_ = com.google.protobuf.MapField.newMapField(
              ProudSkillExtraLevelMapDefaultEntryHolder.defaultEntry);
        }
        if (!proudSkillExtraLevelMap_.isMutable()) {
          proudSkillExtraLevelMap_ = proudSkillExtraLevelMap_.copy();
        }
        return proudSkillExtraLevelMap_;
      }

      public int getProudSkillExtraLevelMapCount() {
        return internalGetProudSkillExtraLevelMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
       */

      @java.lang.Override
      public boolean containsProudSkillExtraLevelMap(
          int key) {
        
        return internalGetProudSkillExtraLevelMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getProudSkillExtraLevelMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getProudSkillExtraLevelMap() {
        return getProudSkillExtraLevelMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getProudSkillExtraLevelMapMap() {
        return internalGetProudSkillExtraLevelMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
       */
      @java.lang.Override

      public int getProudSkillExtraLevelMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetProudSkillExtraLevelMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
       */
      @java.lang.Override

      public int getProudSkillExtraLevelMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetProudSkillExtraLevelMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearProudSkillExtraLevelMap() {
        internalGetMutableProudSkillExtraLevelMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
       */

      public Builder removeProudSkillExtraLevelMap(
          int key) {
        
        internalGetMutableProudSkillExtraLevelMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableProudSkillExtraLevelMap() {
        return internalGetMutableProudSkillExtraLevelMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
       */
      public Builder putProudSkillExtraLevelMap(
          int key,
          int value) {
        
        
        internalGetMutableProudSkillExtraLevelMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; proud_skill_extra_level_map = 9;</code>
       */

      public Builder putAllProudSkillExtraLevelMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableProudSkillExtraLevelMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip> equipList_ =
        java.util.Collections.emptyList();
      private void ensureEquipListIsMutable() {
        if (!((bitField0_ & 0x00000040) != 0)) {
          equipList_ = new java.util.ArrayList<emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip>(equipList_);
          bitField0_ |= 0x00000040;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip, emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip.Builder, emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquipOrBuilder> equipListBuilder_;

      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip> getEquipListList() {
        if (equipListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(equipList_);
        } else {
          return equipListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public int getEquipListCount() {
        if (equipListBuilder_ == null) {
          return equipList_.size();
        } else {
          return equipListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip getEquipList(int index) {
        if (equipListBuilder_ == null) {
          return equipList_.get(index);
        } else {
          return equipListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public Builder setEquipList(
          int index, emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip value) {
        if (equipListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipListIsMutable();
          equipList_.set(index, value);
          onChanged();
        } else {
          equipListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public Builder setEquipList(
          int index, emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip.Builder builderForValue) {
        if (equipListBuilder_ == null) {
          ensureEquipListIsMutable();
          equipList_.set(index, builderForValue.build());
          onChanged();
        } else {
          equipListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public Builder addEquipList(emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip value) {
        if (equipListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipListIsMutable();
          equipList_.add(value);
          onChanged();
        } else {
          equipListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public Builder addEquipList(
          int index, emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip value) {
        if (equipListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEquipListIsMutable();
          equipList_.add(index, value);
          onChanged();
        } else {
          equipListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public Builder addEquipList(
          emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip.Builder builderForValue) {
        if (equipListBuilder_ == null) {
          ensureEquipListIsMutable();
          equipList_.add(builderForValue.build());
          onChanged();
        } else {
          equipListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public Builder addEquipList(
          int index, emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip.Builder builderForValue) {
        if (equipListBuilder_ == null) {
          ensureEquipListIsMutable();
          equipList_.add(index, builderForValue.build());
          onChanged();
        } else {
          equipListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public Builder addAllEquipList(
          java.lang.Iterable<? extends emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip> values) {
        if (equipListBuilder_ == null) {
          ensureEquipListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, equipList_);
          onChanged();
        } else {
          equipListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public Builder clearEquipList() {
        if (equipListBuilder_ == null) {
          equipList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000040);
          onChanged();
        } else {
          equipListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public Builder removeEquipList(int index) {
        if (equipListBuilder_ == null) {
          ensureEquipListIsMutable();
          equipList_.remove(index);
          onChanged();
        } else {
          equipListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip.Builder getEquipListBuilder(
          int index) {
        return getEquipListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquipOrBuilder getEquipListOrBuilder(
          int index) {
        if (equipListBuilder_ == null) {
          return equipList_.get(index);  } else {
          return equipListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public java.util.List<? extends emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquipOrBuilder> 
           getEquipListOrBuilderList() {
        if (equipListBuilder_ != null) {
          return equipListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(equipList_);
        }
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip.Builder addEquipListBuilder() {
        return getEquipListFieldBuilder().addBuilder(
            emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip.getDefaultInstance());
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip.Builder addEquipListBuilder(
          int index) {
        return getEquipListFieldBuilder().addBuilder(
            index, emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip.getDefaultInstance());
      }
      /**
       * <code>repeated .ShowEquip equip_list = 10;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip.Builder> 
           getEquipListBuilderList() {
        return getEquipListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip, emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip.Builder, emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquipOrBuilder> 
          getEquipListFieldBuilder() {
        if (equipListBuilder_ == null) {
          equipListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip, emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquip.Builder, emu.grasscutter.net.proto.ShowEquipOuterClass.ShowEquipOrBuilder>(
                  equipList_,
                  ((bitField0_ & 0x00000040) != 0),
                  getParentForChildren(),
                  isClean());
          equipList_ = null;
        }
        return equipListBuilder_;
      }

      private emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo fetterInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo, emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo.Builder, emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfoOrBuilder> fetterInfoBuilder_;
      /**
       * <code>.AvatarFetterInfo fetter_info = 11;</code>
       * @return Whether the fetterInfo field is set.
       */
      public boolean hasFetterInfo() {
        return fetterInfoBuilder_ != null || fetterInfo_ != null;
      }
      /**
       * <code>.AvatarFetterInfo fetter_info = 11;</code>
       * @return The fetterInfo.
       */
      public emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo getFetterInfo() {
        if (fetterInfoBuilder_ == null) {
          return fetterInfo_ == null ? emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo.getDefaultInstance() : fetterInfo_;
        } else {
          return fetterInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.AvatarFetterInfo fetter_info = 11;</code>
       */
      public Builder setFetterInfo(emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo value) {
        if (fetterInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fetterInfo_ = value;
          onChanged();
        } else {
          fetterInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.AvatarFetterInfo fetter_info = 11;</code>
       */
      public Builder setFetterInfo(
          emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo.Builder builderForValue) {
        if (fetterInfoBuilder_ == null) {
          fetterInfo_ = builderForValue.build();
          onChanged();
        } else {
          fetterInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.AvatarFetterInfo fetter_info = 11;</code>
       */
      public Builder mergeFetterInfo(emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo value) {
        if (fetterInfoBuilder_ == null) {
          if (fetterInfo_ != null) {
            fetterInfo_ =
              emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo.newBuilder(fetterInfo_).mergeFrom(value).buildPartial();
          } else {
            fetterInfo_ = value;
          }
          onChanged();
        } else {
          fetterInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.AvatarFetterInfo fetter_info = 11;</code>
       */
      public Builder clearFetterInfo() {
        if (fetterInfoBuilder_ == null) {
          fetterInfo_ = null;
          onChanged();
        } else {
          fetterInfo_ = null;
          fetterInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.AvatarFetterInfo fetter_info = 11;</code>
       */
      public emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo.Builder getFetterInfoBuilder() {
        
        onChanged();
        return getFetterInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.AvatarFetterInfo fetter_info = 11;</code>
       */
      public emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfoOrBuilder getFetterInfoOrBuilder() {
        if (fetterInfoBuilder_ != null) {
          return fetterInfoBuilder_.getMessageOrBuilder();
        } else {
          return fetterInfo_ == null ?
              emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo.getDefaultInstance() : fetterInfo_;
        }
      }
      /**
       * <code>.AvatarFetterInfo fetter_info = 11;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo, emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo.Builder, emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfoOrBuilder> 
          getFetterInfoFieldBuilder() {
        if (fetterInfoBuilder_ == null) {
          fetterInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo, emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfo.Builder, emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.AvatarFetterInfoOrBuilder>(
                  getFetterInfo(),
                  getParentForChildren(),
                  isClean());
          fetterInfo_ = null;
        }
        return fetterInfoBuilder_;
      }

      private int costumeId_ ;
      /**
       * <code>uint32 costume_id = 12;</code>
       * @return The costumeId.
       */
      @java.lang.Override
      public int getCostumeId() {
        return costumeId_;
      }
      /**
       * <code>uint32 costume_id = 12;</code>
       * @param value The costumeId to set.
       * @return This builder for chaining.
       */
      public Builder setCostumeId(int value) {
        
        costumeId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 costume_id = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearCostumeId() {
        
        costumeId_ = 0;
        onChanged();
        return this;
      }

      private emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo excelInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo, emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo.Builder, emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfoOrBuilder> excelInfoBuilder_;
      /**
       * <code>.AvatarExcelInfo excel_info = 13;</code>
       * @return Whether the excelInfo field is set.
       */
      public boolean hasExcelInfo() {
        return excelInfoBuilder_ != null || excelInfo_ != null;
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 13;</code>
       * @return The excelInfo.
       */
      public emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo getExcelInfo() {
        if (excelInfoBuilder_ == null) {
          return excelInfo_ == null ? emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo.getDefaultInstance() : excelInfo_;
        } else {
          return excelInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 13;</code>
       */
      public Builder setExcelInfo(emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo value) {
        if (excelInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          excelInfo_ = value;
          onChanged();
        } else {
          excelInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 13;</code>
       */
      public Builder setExcelInfo(
          emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo.Builder builderForValue) {
        if (excelInfoBuilder_ == null) {
          excelInfo_ = builderForValue.build();
          onChanged();
        } else {
          excelInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 13;</code>
       */
      public Builder mergeExcelInfo(emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo value) {
        if (excelInfoBuilder_ == null) {
          if (excelInfo_ != null) {
            excelInfo_ =
              emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo.newBuilder(excelInfo_).mergeFrom(value).buildPartial();
          } else {
            excelInfo_ = value;
          }
          onChanged();
        } else {
          excelInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 13;</code>
       */
      public Builder clearExcelInfo() {
        if (excelInfoBuilder_ == null) {
          excelInfo_ = null;
          onChanged();
        } else {
          excelInfo_ = null;
          excelInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 13;</code>
       */
      public emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo.Builder getExcelInfoBuilder() {
        
        onChanged();
        return getExcelInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 13;</code>
       */
      public emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfoOrBuilder getExcelInfoOrBuilder() {
        if (excelInfoBuilder_ != null) {
          return excelInfoBuilder_.getMessageOrBuilder();
        } else {
          return excelInfo_ == null ?
              emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo.getDefaultInstance() : excelInfo_;
        }
      }
      /**
       * <code>.AvatarExcelInfo excel_info = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo, emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo.Builder, emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfoOrBuilder> 
          getExcelInfoFieldBuilder() {
        if (excelInfoBuilder_ == null) {
          excelInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo, emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfo.Builder, emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.AvatarExcelInfoOrBuilder>(
                  getExcelInfo(),
                  getParentForChildren(),
                  isClean());
          excelInfo_ = null;
        }
        return excelInfoBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ShowAvatarInfo)
    }

    // @@protoc_insertion_point(class_scope:ShowAvatarInfo)
    private static final emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo();
    }

    public static emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ShowAvatarInfo>
        PARSER = new com.google.protobuf.AbstractParser<ShowAvatarInfo>() {
      @java.lang.Override
      public ShowAvatarInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ShowAvatarInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ShowAvatarInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ShowAvatarInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.ShowAvatarInfoOuterClass.ShowAvatarInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ShowAvatarInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ShowAvatarInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ShowAvatarInfo_PropMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ShowAvatarInfo_PropMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ShowAvatarInfo_FightPropMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ShowAvatarInfo_FightPropMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ShowAvatarInfo_SkillLevelMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ShowAvatarInfo_SkillLevelMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ShowAvatarInfo_ProudSkillExtraLevelMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ShowAvatarInfo_ProudSkillExtraLevelMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024ShowAvatarInfo.proto\032\025AvatarExcelInfo." +
      "proto\032\026AvatarFetterInfo.proto\032\017PropValue" +
      ".proto\032\017ShowEquip.proto\"\372\005\n\016ShowAvatarIn" +
      "fo\022\021\n\tavatar_id\030\001 \001(\r\022.\n\010prop_map\030\002 \003(\0132" +
      "\034.ShowAvatarInfo.PropMapEntry\022\026\n\016talent_" +
      "id_list\030\003 \003(\r\0229\n\016fight_prop_map\030\004 \003(\0132!." +
      "ShowAvatarInfo.FightPropMapEntry\022\026\n\016skil" +
      "l_depot_id\030\005 \001(\r\022\036\n\026core_proud_skill_lev" +
      "el\030\006 \001(\r\022!\n\031inherent_proud_skill_list\030\007 " +
      "\003(\r\022;\n\017skill_level_map\030\010 \003(\0132\".ShowAvata" +
      "rInfo.SkillLevelMapEntry\022Q\n\033proud_skill_" +
      "extra_level_map\030\t \003(\0132,.ShowAvatarInfo.P" +
      "roudSkillExtraLevelMapEntry\022\036\n\nequip_lis" +
      "t\030\n \003(\0132\n.ShowEquip\022&\n\013fetter_info\030\013 \001(\013" +
      "2\021.AvatarFetterInfo\022\022\n\ncostume_id\030\014 \001(\r\022" +
      "$\n\nexcel_info\030\r \001(\0132\020.AvatarExcelInfo\032:\n" +
      "\014PropMapEntry\022\013\n\003key\030\001 \001(\r\022\031\n\005value\030\002 \001(" +
      "\0132\n.PropValue:\0028\001\0323\n\021FightPropMapEntry\022\013" +
      "\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\002:\0028\001\0324\n\022SkillL" +
      "evelMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r" +
      ":\0028\001\032>\n\034ProudSkillExtraLevelMapEntry\022\013\n\003" +
      "key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001B\033\n\031emu.gras" +
      "scutter.net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.PropValueOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.ShowEquipOuterClass.getDescriptor(),
        });
    internal_static_ShowAvatarInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ShowAvatarInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ShowAvatarInfo_descriptor,
        new java.lang.String[] { "AvatarId", "PropMap", "TalentIdList", "FightPropMap", "SkillDepotId", "CoreProudSkillLevel", "InherentProudSkillList", "SkillLevelMap", "ProudSkillExtraLevelMap", "EquipList", "FetterInfo", "CostumeId", "ExcelInfo", });
    internal_static_ShowAvatarInfo_PropMapEntry_descriptor =
      internal_static_ShowAvatarInfo_descriptor.getNestedTypes().get(0);
    internal_static_ShowAvatarInfo_PropMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ShowAvatarInfo_PropMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_ShowAvatarInfo_FightPropMapEntry_descriptor =
      internal_static_ShowAvatarInfo_descriptor.getNestedTypes().get(1);
    internal_static_ShowAvatarInfo_FightPropMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ShowAvatarInfo_FightPropMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_ShowAvatarInfo_SkillLevelMapEntry_descriptor =
      internal_static_ShowAvatarInfo_descriptor.getNestedTypes().get(2);
    internal_static_ShowAvatarInfo_SkillLevelMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ShowAvatarInfo_SkillLevelMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_ShowAvatarInfo_ProudSkillExtraLevelMapEntry_descriptor =
      internal_static_ShowAvatarInfo_descriptor.getNestedTypes().get(3);
    internal_static_ShowAvatarInfo_ProudSkillExtraLevelMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ShowAvatarInfo_ProudSkillExtraLevelMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    emu.grasscutter.net.proto.AvatarExcelInfoOuterClass.getDescriptor();
    emu.grasscutter.net.proto.AvatarFetterInfoOuterClass.getDescriptor();
    emu.grasscutter.net.proto.PropValueOuterClass.getDescriptor();
    emu.grasscutter.net.proto.ShowEquipOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
