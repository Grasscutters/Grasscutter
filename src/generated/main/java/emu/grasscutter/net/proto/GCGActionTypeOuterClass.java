// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GCGActionType.proto

package emu.grasscutter.net.proto;

public final class GCGActionTypeOuterClass {
  private GCGActionTypeOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code GCGActionType}
   */
  public enum GCGActionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>GCG_ACTION_TYPE_NONE = 0;</code>
     */
    GCG_ACTION_TYPE_NONE(0),
    /**
     * <code>GCG_ACTION_TYPE_SPECIAL_PHASE = 1;</code>
     */
    GCG_ACTION_TYPE_SPECIAL_PHASE(1),
    /**
     * <code>GCG_ACTION_TYPE_NEXT_PHASE = 2;</code>
     */
    GCG_ACTION_TYPE_NEXT_PHASE(2),
    /**
     * <code>GCG_ACTION_TYPE_DRAW = 3;</code>
     */
    GCG_ACTION_TYPE_DRAW(3),
    /**
     * <code>GCG_ACTION_TYPE_REDRAW = 4;</code>
     */
    GCG_ACTION_TYPE_REDRAW(4),
    /**
     * <code>GCG_ACTION_TYPE_SELECT_ONSTAGE = 5;</code>
     */
    GCG_ACTION_TYPE_SELECT_ONSTAGE(5),
    /**
     * <code>GCG_ACTION_TYPE_ROLL = 6;</code>
     */
    GCG_ACTION_TYPE_ROLL(6),
    /**
     * <code>GCG_ACTION_TYPE_REROLL = 7;</code>
     */
    GCG_ACTION_TYPE_REROLL(7),
    /**
     * <code>GCG_ACTION_TYPE_ATTACK = 8;</code>
     */
    GCG_ACTION_TYPE_ATTACK(8),
    /**
     * <code>GCG_ACTION_TYPE_PLAY_CARD = 9;</code>
     */
    GCG_ACTION_TYPE_PLAY_CARD(9),
    /**
     * <code>GCG_ACTION_TYPE_PASS = 10;</code>
     */
    GCG_ACTION_TYPE_PASS(10),
    /**
     * <code>GCG_ACTION_TYPE_REBOOT = 11;</code>
     */
    GCG_ACTION_TYPE_REBOOT(11),
    /**
     * <code>GCG_ACTION_TYPE_GAME_OVER = 12;</code>
     */
    GCG_ACTION_TYPE_GAME_OVER(12),
    /**
     * <code>GCG_ACTION_TYPE_TRIGGER = 13;</code>
     */
    GCG_ACTION_TYPE_TRIGGER(13),
    /**
     * <code>GCG_ACTION_TYPE_PHASE_EXIT = 14;</code>
     */
    GCG_ACTION_TYPE_PHASE_EXIT(14),
    /**
     * <code>GCG_ACTION_TYPE_CUSTOM = 15;</code>
     */
    GCG_ACTION_TYPE_CUSTOM(15),
    /**
     * <code>GCG_ACTION_TYPE_NOTIFY_COST = 16;</code>
     */
    GCG_ACTION_TYPE_NOTIFY_COST(16),
    /**
     * <code>GCG_ACTION_TYPE_AFTER_OPERATION = 17;</code>
     */
    GCG_ACTION_TYPE_AFTER_OPERATION(17),
    /**
     * <code>GCG_ACTION_TYPE_USE_SKILL = 18;</code>
     */
    GCG_ACTION_TYPE_USE_SKILL(18),
    /**
     * <code>GCG_ACTION_TYPE_NOTIFY_SKILL_PREVIEW = 19;</code>
     */
    GCG_ACTION_TYPE_NOTIFY_SKILL_PREVIEW(19),
    /**
     * <code>GCG_ACTION_TYPE_PREVIEW_ATTACK = 20;</code>
     */
    GCG_ACTION_TYPE_PREVIEW_ATTACK(20),
    /**
     * <code>GCG_ACTION_TYPE_PREVIEW_AFTER_ATTACK = 21;</code>
     */
    GCG_ACTION_TYPE_PREVIEW_AFTER_ATTACK(21),
    /**
     * <code>GCG_ACTION_TYPE_SEND_MESSAGE = 22;</code>
     */
    GCG_ACTION_TYPE_SEND_MESSAGE(22),
    /**
     * <code>GCG_ACTION_TYPE_WAITING_CHARACTER = 23;</code>
     */
    GCG_ACTION_TYPE_WAITING_CHARACTER(23),
    /**
     * <code>GCG_ACTION_TYPE_TRIGGER_SKILL = 24;</code>
     */
    GCG_ACTION_TYPE_TRIGGER_SKILL(24),
    /**
     * <code>GCG_ACTION_TYPE_BEFORE_NEXT_OPERATION = 25;</code>
     */
    GCG_ACTION_TYPE_BEFORE_NEXT_OPERATION(25),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>GCG_ACTION_TYPE_NONE = 0;</code>
     */
    public static final int GCG_ACTION_TYPE_NONE_VALUE = 0;
    /**
     * <code>GCG_ACTION_TYPE_SPECIAL_PHASE = 1;</code>
     */
    public static final int GCG_ACTION_TYPE_SPECIAL_PHASE_VALUE = 1;
    /**
     * <code>GCG_ACTION_TYPE_NEXT_PHASE = 2;</code>
     */
    public static final int GCG_ACTION_TYPE_NEXT_PHASE_VALUE = 2;
    /**
     * <code>GCG_ACTION_TYPE_DRAW = 3;</code>
     */
    public static final int GCG_ACTION_TYPE_DRAW_VALUE = 3;
    /**
     * <code>GCG_ACTION_TYPE_REDRAW = 4;</code>
     */
    public static final int GCG_ACTION_TYPE_REDRAW_VALUE = 4;
    /**
     * <code>GCG_ACTION_TYPE_SELECT_ONSTAGE = 5;</code>
     */
    public static final int GCG_ACTION_TYPE_SELECT_ONSTAGE_VALUE = 5;
    /**
     * <code>GCG_ACTION_TYPE_ROLL = 6;</code>
     */
    public static final int GCG_ACTION_TYPE_ROLL_VALUE = 6;
    /**
     * <code>GCG_ACTION_TYPE_REROLL = 7;</code>
     */
    public static final int GCG_ACTION_TYPE_REROLL_VALUE = 7;
    /**
     * <code>GCG_ACTION_TYPE_ATTACK = 8;</code>
     */
    public static final int GCG_ACTION_TYPE_ATTACK_VALUE = 8;
    /**
     * <code>GCG_ACTION_TYPE_PLAY_CARD = 9;</code>
     */
    public static final int GCG_ACTION_TYPE_PLAY_CARD_VALUE = 9;
    /**
     * <code>GCG_ACTION_TYPE_PASS = 10;</code>
     */
    public static final int GCG_ACTION_TYPE_PASS_VALUE = 10;
    /**
     * <code>GCG_ACTION_TYPE_REBOOT = 11;</code>
     */
    public static final int GCG_ACTION_TYPE_REBOOT_VALUE = 11;
    /**
     * <code>GCG_ACTION_TYPE_GAME_OVER = 12;</code>
     */
    public static final int GCG_ACTION_TYPE_GAME_OVER_VALUE = 12;
    /**
     * <code>GCG_ACTION_TYPE_TRIGGER = 13;</code>
     */
    public static final int GCG_ACTION_TYPE_TRIGGER_VALUE = 13;
    /**
     * <code>GCG_ACTION_TYPE_PHASE_EXIT = 14;</code>
     */
    public static final int GCG_ACTION_TYPE_PHASE_EXIT_VALUE = 14;
    /**
     * <code>GCG_ACTION_TYPE_CUSTOM = 15;</code>
     */
    public static final int GCG_ACTION_TYPE_CUSTOM_VALUE = 15;
    /**
     * <code>GCG_ACTION_TYPE_NOTIFY_COST = 16;</code>
     */
    public static final int GCG_ACTION_TYPE_NOTIFY_COST_VALUE = 16;
    /**
     * <code>GCG_ACTION_TYPE_AFTER_OPERATION = 17;</code>
     */
    public static final int GCG_ACTION_TYPE_AFTER_OPERATION_VALUE = 17;
    /**
     * <code>GCG_ACTION_TYPE_USE_SKILL = 18;</code>
     */
    public static final int GCG_ACTION_TYPE_USE_SKILL_VALUE = 18;
    /**
     * <code>GCG_ACTION_TYPE_NOTIFY_SKILL_PREVIEW = 19;</code>
     */
    public static final int GCG_ACTION_TYPE_NOTIFY_SKILL_PREVIEW_VALUE = 19;
    /**
     * <code>GCG_ACTION_TYPE_PREVIEW_ATTACK = 20;</code>
     */
    public static final int GCG_ACTION_TYPE_PREVIEW_ATTACK_VALUE = 20;
    /**
     * <code>GCG_ACTION_TYPE_PREVIEW_AFTER_ATTACK = 21;</code>
     */
    public static final int GCG_ACTION_TYPE_PREVIEW_AFTER_ATTACK_VALUE = 21;
    /**
     * <code>GCG_ACTION_TYPE_SEND_MESSAGE = 22;</code>
     */
    public static final int GCG_ACTION_TYPE_SEND_MESSAGE_VALUE = 22;
    /**
     * <code>GCG_ACTION_TYPE_WAITING_CHARACTER = 23;</code>
     */
    public static final int GCG_ACTION_TYPE_WAITING_CHARACTER_VALUE = 23;
    /**
     * <code>GCG_ACTION_TYPE_TRIGGER_SKILL = 24;</code>
     */
    public static final int GCG_ACTION_TYPE_TRIGGER_SKILL_VALUE = 24;
    /**
     * <code>GCG_ACTION_TYPE_BEFORE_NEXT_OPERATION = 25;</code>
     */
    public static final int GCG_ACTION_TYPE_BEFORE_NEXT_OPERATION_VALUE = 25;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static GCGActionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static GCGActionType forNumber(int value) {
      switch (value) {
        case 0: return GCG_ACTION_TYPE_NONE;
        case 1: return GCG_ACTION_TYPE_SPECIAL_PHASE;
        case 2: return GCG_ACTION_TYPE_NEXT_PHASE;
        case 3: return GCG_ACTION_TYPE_DRAW;
        case 4: return GCG_ACTION_TYPE_REDRAW;
        case 5: return GCG_ACTION_TYPE_SELECT_ONSTAGE;
        case 6: return GCG_ACTION_TYPE_ROLL;
        case 7: return GCG_ACTION_TYPE_REROLL;
        case 8: return GCG_ACTION_TYPE_ATTACK;
        case 9: return GCG_ACTION_TYPE_PLAY_CARD;
        case 10: return GCG_ACTION_TYPE_PASS;
        case 11: return GCG_ACTION_TYPE_REBOOT;
        case 12: return GCG_ACTION_TYPE_GAME_OVER;
        case 13: return GCG_ACTION_TYPE_TRIGGER;
        case 14: return GCG_ACTION_TYPE_PHASE_EXIT;
        case 15: return GCG_ACTION_TYPE_CUSTOM;
        case 16: return GCG_ACTION_TYPE_NOTIFY_COST;
        case 17: return GCG_ACTION_TYPE_AFTER_OPERATION;
        case 18: return GCG_ACTION_TYPE_USE_SKILL;
        case 19: return GCG_ACTION_TYPE_NOTIFY_SKILL_PREVIEW;
        case 20: return GCG_ACTION_TYPE_PREVIEW_ATTACK;
        case 21: return GCG_ACTION_TYPE_PREVIEW_AFTER_ATTACK;
        case 22: return GCG_ACTION_TYPE_SEND_MESSAGE;
        case 23: return GCG_ACTION_TYPE_WAITING_CHARACTER;
        case 24: return GCG_ACTION_TYPE_TRIGGER_SKILL;
        case 25: return GCG_ACTION_TYPE_BEFORE_NEXT_OPERATION;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GCGActionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        GCGActionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GCGActionType>() {
            public GCGActionType findValueByNumber(int number) {
              return GCGActionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.GCGActionTypeOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final GCGActionType[] VALUES = values();

    public static GCGActionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private GCGActionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:GCGActionType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023GCGActionType.proto*\331\006\n\rGCGActionType\022" +
      "\030\n\024GCG_ACTION_TYPE_NONE\020\000\022!\n\035GCG_ACTION_" +
      "TYPE_SPECIAL_PHASE\020\001\022\036\n\032GCG_ACTION_TYPE_" +
      "NEXT_PHASE\020\002\022\030\n\024GCG_ACTION_TYPE_DRAW\020\003\022\032" +
      "\n\026GCG_ACTION_TYPE_REDRAW\020\004\022\"\n\036GCG_ACTION" +
      "_TYPE_SELECT_ONSTAGE\020\005\022\030\n\024GCG_ACTION_TYP" +
      "E_ROLL\020\006\022\032\n\026GCG_ACTION_TYPE_REROLL\020\007\022\032\n\026" +
      "GCG_ACTION_TYPE_ATTACK\020\010\022\035\n\031GCG_ACTION_T" +
      "YPE_PLAY_CARD\020\t\022\030\n\024GCG_ACTION_TYPE_PASS\020" +
      "\n\022\032\n\026GCG_ACTION_TYPE_REBOOT\020\013\022\035\n\031GCG_ACT" +
      "ION_TYPE_GAME_OVER\020\014\022\033\n\027GCG_ACTION_TYPE_" +
      "TRIGGER\020\r\022\036\n\032GCG_ACTION_TYPE_PHASE_EXIT\020" +
      "\016\022\032\n\026GCG_ACTION_TYPE_CUSTOM\020\017\022\037\n\033GCG_ACT" +
      "ION_TYPE_NOTIFY_COST\020\020\022#\n\037GCG_ACTION_TYP" +
      "E_AFTER_OPERATION\020\021\022\035\n\031GCG_ACTION_TYPE_U" +
      "SE_SKILL\020\022\022(\n$GCG_ACTION_TYPE_NOTIFY_SKI" +
      "LL_PREVIEW\020\023\022\"\n\036GCG_ACTION_TYPE_PREVIEW_" +
      "ATTACK\020\024\022(\n$GCG_ACTION_TYPE_PREVIEW_AFTE" +
      "R_ATTACK\020\025\022 \n\034GCG_ACTION_TYPE_SEND_MESSA" +
      "GE\020\026\022%\n!GCG_ACTION_TYPE_WAITING_CHARACTE" +
      "R\020\027\022!\n\035GCG_ACTION_TYPE_TRIGGER_SKILL\020\030\022)" +
      "\n%GCG_ACTION_TYPE_BEFORE_NEXT_OPERATION\020" +
      "\031B\033\n\031emu.grasscutter.net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
