// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DNLLNJDINJG.proto

package emu.grasscutter.net.proto;

public final class DNLLNJDINJGOuterClass {
  private DNLLNJDINJGOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * Protobuf enum {@code DNLLNJDINJG}
   */
  public enum DNLLNJDINJG
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>DNLLNJDINJG_GcgActionNone = 0;</code>
     */
    DNLLNJDINJG_GcgActionNone(0),
    /**
     * <code>DNLLNJDINJG_GcgActionSpecialPhase = 1;</code>
     */
    DNLLNJDINJG_GcgActionSpecialPhase(1),
    /**
     * <code>DNLLNJDINJG_GcgActionNextPhase = 2;</code>
     */
    DNLLNJDINJG_GcgActionNextPhase(2),
    /**
     * <code>DNLLNJDINJG_GcgActionDraw = 3;</code>
     */
    DNLLNJDINJG_GcgActionDraw(3),
    /**
     * <code>DNLLNJDINJG_GcgActionRedraw = 4;</code>
     */
    DNLLNJDINJG_GcgActionRedraw(4),
    /**
     * <code>DNLLNJDINJG_GcgActionSelectOnstage = 5;</code>
     */
    DNLLNJDINJG_GcgActionSelectOnstage(5),
    /**
     * <code>DNLLNJDINJG_GcgActionRoll = 6;</code>
     */
    DNLLNJDINJG_GcgActionRoll(6),
    /**
     * <code>DNLLNJDINJG_GcgActionReroll = 7;</code>
     */
    DNLLNJDINJG_GcgActionReroll(7),
    /**
     * <code>DNLLNJDINJG_GcgActionAttack = 8;</code>
     */
    DNLLNJDINJG_GcgActionAttack(8),
    /**
     * <code>DNLLNJDINJG_GcgActionPlayCard = 9;</code>
     */
    DNLLNJDINJG_GcgActionPlayCard(9),
    /**
     * <code>DNLLNJDINJG_GcgActionPass = 10;</code>
     */
    DNLLNJDINJG_GcgActionPass(10),
    /**
     * <code>DNLLNJDINJG_GcgActionReboot = 11;</code>
     */
    DNLLNJDINJG_GcgActionReboot(11),
    /**
     * <code>DNLLNJDINJG_GcgActionGameOver = 12;</code>
     */
    DNLLNJDINJG_GcgActionGameOver(12),
    /**
     * <code>DNLLNJDINJG_GcgActionTrigger = 13;</code>
     */
    DNLLNJDINJG_GcgActionTrigger(13),
    /**
     * <code>DNLLNJDINJG_GcgActionPhaseExit = 14;</code>
     */
    DNLLNJDINJG_GcgActionPhaseExit(14),
    /**
     * <code>DNLLNJDINJG_GcgActionCustom = 15;</code>
     */
    DNLLNJDINJG_GcgActionCustom(15),
    /**
     * <code>DNLLNJDINJG_GcgActionNotifyCost = 16;</code>
     */
    DNLLNJDINJG_GcgActionNotifyCost(16),
    /**
     * <code>DNLLNJDINJG_GcgActionAfterOperation = 17;</code>
     */
    DNLLNJDINJG_GcgActionAfterOperation(17),
    /**
     * <code>DNLLNJDINJG_GcgActionUseSkill = 18;</code>
     */
    DNLLNJDINJG_GcgActionUseSkill(18),
    /**
     * <code>DNLLNJDINJG_GcgActionNotifySkillPreview = 19;</code>
     */
    DNLLNJDINJG_GcgActionNotifySkillPreview(19),
    /**
     * <code>DNLLNJDINJG_GcgActionPreviewAttack = 20;</code>
     */
    DNLLNJDINJG_GcgActionPreviewAttack(20),
    /**
     * <code>DNLLNJDINJG_GcgActionPreviewAfterAttack = 21;</code>
     */
    DNLLNJDINJG_GcgActionPreviewAfterAttack(21),
    /**
     * <code>DNLLNJDINJG_GcgActionSendMessage = 22;</code>
     */
    DNLLNJDINJG_GcgActionSendMessage(22),
    /**
     * <code>DNLLNJDINJG_GcgActionWaitingCharacter = 23;</code>
     */
    DNLLNJDINJG_GcgActionWaitingCharacter(23),
    /**
     * <code>DNLLNJDINJG_GcgActionTriggerSkill = 24;</code>
     */
    DNLLNJDINJG_GcgActionTriggerSkill(24),
    /**
     * <code>DNLLNJDINJG_GcgActionBeforeNextOperation = 25;</code>
     */
    DNLLNJDINJG_GcgActionBeforeNextOperation(25),
    /**
     * <code>DNLLNJDINJG_GcgActionRemoveCharacterCard = 26;</code>
     */
    DNLLNJDINJG_GcgActionRemoveCharacterCard(26),
    /**
     * <code>DNLLNJDINJG_GcgActionOnstageCheck = 27;</code>
     */
    DNLLNJDINJG_GcgActionOnstageCheck(27),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>DNLLNJDINJG_GcgActionNone = 0;</code>
     */
    public static final int DNLLNJDINJG_GcgActionNone_VALUE = 0;
    /**
     * <code>DNLLNJDINJG_GcgActionSpecialPhase = 1;</code>
     */
    public static final int DNLLNJDINJG_GcgActionSpecialPhase_VALUE = 1;
    /**
     * <code>DNLLNJDINJG_GcgActionNextPhase = 2;</code>
     */
    public static final int DNLLNJDINJG_GcgActionNextPhase_VALUE = 2;
    /**
     * <code>DNLLNJDINJG_GcgActionDraw = 3;</code>
     */
    public static final int DNLLNJDINJG_GcgActionDraw_VALUE = 3;
    /**
     * <code>DNLLNJDINJG_GcgActionRedraw = 4;</code>
     */
    public static final int DNLLNJDINJG_GcgActionRedraw_VALUE = 4;
    /**
     * <code>DNLLNJDINJG_GcgActionSelectOnstage = 5;</code>
     */
    public static final int DNLLNJDINJG_GcgActionSelectOnstage_VALUE = 5;
    /**
     * <code>DNLLNJDINJG_GcgActionRoll = 6;</code>
     */
    public static final int DNLLNJDINJG_GcgActionRoll_VALUE = 6;
    /**
     * <code>DNLLNJDINJG_GcgActionReroll = 7;</code>
     */
    public static final int DNLLNJDINJG_GcgActionReroll_VALUE = 7;
    /**
     * <code>DNLLNJDINJG_GcgActionAttack = 8;</code>
     */
    public static final int DNLLNJDINJG_GcgActionAttack_VALUE = 8;
    /**
     * <code>DNLLNJDINJG_GcgActionPlayCard = 9;</code>
     */
    public static final int DNLLNJDINJG_GcgActionPlayCard_VALUE = 9;
    /**
     * <code>DNLLNJDINJG_GcgActionPass = 10;</code>
     */
    public static final int DNLLNJDINJG_GcgActionPass_VALUE = 10;
    /**
     * <code>DNLLNJDINJG_GcgActionReboot = 11;</code>
     */
    public static final int DNLLNJDINJG_GcgActionReboot_VALUE = 11;
    /**
     * <code>DNLLNJDINJG_GcgActionGameOver = 12;</code>
     */
    public static final int DNLLNJDINJG_GcgActionGameOver_VALUE = 12;
    /**
     * <code>DNLLNJDINJG_GcgActionTrigger = 13;</code>
     */
    public static final int DNLLNJDINJG_GcgActionTrigger_VALUE = 13;
    /**
     * <code>DNLLNJDINJG_GcgActionPhaseExit = 14;</code>
     */
    public static final int DNLLNJDINJG_GcgActionPhaseExit_VALUE = 14;
    /**
     * <code>DNLLNJDINJG_GcgActionCustom = 15;</code>
     */
    public static final int DNLLNJDINJG_GcgActionCustom_VALUE = 15;
    /**
     * <code>DNLLNJDINJG_GcgActionNotifyCost = 16;</code>
     */
    public static final int DNLLNJDINJG_GcgActionNotifyCost_VALUE = 16;
    /**
     * <code>DNLLNJDINJG_GcgActionAfterOperation = 17;</code>
     */
    public static final int DNLLNJDINJG_GcgActionAfterOperation_VALUE = 17;
    /**
     * <code>DNLLNJDINJG_GcgActionUseSkill = 18;</code>
     */
    public static final int DNLLNJDINJG_GcgActionUseSkill_VALUE = 18;
    /**
     * <code>DNLLNJDINJG_GcgActionNotifySkillPreview = 19;</code>
     */
    public static final int DNLLNJDINJG_GcgActionNotifySkillPreview_VALUE = 19;
    /**
     * <code>DNLLNJDINJG_GcgActionPreviewAttack = 20;</code>
     */
    public static final int DNLLNJDINJG_GcgActionPreviewAttack_VALUE = 20;
    /**
     * <code>DNLLNJDINJG_GcgActionPreviewAfterAttack = 21;</code>
     */
    public static final int DNLLNJDINJG_GcgActionPreviewAfterAttack_VALUE = 21;
    /**
     * <code>DNLLNJDINJG_GcgActionSendMessage = 22;</code>
     */
    public static final int DNLLNJDINJG_GcgActionSendMessage_VALUE = 22;
    /**
     * <code>DNLLNJDINJG_GcgActionWaitingCharacter = 23;</code>
     */
    public static final int DNLLNJDINJG_GcgActionWaitingCharacter_VALUE = 23;
    /**
     * <code>DNLLNJDINJG_GcgActionTriggerSkill = 24;</code>
     */
    public static final int DNLLNJDINJG_GcgActionTriggerSkill_VALUE = 24;
    /**
     * <code>DNLLNJDINJG_GcgActionBeforeNextOperation = 25;</code>
     */
    public static final int DNLLNJDINJG_GcgActionBeforeNextOperation_VALUE = 25;
    /**
     * <code>DNLLNJDINJG_GcgActionRemoveCharacterCard = 26;</code>
     */
    public static final int DNLLNJDINJG_GcgActionRemoveCharacterCard_VALUE = 26;
    /**
     * <code>DNLLNJDINJG_GcgActionOnstageCheck = 27;</code>
     */
    public static final int DNLLNJDINJG_GcgActionOnstageCheck_VALUE = 27;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DNLLNJDINJG valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DNLLNJDINJG forNumber(int value) {
      switch (value) {
        case 0: return DNLLNJDINJG_GcgActionNone;
        case 1: return DNLLNJDINJG_GcgActionSpecialPhase;
        case 2: return DNLLNJDINJG_GcgActionNextPhase;
        case 3: return DNLLNJDINJG_GcgActionDraw;
        case 4: return DNLLNJDINJG_GcgActionRedraw;
        case 5: return DNLLNJDINJG_GcgActionSelectOnstage;
        case 6: return DNLLNJDINJG_GcgActionRoll;
        case 7: return DNLLNJDINJG_GcgActionReroll;
        case 8: return DNLLNJDINJG_GcgActionAttack;
        case 9: return DNLLNJDINJG_GcgActionPlayCard;
        case 10: return DNLLNJDINJG_GcgActionPass;
        case 11: return DNLLNJDINJG_GcgActionReboot;
        case 12: return DNLLNJDINJG_GcgActionGameOver;
        case 13: return DNLLNJDINJG_GcgActionTrigger;
        case 14: return DNLLNJDINJG_GcgActionPhaseExit;
        case 15: return DNLLNJDINJG_GcgActionCustom;
        case 16: return DNLLNJDINJG_GcgActionNotifyCost;
        case 17: return DNLLNJDINJG_GcgActionAfterOperation;
        case 18: return DNLLNJDINJG_GcgActionUseSkill;
        case 19: return DNLLNJDINJG_GcgActionNotifySkillPreview;
        case 20: return DNLLNJDINJG_GcgActionPreviewAttack;
        case 21: return DNLLNJDINJG_GcgActionPreviewAfterAttack;
        case 22: return DNLLNJDINJG_GcgActionSendMessage;
        case 23: return DNLLNJDINJG_GcgActionWaitingCharacter;
        case 24: return DNLLNJDINJG_GcgActionTriggerSkill;
        case 25: return DNLLNJDINJG_GcgActionBeforeNextOperation;
        case 26: return DNLLNJDINJG_GcgActionRemoveCharacterCard;
        case 27: return DNLLNJDINJG_GcgActionOnstageCheck;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DNLLNJDINJG>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DNLLNJDINJG> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DNLLNJDINJG>() {
            public DNLLNJDINJG findValueByNumber(int number) {
              return DNLLNJDINJG.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.DNLLNJDINJGOuterClass.getDescriptor().getEnumTypes().get(0);
    }

    private static final DNLLNJDINJG[] VALUES = values();

    public static DNLLNJDINJG valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DNLLNJDINJG(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:DNLLNJDINJG)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021DNLLNJDINJG.proto*\233\010\n\013DNLLNJDINJG\022\035\n\031D" +
      "NLLNJDINJG_GcgActionNone\020\000\022%\n!DNLLNJDINJ" +
      "G_GcgActionSpecialPhase\020\001\022\"\n\036DNLLNJDINJG" +
      "_GcgActionNextPhase\020\002\022\035\n\031DNLLNJDINJG_Gcg" +
      "ActionDraw\020\003\022\037\n\033DNLLNJDINJG_GcgActionRed" +
      "raw\020\004\022&\n\"DNLLNJDINJG_GcgActionSelectOnst" +
      "age\020\005\022\035\n\031DNLLNJDINJG_GcgActionRoll\020\006\022\037\n\033" +
      "DNLLNJDINJG_GcgActionReroll\020\007\022\037\n\033DNLLNJD" +
      "INJG_GcgActionAttack\020\010\022!\n\035DNLLNJDINJG_Gc" +
      "gActionPlayCard\020\t\022\035\n\031DNLLNJDINJG_GcgActi" +
      "onPass\020\n\022\037\n\033DNLLNJDINJG_GcgActionReboot\020" +
      "\013\022!\n\035DNLLNJDINJG_GcgActionGameOver\020\014\022 \n\034" +
      "DNLLNJDINJG_GcgActionTrigger\020\r\022\"\n\036DNLLNJ" +
      "DINJG_GcgActionPhaseExit\020\016\022\037\n\033DNLLNJDINJ" +
      "G_GcgActionCustom\020\017\022#\n\037DNLLNJDINJG_GcgAc" +
      "tionNotifyCost\020\020\022\'\n#DNLLNJDINJG_GcgActio" +
      "nAfterOperation\020\021\022!\n\035DNLLNJDINJG_GcgActi" +
      "onUseSkill\020\022\022+\n\'DNLLNJDINJG_GcgActionNot" +
      "ifySkillPreview\020\023\022&\n\"DNLLNJDINJG_GcgActi" +
      "onPreviewAttack\020\024\022+\n\'DNLLNJDINJG_GcgActi" +
      "onPreviewAfterAttack\020\025\022$\n DNLLNJDINJG_Gc" +
      "gActionSendMessage\020\026\022)\n%DNLLNJDINJG_GcgA" +
      "ctionWaitingCharacter\020\027\022%\n!DNLLNJDINJG_G" +
      "cgActionTriggerSkill\020\030\022,\n(DNLLNJDINJG_Gc" +
      "gActionBeforeNextOperation\020\031\022,\n(DNLLNJDI" +
      "NJG_GcgActionRemoveCharacterCard\020\032\022%\n!DN" +
      "LLNJDINJG_GcgActionOnstageCheck\020\033B\033\n\031emu" +
      ".grasscutter.net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
