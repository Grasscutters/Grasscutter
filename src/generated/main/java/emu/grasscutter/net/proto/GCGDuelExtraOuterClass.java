// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GCGDuelExtra.proto

package emu.grasscutter.net.proto;

public final class GCGDuelExtraOuterClass {
  private GCGDuelExtraOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GCGDuelExtraOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GCGDuelExtra)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 card_id_list = 1;</code>
     * @return A list containing the cardIdList.
     */
    java.util.List<java.lang.Integer> getCardIdListList();
    /**
     * <code>repeated uint32 card_id_list = 1;</code>
     * @return The count of cardIdList.
     */
    int getCardIdListCount();
    /**
     * <code>repeated uint32 card_id_list = 1;</code>
     * @param index The index of the element to return.
     * @return The cardIdList at the given index.
     */
    int getCardIdList(int index);

    /**
     * <code>uint32 field_id = 2;</code>
     * @return The fieldId.
     */
    int getFieldId();

    /**
     * <code>uint32 card_back_id = 3;</code>
     * @return The cardBackId.
     */
    int getCardBackId();

    /**
     * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
     */
    int getCardFaceMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
     */
    boolean containsCardFaceMap(
        int key);
    /**
     * Use {@link #getCardFaceMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getCardFaceMap();
    /**
     * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getCardFaceMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
     */

    int getCardFaceMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
     */

    int getCardFaceMapOrThrow(
        int key);

    /**
     * <code>repeated .GCGChallengeData challenge_list = 5;</code>
     */
    java.util.List<emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData> 
        getChallengeListList();
    /**
     * <code>repeated .GCGChallengeData challenge_list = 5;</code>
     */
    emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData getChallengeList(int index);
    /**
     * <code>repeated .GCGChallengeData challenge_list = 5;</code>
     */
    int getChallengeListCount();
    /**
     * <code>repeated .GCGChallengeData challenge_list = 5;</code>
     */
    java.util.List<? extends emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeDataOrBuilder> 
        getChallengeListOrBuilderList();
    /**
     * <code>repeated .GCGChallengeData challenge_list = 5;</code>
     */
    emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeDataOrBuilder getChallengeListOrBuilder(
        int index);

    /**
     * <code>uint32 score = 6;</code>
     * @return The score.
     */
    int getScore();

    /**
     * <code>bool is_match_ai = 7;</code>
     * @return The isMatchAi.
     */
    boolean getIsMatchAi();

    /**
     * <code>uint32 ai_deck_id = 8;</code>
     * @return The aiDeckId.
     */
    int getAiDeckId();

    /**
     * <code>bool is_internal = 9;</code>
     * @return The isInternal.
     */
    boolean getIsInternal();

    /**
     * <code>repeated uint32 forbid_finish_challenge_list = 10;</code>
     * @return A list containing the forbidFinishChallengeList.
     */
    java.util.List<java.lang.Integer> getForbidFinishChallengeListList();
    /**
     * <code>repeated uint32 forbid_finish_challenge_list = 10;</code>
     * @return The count of forbidFinishChallengeList.
     */
    int getForbidFinishChallengeListCount();
    /**
     * <code>repeated uint32 forbid_finish_challenge_list = 10;</code>
     * @param index The index of the element to return.
     * @return The forbidFinishChallengeList at the given index.
     */
    int getForbidFinishChallengeList(int index);

    /**
     * <code>uint32 level = 11;</code>
     * @return The level.
     */
    int getLevel();

    /**
     * <code>uint32 client_version = 12;</code>
     * @return The clientVersion.
     */
    int getClientVersion();

    /**
     * <code>.PlatformType platform_type = 13;</code>
     * @return The enum numeric value on the wire for platformType.
     */
    int getPlatformTypeValue();
    /**
     * <code>.PlatformType platform_type = 13;</code>
     * @return The platformType.
     */
    emu.grasscutter.net.proto.PlatformTypeOuterClass.PlatformType getPlatformType();
  }
  /**
   * Protobuf type {@code GCGDuelExtra}
   */
  public static final class GCGDuelExtra extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GCGDuelExtra)
      GCGDuelExtraOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GCGDuelExtra.newBuilder() to construct.
    private GCGDuelExtra(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GCGDuelExtra() {
      cardIdList_ = emptyIntList();
      challengeList_ = java.util.Collections.emptyList();
      forbidFinishChallengeList_ = emptyIntList();
      platformType_ = 0;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GCGDuelExtra();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GCGDuelExtra(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                cardIdList_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              cardIdList_.addInt(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                cardIdList_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardIdList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {

              fieldId_ = input.readUInt32();
              break;
            }
            case 24: {

              cardBackId_ = input.readUInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                cardFaceMap_ = com.google.protobuf.MapField.newMapField(
                    CardFaceMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              cardFaceMap__ = input.readMessage(
                  CardFaceMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              cardFaceMap_.getMutableMap().put(
                  cardFaceMap__.getKey(), cardFaceMap__.getValue());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                challengeList_ = new java.util.ArrayList<emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData>();
                mutable_bitField0_ |= 0x00000004;
              }
              challengeList_.add(
                  input.readMessage(emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData.parser(), extensionRegistry));
              break;
            }
            case 48: {

              score_ = input.readUInt32();
              break;
            }
            case 56: {

              isMatchAi_ = input.readBool();
              break;
            }
            case 64: {

              aiDeckId_ = input.readUInt32();
              break;
            }
            case 72: {

              isInternal_ = input.readBool();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                forbidFinishChallengeList_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              forbidFinishChallengeList_.addInt(input.readUInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) != 0) && input.getBytesUntilLimit() > 0) {
                forbidFinishChallengeList_ = newIntList();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                forbidFinishChallengeList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {

              level_ = input.readUInt32();
              break;
            }
            case 96: {

              clientVersion_ = input.readUInt32();
              break;
            }
            case 104: {
              int rawValue = input.readEnum();

              platformType_ = rawValue;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          cardIdList_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          challengeList_ = java.util.Collections.unmodifiableList(challengeList_);
        }
        if (((mutable_bitField0_ & 0x00000008) != 0)) {
          forbidFinishChallengeList_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.GCGDuelExtraOuterClass.internal_static_GCGDuelExtra_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetCardFaceMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.GCGDuelExtraOuterClass.internal_static_GCGDuelExtra_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra.class, emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra.Builder.class);
    }

    public static final int CARD_ID_LIST_FIELD_NUMBER = 1;
    private com.google.protobuf.Internal.IntList cardIdList_;
    /**
     * <code>repeated uint32 card_id_list = 1;</code>
     * @return A list containing the cardIdList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getCardIdListList() {
      return cardIdList_;
    }
    /**
     * <code>repeated uint32 card_id_list = 1;</code>
     * @return The count of cardIdList.
     */
    public int getCardIdListCount() {
      return cardIdList_.size();
    }
    /**
     * <code>repeated uint32 card_id_list = 1;</code>
     * @param index The index of the element to return.
     * @return The cardIdList at the given index.
     */
    public int getCardIdList(int index) {
      return cardIdList_.getInt(index);
    }
    private int cardIdListMemoizedSerializedSize = -1;

    public static final int FIELD_ID_FIELD_NUMBER = 2;
    private int fieldId_;
    /**
     * <code>uint32 field_id = 2;</code>
     * @return The fieldId.
     */
    @java.lang.Override
    public int getFieldId() {
      return fieldId_;
    }

    public static final int CARD_BACK_ID_FIELD_NUMBER = 3;
    private int cardBackId_;
    /**
     * <code>uint32 card_back_id = 3;</code>
     * @return The cardBackId.
     */
    @java.lang.Override
    public int getCardBackId() {
      return cardBackId_;
    }

    public static final int CARD_FACE_MAP_FIELD_NUMBER = 4;
    private static final class CardFaceMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.grasscutter.net.proto.GCGDuelExtraOuterClass.internal_static_GCGDuelExtra_CardFaceMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> cardFaceMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetCardFaceMap() {
      if (cardFaceMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            CardFaceMapDefaultEntryHolder.defaultEntry);
      }
      return cardFaceMap_;
    }

    public int getCardFaceMapCount() {
      return internalGetCardFaceMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
     */

    @java.lang.Override
    public boolean containsCardFaceMap(
        int key) {
      
      return internalGetCardFaceMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getCardFaceMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getCardFaceMap() {
      return getCardFaceMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getCardFaceMapMap() {
      return internalGetCardFaceMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
     */
    @java.lang.Override

    public int getCardFaceMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetCardFaceMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
     */
    @java.lang.Override

    public int getCardFaceMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetCardFaceMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int CHALLENGE_LIST_FIELD_NUMBER = 5;
    private java.util.List<emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData> challengeList_;
    /**
     * <code>repeated .GCGChallengeData challenge_list = 5;</code>
     */
    @java.lang.Override
    public java.util.List<emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData> getChallengeListList() {
      return challengeList_;
    }
    /**
     * <code>repeated .GCGChallengeData challenge_list = 5;</code>
     */
    @java.lang.Override
    public java.util.List<? extends emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeDataOrBuilder> 
        getChallengeListOrBuilderList() {
      return challengeList_;
    }
    /**
     * <code>repeated .GCGChallengeData challenge_list = 5;</code>
     */
    @java.lang.Override
    public int getChallengeListCount() {
      return challengeList_.size();
    }
    /**
     * <code>repeated .GCGChallengeData challenge_list = 5;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData getChallengeList(int index) {
      return challengeList_.get(index);
    }
    /**
     * <code>repeated .GCGChallengeData challenge_list = 5;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeDataOrBuilder getChallengeListOrBuilder(
        int index) {
      return challengeList_.get(index);
    }

    public static final int SCORE_FIELD_NUMBER = 6;
    private int score_;
    /**
     * <code>uint32 score = 6;</code>
     * @return The score.
     */
    @java.lang.Override
    public int getScore() {
      return score_;
    }

    public static final int IS_MATCH_AI_FIELD_NUMBER = 7;
    private boolean isMatchAi_;
    /**
     * <code>bool is_match_ai = 7;</code>
     * @return The isMatchAi.
     */
    @java.lang.Override
    public boolean getIsMatchAi() {
      return isMatchAi_;
    }

    public static final int AI_DECK_ID_FIELD_NUMBER = 8;
    private int aiDeckId_;
    /**
     * <code>uint32 ai_deck_id = 8;</code>
     * @return The aiDeckId.
     */
    @java.lang.Override
    public int getAiDeckId() {
      return aiDeckId_;
    }

    public static final int IS_INTERNAL_FIELD_NUMBER = 9;
    private boolean isInternal_;
    /**
     * <code>bool is_internal = 9;</code>
     * @return The isInternal.
     */
    @java.lang.Override
    public boolean getIsInternal() {
      return isInternal_;
    }

    public static final int FORBID_FINISH_CHALLENGE_LIST_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.IntList forbidFinishChallengeList_;
    /**
     * <code>repeated uint32 forbid_finish_challenge_list = 10;</code>
     * @return A list containing the forbidFinishChallengeList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getForbidFinishChallengeListList() {
      return forbidFinishChallengeList_;
    }
    /**
     * <code>repeated uint32 forbid_finish_challenge_list = 10;</code>
     * @return The count of forbidFinishChallengeList.
     */
    public int getForbidFinishChallengeListCount() {
      return forbidFinishChallengeList_.size();
    }
    /**
     * <code>repeated uint32 forbid_finish_challenge_list = 10;</code>
     * @param index The index of the element to return.
     * @return The forbidFinishChallengeList at the given index.
     */
    public int getForbidFinishChallengeList(int index) {
      return forbidFinishChallengeList_.getInt(index);
    }
    private int forbidFinishChallengeListMemoizedSerializedSize = -1;

    public static final int LEVEL_FIELD_NUMBER = 11;
    private int level_;
    /**
     * <code>uint32 level = 11;</code>
     * @return The level.
     */
    @java.lang.Override
    public int getLevel() {
      return level_;
    }

    public static final int CLIENT_VERSION_FIELD_NUMBER = 12;
    private int clientVersion_;
    /**
     * <code>uint32 client_version = 12;</code>
     * @return The clientVersion.
     */
    @java.lang.Override
    public int getClientVersion() {
      return clientVersion_;
    }

    public static final int PLATFORM_TYPE_FIELD_NUMBER = 13;
    private int platformType_;
    /**
     * <code>.PlatformType platform_type = 13;</code>
     * @return The enum numeric value on the wire for platformType.
     */
    @java.lang.Override public int getPlatformTypeValue() {
      return platformType_;
    }
    /**
     * <code>.PlatformType platform_type = 13;</code>
     * @return The platformType.
     */
    @java.lang.Override public emu.grasscutter.net.proto.PlatformTypeOuterClass.PlatformType getPlatformType() {
      @SuppressWarnings("deprecation")
      emu.grasscutter.net.proto.PlatformTypeOuterClass.PlatformType result = emu.grasscutter.net.proto.PlatformTypeOuterClass.PlatformType.valueOf(platformType_);
      return result == null ? emu.grasscutter.net.proto.PlatformTypeOuterClass.PlatformType.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getCardIdListList().size() > 0) {
        output.writeUInt32NoTag(10);
        output.writeUInt32NoTag(cardIdListMemoizedSerializedSize);
      }
      for (int i = 0; i < cardIdList_.size(); i++) {
        output.writeUInt32NoTag(cardIdList_.getInt(i));
      }
      if (fieldId_ != 0) {
        output.writeUInt32(2, fieldId_);
      }
      if (cardBackId_ != 0) {
        output.writeUInt32(3, cardBackId_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetCardFaceMap(),
          CardFaceMapDefaultEntryHolder.defaultEntry,
          4);
      for (int i = 0; i < challengeList_.size(); i++) {
        output.writeMessage(5, challengeList_.get(i));
      }
      if (score_ != 0) {
        output.writeUInt32(6, score_);
      }
      if (isMatchAi_ != false) {
        output.writeBool(7, isMatchAi_);
      }
      if (aiDeckId_ != 0) {
        output.writeUInt32(8, aiDeckId_);
      }
      if (isInternal_ != false) {
        output.writeBool(9, isInternal_);
      }
      if (getForbidFinishChallengeListList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(forbidFinishChallengeListMemoizedSerializedSize);
      }
      for (int i = 0; i < forbidFinishChallengeList_.size(); i++) {
        output.writeUInt32NoTag(forbidFinishChallengeList_.getInt(i));
      }
      if (level_ != 0) {
        output.writeUInt32(11, level_);
      }
      if (clientVersion_ != 0) {
        output.writeUInt32(12, clientVersion_);
      }
      if (platformType_ != emu.grasscutter.net.proto.PlatformTypeOuterClass.PlatformType.PLATFORM_TYPE_EDITOR.getNumber()) {
        output.writeEnum(13, platformType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cardIdList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(cardIdList_.getInt(i));
        }
        size += dataSize;
        if (!getCardIdListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        cardIdListMemoizedSerializedSize = dataSize;
      }
      if (fieldId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, fieldId_);
      }
      if (cardBackId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, cardBackId_);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetCardFaceMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        cardFaceMap__ = CardFaceMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, cardFaceMap__);
      }
      for (int i = 0; i < challengeList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, challengeList_.get(i));
      }
      if (score_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, score_);
      }
      if (isMatchAi_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(7, isMatchAi_);
      }
      if (aiDeckId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, aiDeckId_);
      }
      if (isInternal_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, isInternal_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < forbidFinishChallengeList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(forbidFinishChallengeList_.getInt(i));
        }
        size += dataSize;
        if (!getForbidFinishChallengeListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        forbidFinishChallengeListMemoizedSerializedSize = dataSize;
      }
      if (level_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, level_);
      }
      if (clientVersion_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, clientVersion_);
      }
      if (platformType_ != emu.grasscutter.net.proto.PlatformTypeOuterClass.PlatformType.PLATFORM_TYPE_EDITOR.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(13, platformType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra other = (emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra) obj;

      if (!getCardIdListList()
          .equals(other.getCardIdListList())) return false;
      if (getFieldId()
          != other.getFieldId()) return false;
      if (getCardBackId()
          != other.getCardBackId()) return false;
      if (!internalGetCardFaceMap().equals(
          other.internalGetCardFaceMap())) return false;
      if (!getChallengeListList()
          .equals(other.getChallengeListList())) return false;
      if (getScore()
          != other.getScore()) return false;
      if (getIsMatchAi()
          != other.getIsMatchAi()) return false;
      if (getAiDeckId()
          != other.getAiDeckId()) return false;
      if (getIsInternal()
          != other.getIsInternal()) return false;
      if (!getForbidFinishChallengeListList()
          .equals(other.getForbidFinishChallengeListList())) return false;
      if (getLevel()
          != other.getLevel()) return false;
      if (getClientVersion()
          != other.getClientVersion()) return false;
      if (platformType_ != other.platformType_) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getCardIdListCount() > 0) {
        hash = (37 * hash) + CARD_ID_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getCardIdListList().hashCode();
      }
      hash = (37 * hash) + FIELD_ID_FIELD_NUMBER;
      hash = (53 * hash) + getFieldId();
      hash = (37 * hash) + CARD_BACK_ID_FIELD_NUMBER;
      hash = (53 * hash) + getCardBackId();
      if (!internalGetCardFaceMap().getMap().isEmpty()) {
        hash = (37 * hash) + CARD_FACE_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetCardFaceMap().hashCode();
      }
      if (getChallengeListCount() > 0) {
        hash = (37 * hash) + CHALLENGE_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getChallengeListList().hashCode();
      }
      hash = (37 * hash) + SCORE_FIELD_NUMBER;
      hash = (53 * hash) + getScore();
      hash = (37 * hash) + IS_MATCH_AI_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsMatchAi());
      hash = (37 * hash) + AI_DECK_ID_FIELD_NUMBER;
      hash = (53 * hash) + getAiDeckId();
      hash = (37 * hash) + IS_INTERNAL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsInternal());
      if (getForbidFinishChallengeListCount() > 0) {
        hash = (37 * hash) + FORBID_FINISH_CHALLENGE_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getForbidFinishChallengeListList().hashCode();
      }
      hash = (37 * hash) + LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getLevel();
      hash = (37 * hash) + CLIENT_VERSION_FIELD_NUMBER;
      hash = (53 * hash) + getClientVersion();
      hash = (37 * hash) + PLATFORM_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + platformType_;
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GCGDuelExtra}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GCGDuelExtra)
        emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtraOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.GCGDuelExtraOuterClass.internal_static_GCGDuelExtra_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetCardFaceMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableCardFaceMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.GCGDuelExtraOuterClass.internal_static_GCGDuelExtra_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra.class, emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getChallengeListFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        cardIdList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        fieldId_ = 0;

        cardBackId_ = 0;

        internalGetMutableCardFaceMap().clear();
        if (challengeListBuilder_ == null) {
          challengeList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          challengeListBuilder_.clear();
        }
        score_ = 0;

        isMatchAi_ = false;

        aiDeckId_ = 0;

        isInternal_ = false;

        forbidFinishChallengeList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        level_ = 0;

        clientVersion_ = 0;

        platformType_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.GCGDuelExtraOuterClass.internal_static_GCGDuelExtra_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra build() {
        emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra buildPartial() {
        emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra result = new emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          cardIdList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cardIdList_ = cardIdList_;
        result.fieldId_ = fieldId_;
        result.cardBackId_ = cardBackId_;
        result.cardFaceMap_ = internalGetCardFaceMap();
        result.cardFaceMap_.makeImmutable();
        if (challengeListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            challengeList_ = java.util.Collections.unmodifiableList(challengeList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.challengeList_ = challengeList_;
        } else {
          result.challengeList_ = challengeListBuilder_.build();
        }
        result.score_ = score_;
        result.isMatchAi_ = isMatchAi_;
        result.aiDeckId_ = aiDeckId_;
        result.isInternal_ = isInternal_;
        if (((bitField0_ & 0x00000008) != 0)) {
          forbidFinishChallengeList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.forbidFinishChallengeList_ = forbidFinishChallengeList_;
        result.level_ = level_;
        result.clientVersion_ = clientVersion_;
        result.platformType_ = platformType_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra) {
          return mergeFrom((emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra other) {
        if (other == emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra.getDefaultInstance()) return this;
        if (!other.cardIdList_.isEmpty()) {
          if (cardIdList_.isEmpty()) {
            cardIdList_ = other.cardIdList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardIdListIsMutable();
            cardIdList_.addAll(other.cardIdList_);
          }
          onChanged();
        }
        if (other.getFieldId() != 0) {
          setFieldId(other.getFieldId());
        }
        if (other.getCardBackId() != 0) {
          setCardBackId(other.getCardBackId());
        }
        internalGetMutableCardFaceMap().mergeFrom(
            other.internalGetCardFaceMap());
        if (challengeListBuilder_ == null) {
          if (!other.challengeList_.isEmpty()) {
            if (challengeList_.isEmpty()) {
              challengeList_ = other.challengeList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureChallengeListIsMutable();
              challengeList_.addAll(other.challengeList_);
            }
            onChanged();
          }
        } else {
          if (!other.challengeList_.isEmpty()) {
            if (challengeListBuilder_.isEmpty()) {
              challengeListBuilder_.dispose();
              challengeListBuilder_ = null;
              challengeList_ = other.challengeList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              challengeListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getChallengeListFieldBuilder() : null;
            } else {
              challengeListBuilder_.addAllMessages(other.challengeList_);
            }
          }
        }
        if (other.getScore() != 0) {
          setScore(other.getScore());
        }
        if (other.getIsMatchAi() != false) {
          setIsMatchAi(other.getIsMatchAi());
        }
        if (other.getAiDeckId() != 0) {
          setAiDeckId(other.getAiDeckId());
        }
        if (other.getIsInternal() != false) {
          setIsInternal(other.getIsInternal());
        }
        if (!other.forbidFinishChallengeList_.isEmpty()) {
          if (forbidFinishChallengeList_.isEmpty()) {
            forbidFinishChallengeList_ = other.forbidFinishChallengeList_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureForbidFinishChallengeListIsMutable();
            forbidFinishChallengeList_.addAll(other.forbidFinishChallengeList_);
          }
          onChanged();
        }
        if (other.getLevel() != 0) {
          setLevel(other.getLevel());
        }
        if (other.getClientVersion() != 0) {
          setClientVersion(other.getClientVersion());
        }
        if (other.platformType_ != 0) {
          setPlatformTypeValue(other.getPlatformTypeValue());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList cardIdList_ = emptyIntList();
      private void ensureCardIdListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          cardIdList_ = mutableCopy(cardIdList_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 card_id_list = 1;</code>
       * @return A list containing the cardIdList.
       */
      public java.util.List<java.lang.Integer>
          getCardIdListList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(cardIdList_) : cardIdList_;
      }
      /**
       * <code>repeated uint32 card_id_list = 1;</code>
       * @return The count of cardIdList.
       */
      public int getCardIdListCount() {
        return cardIdList_.size();
      }
      /**
       * <code>repeated uint32 card_id_list = 1;</code>
       * @param index The index of the element to return.
       * @return The cardIdList at the given index.
       */
      public int getCardIdList(int index) {
        return cardIdList_.getInt(index);
      }
      /**
       * <code>repeated uint32 card_id_list = 1;</code>
       * @param index The index to set the value at.
       * @param value The cardIdList to set.
       * @return This builder for chaining.
       */
      public Builder setCardIdList(
          int index, int value) {
        ensureCardIdListIsMutable();
        cardIdList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 card_id_list = 1;</code>
       * @param value The cardIdList to add.
       * @return This builder for chaining.
       */
      public Builder addCardIdList(int value) {
        ensureCardIdListIsMutable();
        cardIdList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 card_id_list = 1;</code>
       * @param values The cardIdList to add.
       * @return This builder for chaining.
       */
      public Builder addAllCardIdList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardIdListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, cardIdList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 card_id_list = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearCardIdList() {
        cardIdList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int fieldId_ ;
      /**
       * <code>uint32 field_id = 2;</code>
       * @return The fieldId.
       */
      @java.lang.Override
      public int getFieldId() {
        return fieldId_;
      }
      /**
       * <code>uint32 field_id = 2;</code>
       * @param value The fieldId to set.
       * @return This builder for chaining.
       */
      public Builder setFieldId(int value) {
        
        fieldId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 field_id = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearFieldId() {
        
        fieldId_ = 0;
        onChanged();
        return this;
      }

      private int cardBackId_ ;
      /**
       * <code>uint32 card_back_id = 3;</code>
       * @return The cardBackId.
       */
      @java.lang.Override
      public int getCardBackId() {
        return cardBackId_;
      }
      /**
       * <code>uint32 card_back_id = 3;</code>
       * @param value The cardBackId to set.
       * @return This builder for chaining.
       */
      public Builder setCardBackId(int value) {
        
        cardBackId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 card_back_id = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearCardBackId() {
        
        cardBackId_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> cardFaceMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetCardFaceMap() {
        if (cardFaceMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              CardFaceMapDefaultEntryHolder.defaultEntry);
        }
        return cardFaceMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableCardFaceMap() {
        onChanged();;
        if (cardFaceMap_ == null) {
          cardFaceMap_ = com.google.protobuf.MapField.newMapField(
              CardFaceMapDefaultEntryHolder.defaultEntry);
        }
        if (!cardFaceMap_.isMutable()) {
          cardFaceMap_ = cardFaceMap_.copy();
        }
        return cardFaceMap_;
      }

      public int getCardFaceMapCount() {
        return internalGetCardFaceMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
       */

      @java.lang.Override
      public boolean containsCardFaceMap(
          int key) {
        
        return internalGetCardFaceMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getCardFaceMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getCardFaceMap() {
        return getCardFaceMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getCardFaceMapMap() {
        return internalGetCardFaceMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
       */
      @java.lang.Override

      public int getCardFaceMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetCardFaceMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
       */
      @java.lang.Override

      public int getCardFaceMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetCardFaceMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearCardFaceMap() {
        internalGetMutableCardFaceMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
       */

      public Builder removeCardFaceMap(
          int key) {
        
        internalGetMutableCardFaceMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableCardFaceMap() {
        return internalGetMutableCardFaceMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
       */
      public Builder putCardFaceMap(
          int key,
          int value) {
        
        
        internalGetMutableCardFaceMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; card_face_map = 4;</code>
       */

      public Builder putAllCardFaceMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableCardFaceMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private java.util.List<emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData> challengeList_ =
        java.util.Collections.emptyList();
      private void ensureChallengeListIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          challengeList_ = new java.util.ArrayList<emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData>(challengeList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData, emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData.Builder, emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeDataOrBuilder> challengeListBuilder_;

      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData> getChallengeListList() {
        if (challengeListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(challengeList_);
        } else {
          return challengeListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public int getChallengeListCount() {
        if (challengeListBuilder_ == null) {
          return challengeList_.size();
        } else {
          return challengeListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData getChallengeList(int index) {
        if (challengeListBuilder_ == null) {
          return challengeList_.get(index);
        } else {
          return challengeListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public Builder setChallengeList(
          int index, emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData value) {
        if (challengeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChallengeListIsMutable();
          challengeList_.set(index, value);
          onChanged();
        } else {
          challengeListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public Builder setChallengeList(
          int index, emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData.Builder builderForValue) {
        if (challengeListBuilder_ == null) {
          ensureChallengeListIsMutable();
          challengeList_.set(index, builderForValue.build());
          onChanged();
        } else {
          challengeListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public Builder addChallengeList(emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData value) {
        if (challengeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChallengeListIsMutable();
          challengeList_.add(value);
          onChanged();
        } else {
          challengeListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public Builder addChallengeList(
          int index, emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData value) {
        if (challengeListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChallengeListIsMutable();
          challengeList_.add(index, value);
          onChanged();
        } else {
          challengeListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public Builder addChallengeList(
          emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData.Builder builderForValue) {
        if (challengeListBuilder_ == null) {
          ensureChallengeListIsMutable();
          challengeList_.add(builderForValue.build());
          onChanged();
        } else {
          challengeListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public Builder addChallengeList(
          int index, emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData.Builder builderForValue) {
        if (challengeListBuilder_ == null) {
          ensureChallengeListIsMutable();
          challengeList_.add(index, builderForValue.build());
          onChanged();
        } else {
          challengeListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public Builder addAllChallengeList(
          java.lang.Iterable<? extends emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData> values) {
        if (challengeListBuilder_ == null) {
          ensureChallengeListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, challengeList_);
          onChanged();
        } else {
          challengeListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public Builder clearChallengeList() {
        if (challengeListBuilder_ == null) {
          challengeList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          challengeListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public Builder removeChallengeList(int index) {
        if (challengeListBuilder_ == null) {
          ensureChallengeListIsMutable();
          challengeList_.remove(index);
          onChanged();
        } else {
          challengeListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData.Builder getChallengeListBuilder(
          int index) {
        return getChallengeListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeDataOrBuilder getChallengeListOrBuilder(
          int index) {
        if (challengeListBuilder_ == null) {
          return challengeList_.get(index);  } else {
          return challengeListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public java.util.List<? extends emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeDataOrBuilder> 
           getChallengeListOrBuilderList() {
        if (challengeListBuilder_ != null) {
          return challengeListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(challengeList_);
        }
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData.Builder addChallengeListBuilder() {
        return getChallengeListFieldBuilder().addBuilder(
            emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData.getDefaultInstance());
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData.Builder addChallengeListBuilder(
          int index) {
        return getChallengeListFieldBuilder().addBuilder(
            index, emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData.getDefaultInstance());
      }
      /**
       * <code>repeated .GCGChallengeData challenge_list = 5;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData.Builder> 
           getChallengeListBuilderList() {
        return getChallengeListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData, emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData.Builder, emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeDataOrBuilder> 
          getChallengeListFieldBuilder() {
        if (challengeListBuilder_ == null) {
          challengeListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData, emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeData.Builder, emu.grasscutter.net.proto.GCGChallengeDataOuterClass.GCGChallengeDataOrBuilder>(
                  challengeList_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          challengeList_ = null;
        }
        return challengeListBuilder_;
      }

      private int score_ ;
      /**
       * <code>uint32 score = 6;</code>
       * @return The score.
       */
      @java.lang.Override
      public int getScore() {
        return score_;
      }
      /**
       * <code>uint32 score = 6;</code>
       * @param value The score to set.
       * @return This builder for chaining.
       */
      public Builder setScore(int value) {
        
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 score = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearScore() {
        
        score_ = 0;
        onChanged();
        return this;
      }

      private boolean isMatchAi_ ;
      /**
       * <code>bool is_match_ai = 7;</code>
       * @return The isMatchAi.
       */
      @java.lang.Override
      public boolean getIsMatchAi() {
        return isMatchAi_;
      }
      /**
       * <code>bool is_match_ai = 7;</code>
       * @param value The isMatchAi to set.
       * @return This builder for chaining.
       */
      public Builder setIsMatchAi(boolean value) {
        
        isMatchAi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_match_ai = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsMatchAi() {
        
        isMatchAi_ = false;
        onChanged();
        return this;
      }

      private int aiDeckId_ ;
      /**
       * <code>uint32 ai_deck_id = 8;</code>
       * @return The aiDeckId.
       */
      @java.lang.Override
      public int getAiDeckId() {
        return aiDeckId_;
      }
      /**
       * <code>uint32 ai_deck_id = 8;</code>
       * @param value The aiDeckId to set.
       * @return This builder for chaining.
       */
      public Builder setAiDeckId(int value) {
        
        aiDeckId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 ai_deck_id = 8;</code>
       * @return This builder for chaining.
       */
      public Builder clearAiDeckId() {
        
        aiDeckId_ = 0;
        onChanged();
        return this;
      }

      private boolean isInternal_ ;
      /**
       * <code>bool is_internal = 9;</code>
       * @return The isInternal.
       */
      @java.lang.Override
      public boolean getIsInternal() {
        return isInternal_;
      }
      /**
       * <code>bool is_internal = 9;</code>
       * @param value The isInternal to set.
       * @return This builder for chaining.
       */
      public Builder setIsInternal(boolean value) {
        
        isInternal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_internal = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsInternal() {
        
        isInternal_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.IntList forbidFinishChallengeList_ = emptyIntList();
      private void ensureForbidFinishChallengeListIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          forbidFinishChallengeList_ = mutableCopy(forbidFinishChallengeList_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated uint32 forbid_finish_challenge_list = 10;</code>
       * @return A list containing the forbidFinishChallengeList.
       */
      public java.util.List<java.lang.Integer>
          getForbidFinishChallengeListList() {
        return ((bitField0_ & 0x00000008) != 0) ?
                 java.util.Collections.unmodifiableList(forbidFinishChallengeList_) : forbidFinishChallengeList_;
      }
      /**
       * <code>repeated uint32 forbid_finish_challenge_list = 10;</code>
       * @return The count of forbidFinishChallengeList.
       */
      public int getForbidFinishChallengeListCount() {
        return forbidFinishChallengeList_.size();
      }
      /**
       * <code>repeated uint32 forbid_finish_challenge_list = 10;</code>
       * @param index The index of the element to return.
       * @return The forbidFinishChallengeList at the given index.
       */
      public int getForbidFinishChallengeList(int index) {
        return forbidFinishChallengeList_.getInt(index);
      }
      /**
       * <code>repeated uint32 forbid_finish_challenge_list = 10;</code>
       * @param index The index to set the value at.
       * @param value The forbidFinishChallengeList to set.
       * @return This builder for chaining.
       */
      public Builder setForbidFinishChallengeList(
          int index, int value) {
        ensureForbidFinishChallengeListIsMutable();
        forbidFinishChallengeList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 forbid_finish_challenge_list = 10;</code>
       * @param value The forbidFinishChallengeList to add.
       * @return This builder for chaining.
       */
      public Builder addForbidFinishChallengeList(int value) {
        ensureForbidFinishChallengeListIsMutable();
        forbidFinishChallengeList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 forbid_finish_challenge_list = 10;</code>
       * @param values The forbidFinishChallengeList to add.
       * @return This builder for chaining.
       */
      public Builder addAllForbidFinishChallengeList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureForbidFinishChallengeListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, forbidFinishChallengeList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 forbid_finish_challenge_list = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearForbidFinishChallengeList() {
        forbidFinishChallengeList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      private int level_ ;
      /**
       * <code>uint32 level = 11;</code>
       * @return The level.
       */
      @java.lang.Override
      public int getLevel() {
        return level_;
      }
      /**
       * <code>uint32 level = 11;</code>
       * @param value The level to set.
       * @return This builder for chaining.
       */
      public Builder setLevel(int value) {
        
        level_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 level = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearLevel() {
        
        level_ = 0;
        onChanged();
        return this;
      }

      private int clientVersion_ ;
      /**
       * <code>uint32 client_version = 12;</code>
       * @return The clientVersion.
       */
      @java.lang.Override
      public int getClientVersion() {
        return clientVersion_;
      }
      /**
       * <code>uint32 client_version = 12;</code>
       * @param value The clientVersion to set.
       * @return This builder for chaining.
       */
      public Builder setClientVersion(int value) {
        
        clientVersion_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 client_version = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearClientVersion() {
        
        clientVersion_ = 0;
        onChanged();
        return this;
      }

      private int platformType_ = 0;
      /**
       * <code>.PlatformType platform_type = 13;</code>
       * @return The enum numeric value on the wire for platformType.
       */
      @java.lang.Override public int getPlatformTypeValue() {
        return platformType_;
      }
      /**
       * <code>.PlatformType platform_type = 13;</code>
       * @param value The enum numeric value on the wire for platformType to set.
       * @return This builder for chaining.
       */
      public Builder setPlatformTypeValue(int value) {
        
        platformType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>.PlatformType platform_type = 13;</code>
       * @return The platformType.
       */
      @java.lang.Override
      public emu.grasscutter.net.proto.PlatformTypeOuterClass.PlatformType getPlatformType() {
        @SuppressWarnings("deprecation")
        emu.grasscutter.net.proto.PlatformTypeOuterClass.PlatformType result = emu.grasscutter.net.proto.PlatformTypeOuterClass.PlatformType.valueOf(platformType_);
        return result == null ? emu.grasscutter.net.proto.PlatformTypeOuterClass.PlatformType.UNRECOGNIZED : result;
      }
      /**
       * <code>.PlatformType platform_type = 13;</code>
       * @param value The platformType to set.
       * @return This builder for chaining.
       */
      public Builder setPlatformType(emu.grasscutter.net.proto.PlatformTypeOuterClass.PlatformType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        platformType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.PlatformType platform_type = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlatformType() {
        
        platformType_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GCGDuelExtra)
    }

    // @@protoc_insertion_point(class_scope:GCGDuelExtra)
    private static final emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra();
    }

    public static emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GCGDuelExtra>
        PARSER = new com.google.protobuf.AbstractParser<GCGDuelExtra>() {
      @java.lang.Override
      public GCGDuelExtra parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GCGDuelExtra(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GCGDuelExtra> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GCGDuelExtra> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.GCGDuelExtraOuterClass.GCGDuelExtra getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GCGDuelExtra_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GCGDuelExtra_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GCGDuelExtra_CardFaceMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GCGDuelExtra_CardFaceMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022GCGDuelExtra.proto\032\026GCGChallengeData.p" +
      "roto\032\022PlatformType.proto\"\242\003\n\014GCGDuelExtr" +
      "a\022\024\n\014card_id_list\030\001 \003(\r\022\020\n\010field_id\030\002 \001(" +
      "\r\022\024\n\014card_back_id\030\003 \001(\r\0225\n\rcard_face_map" +
      "\030\004 \003(\0132\036.GCGDuelExtra.CardFaceMapEntry\022)" +
      "\n\016challenge_list\030\005 \003(\0132\021.GCGChallengeDat" +
      "a\022\r\n\005score\030\006 \001(\r\022\023\n\013is_match_ai\030\007 \001(\010\022\022\n" +
      "\nai_deck_id\030\010 \001(\r\022\023\n\013is_internal\030\t \001(\010\022$" +
      "\n\034forbid_finish_challenge_list\030\n \003(\r\022\r\n\005" +
      "level\030\013 \001(\r\022\026\n\016client_version\030\014 \001(\r\022$\n\rp" +
      "latform_type\030\r \001(\0162\r.PlatformType\0322\n\020Car" +
      "dFaceMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(" +
      "\r:\0028\001B\033\n\031emu.grasscutter.net.protob\006prot" +
      "o3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          emu.grasscutter.net.proto.GCGChallengeDataOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.PlatformTypeOuterClass.getDescriptor(),
        });
    internal_static_GCGDuelExtra_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_GCGDuelExtra_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GCGDuelExtra_descriptor,
        new java.lang.String[] { "CardIdList", "FieldId", "CardBackId", "CardFaceMap", "ChallengeList", "Score", "IsMatchAi", "AiDeckId", "IsInternal", "ForbidFinishChallengeList", "Level", "ClientVersion", "PlatformType", });
    internal_static_GCGDuelExtra_CardFaceMapEntry_descriptor =
      internal_static_GCGDuelExtra_descriptor.getNestedTypes().get(0);
    internal_static_GCGDuelExtra_CardFaceMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GCGDuelExtra_CardFaceMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    emu.grasscutter.net.proto.GCGChallengeDataOuterClass.getDescriptor();
    emu.grasscutter.net.proto.PlatformTypeOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
