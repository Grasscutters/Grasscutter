// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GetQuestLackingResourceRsp.proto

package emu.grasscutter.net.proto;

public final class GetQuestLackingResourceRspOuterClass {
  private GetQuestLackingResourceRspOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface GetQuestLackingResourceRspOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GetQuestLackingResourceRsp)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 lacked_npc_list = 15;</code>
     * @return A list containing the lackedNpcList.
     */
    java.util.List<java.lang.Integer> getLackedNpcListList();
    /**
     * <code>repeated uint32 lacked_npc_list = 15;</code>
     * @return The count of lackedNpcList.
     */
    int getLackedNpcListCount();
    /**
     * <code>repeated uint32 lacked_npc_list = 15;</code>
     * @param index The index of the element to return.
     * @return The lackedNpcList at the given index.
     */
    int getLackedNpcList(int index);

    /**
     * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
     */
    int getLackedPlaceMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
     */
    boolean containsLackedPlaceMap(
        int key);
    /**
     * Use {@link #getLackedPlaceMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLackedPlaceMap();
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLackedPlaceMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
     */

    int getLackedPlaceMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
     */

    int getLackedPlaceMapOrThrow(
        int key);

    /**
     * <code>repeated uint32 lacked_place_list = 10;</code>
     * @return A list containing the lackedPlaceList.
     */
    java.util.List<java.lang.Integer> getLackedPlaceListList();
    /**
     * <code>repeated uint32 lacked_place_list = 10;</code>
     * @return The count of lackedPlaceList.
     */
    int getLackedPlaceListCount();
    /**
     * <code>repeated uint32 lacked_place_list = 10;</code>
     * @param index The index of the element to return.
     * @return The lackedPlaceList at the given index.
     */
    int getLackedPlaceList(int index);

    /**
     * <code>int32 retcode = 9;</code>
     * @return The retcode.
     */
    int getRetcode();

    /**
     * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
     */
    int getLackedNpcMapCount();
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
     */
    boolean containsLackedNpcMap(
        int key);
    /**
     * Use {@link #getLackedNpcMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLackedNpcMap();
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
     */
    java.util.Map<java.lang.Integer, java.lang.Integer>
    getLackedNpcMapMap();
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
     */

    int getLackedNpcMapOrDefault(
        int key,
        int defaultValue);
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
     */

    int getLackedNpcMapOrThrow(
        int key);

    /**
     * <code>uint32 quest_id = 7;</code>
     * @return The questId.
     */
    int getQuestId();
  }
  /**
   * <pre>
   * CmdId: 28297
   * Obf: FDCIDFLNJKP
   * </pre>
   *
   * Protobuf type {@code GetQuestLackingResourceRsp}
   */
  public static final class GetQuestLackingResourceRsp extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:GetQuestLackingResourceRsp)
      GetQuestLackingResourceRspOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use GetQuestLackingResourceRsp.newBuilder() to construct.
    private GetQuestLackingResourceRsp(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private GetQuestLackingResourceRsp() {
      lackedNpcList_ = emptyIntList();
      lackedPlaceList_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new GetQuestLackingResourceRsp();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private GetQuestLackingResourceRsp(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000008) != 0)) {
                lackedNpcMap_ = com.google.protobuf.MapField.newMapField(
                    LackedNpcMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000008;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              lackedNpcMap__ = input.readMessage(
                  LackedNpcMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              lackedNpcMap_.getMutableMap().put(
                  lackedNpcMap__.getKey(), lackedNpcMap__.getValue());
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                lackedPlaceMap_ = com.google.protobuf.MapField.newMapField(
                    LackedPlaceMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000002;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
              lackedPlaceMap__ = input.readMessage(
                  LackedPlaceMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              lackedPlaceMap_.getMutableMap().put(
                  lackedPlaceMap__.getKey(), lackedPlaceMap__.getValue());
              break;
            }
            case 56: {

              questId_ = input.readUInt32();
              break;
            }
            case 72: {

              retcode_ = input.readInt32();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                lackedPlaceList_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              lackedPlaceList_.addInt(input.readUInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) != 0) && input.getBytesUntilLimit() > 0) {
                lackedPlaceList_ = newIntList();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                lackedPlaceList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                lackedNpcList_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              lackedNpcList_.addInt(input.readUInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                lackedNpcList_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                lackedNpcList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          lackedPlaceList_.makeImmutable(); // C
        }
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          lackedNpcList_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.internal_static_GetQuestLackingResourceRsp_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 4:
          return internalGetLackedPlaceMap();
        case 1:
          return internalGetLackedNpcMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.internal_static_GetQuestLackingResourceRsp_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp.class, emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp.Builder.class);
    }

    public static final int LACKED_NPC_LIST_FIELD_NUMBER = 15;
    private com.google.protobuf.Internal.IntList lackedNpcList_;
    /**
     * <code>repeated uint32 lacked_npc_list = 15;</code>
     * @return A list containing the lackedNpcList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getLackedNpcListList() {
      return lackedNpcList_;
    }
    /**
     * <code>repeated uint32 lacked_npc_list = 15;</code>
     * @return The count of lackedNpcList.
     */
    public int getLackedNpcListCount() {
      return lackedNpcList_.size();
    }
    /**
     * <code>repeated uint32 lacked_npc_list = 15;</code>
     * @param index The index of the element to return.
     * @return The lackedNpcList at the given index.
     */
    public int getLackedNpcList(int index) {
      return lackedNpcList_.getInt(index);
    }
    private int lackedNpcListMemoizedSerializedSize = -1;

    public static final int LACKED_PLACE_MAP_FIELD_NUMBER = 4;
    private static final class LackedPlaceMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.internal_static_GetQuestLackingResourceRsp_LackedPlaceMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> lackedPlaceMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetLackedPlaceMap() {
      if (lackedPlaceMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LackedPlaceMapDefaultEntryHolder.defaultEntry);
      }
      return lackedPlaceMap_;
    }

    public int getLackedPlaceMapCount() {
      return internalGetLackedPlaceMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
     */

    @java.lang.Override
    public boolean containsLackedPlaceMap(
        int key) {
      
      return internalGetLackedPlaceMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLackedPlaceMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getLackedPlaceMap() {
      return getLackedPlaceMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getLackedPlaceMapMap() {
      return internalGetLackedPlaceMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
     */
    @java.lang.Override

    public int getLackedPlaceMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLackedPlaceMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
     */
    @java.lang.Override

    public int getLackedPlaceMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLackedPlaceMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int LACKED_PLACE_LIST_FIELD_NUMBER = 10;
    private com.google.protobuf.Internal.IntList lackedPlaceList_;
    /**
     * <code>repeated uint32 lacked_place_list = 10;</code>
     * @return A list containing the lackedPlaceList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getLackedPlaceListList() {
      return lackedPlaceList_;
    }
    /**
     * <code>repeated uint32 lacked_place_list = 10;</code>
     * @return The count of lackedPlaceList.
     */
    public int getLackedPlaceListCount() {
      return lackedPlaceList_.size();
    }
    /**
     * <code>repeated uint32 lacked_place_list = 10;</code>
     * @param index The index of the element to return.
     * @return The lackedPlaceList at the given index.
     */
    public int getLackedPlaceList(int index) {
      return lackedPlaceList_.getInt(index);
    }
    private int lackedPlaceListMemoizedSerializedSize = -1;

    public static final int RETCODE_FIELD_NUMBER = 9;
    private int retcode_;
    /**
     * <code>int32 retcode = 9;</code>
     * @return The retcode.
     */
    @java.lang.Override
    public int getRetcode() {
      return retcode_;
    }

    public static final int LACKED_NPC_MAP_FIELD_NUMBER = 1;
    private static final class LackedNpcMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, java.lang.Integer> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, java.lang.Integer>newDefaultInstance(
                  emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.internal_static_GetQuestLackingResourceRsp_LackedNpcMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0);
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, java.lang.Integer> lackedNpcMap_;
    private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
    internalGetLackedNpcMap() {
      if (lackedNpcMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            LackedNpcMapDefaultEntryHolder.defaultEntry);
      }
      return lackedNpcMap_;
    }

    public int getLackedNpcMapCount() {
      return internalGetLackedNpcMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
     */

    @java.lang.Override
    public boolean containsLackedNpcMap(
        int key) {
      
      return internalGetLackedNpcMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getLackedNpcMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, java.lang.Integer> getLackedNpcMap() {
      return getLackedNpcMapMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, java.lang.Integer> getLackedNpcMapMap() {
      return internalGetLackedNpcMap().getMap();
    }
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
     */
    @java.lang.Override

    public int getLackedNpcMapOrDefault(
        int key,
        int defaultValue) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLackedNpcMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
     */
    @java.lang.Override

    public int getLackedNpcMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, java.lang.Integer> map =
          internalGetLackedNpcMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int QUEST_ID_FIELD_NUMBER = 7;
    private int questId_;
    /**
     * <code>uint32 quest_id = 7;</code>
     * @return The questId.
     */
    @java.lang.Override
    public int getQuestId() {
      return questId_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetLackedNpcMap(),
          LackedNpcMapDefaultEntryHolder.defaultEntry,
          1);
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetLackedPlaceMap(),
          LackedPlaceMapDefaultEntryHolder.defaultEntry,
          4);
      if (questId_ != 0) {
        output.writeUInt32(7, questId_);
      }
      if (retcode_ != 0) {
        output.writeInt32(9, retcode_);
      }
      if (getLackedPlaceListList().size() > 0) {
        output.writeUInt32NoTag(82);
        output.writeUInt32NoTag(lackedPlaceListMemoizedSerializedSize);
      }
      for (int i = 0; i < lackedPlaceList_.size(); i++) {
        output.writeUInt32NoTag(lackedPlaceList_.getInt(i));
      }
      if (getLackedNpcListList().size() > 0) {
        output.writeUInt32NoTag(122);
        output.writeUInt32NoTag(lackedNpcListMemoizedSerializedSize);
      }
      for (int i = 0; i < lackedNpcList_.size(); i++) {
        output.writeUInt32NoTag(lackedNpcList_.getInt(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetLackedNpcMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        lackedNpcMap__ = LackedNpcMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, lackedNpcMap__);
      }
      for (java.util.Map.Entry<java.lang.Integer, java.lang.Integer> entry
           : internalGetLackedPlaceMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, java.lang.Integer>
        lackedPlaceMap__ = LackedPlaceMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(4, lackedPlaceMap__);
      }
      if (questId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, questId_);
      }
      if (retcode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, retcode_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < lackedPlaceList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(lackedPlaceList_.getInt(i));
        }
        size += dataSize;
        if (!getLackedPlaceListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        lackedPlaceListMemoizedSerializedSize = dataSize;
      }
      {
        int dataSize = 0;
        for (int i = 0; i < lackedNpcList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(lackedNpcList_.getInt(i));
        }
        size += dataSize;
        if (!getLackedNpcListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        lackedNpcListMemoizedSerializedSize = dataSize;
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp other = (emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp) obj;

      if (!getLackedNpcListList()
          .equals(other.getLackedNpcListList())) return false;
      if (!internalGetLackedPlaceMap().equals(
          other.internalGetLackedPlaceMap())) return false;
      if (!getLackedPlaceListList()
          .equals(other.getLackedPlaceListList())) return false;
      if (getRetcode()
          != other.getRetcode()) return false;
      if (!internalGetLackedNpcMap().equals(
          other.internalGetLackedNpcMap())) return false;
      if (getQuestId()
          != other.getQuestId()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getLackedNpcListCount() > 0) {
        hash = (37 * hash) + LACKED_NPC_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getLackedNpcListList().hashCode();
      }
      if (!internalGetLackedPlaceMap().getMap().isEmpty()) {
        hash = (37 * hash) + LACKED_PLACE_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLackedPlaceMap().hashCode();
      }
      if (getLackedPlaceListCount() > 0) {
        hash = (37 * hash) + LACKED_PLACE_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getLackedPlaceListList().hashCode();
      }
      hash = (37 * hash) + RETCODE_FIELD_NUMBER;
      hash = (53 * hash) + getRetcode();
      if (!internalGetLackedNpcMap().getMap().isEmpty()) {
        hash = (37 * hash) + LACKED_NPC_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetLackedNpcMap().hashCode();
      }
      hash = (37 * hash) + QUEST_ID_FIELD_NUMBER;
      hash = (53 * hash) + getQuestId();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * CmdId: 28297
     * Obf: FDCIDFLNJKP
     * </pre>
     *
     * Protobuf type {@code GetQuestLackingResourceRsp}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GetQuestLackingResourceRsp)
        emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRspOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.internal_static_GetQuestLackingResourceRsp_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetLackedPlaceMap();
          case 1:
            return internalGetLackedNpcMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 4:
            return internalGetMutableLackedPlaceMap();
          case 1:
            return internalGetMutableLackedNpcMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.internal_static_GetQuestLackingResourceRsp_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp.class, emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        lackedNpcList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        internalGetMutableLackedPlaceMap().clear();
        lackedPlaceList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        retcode_ = 0;

        internalGetMutableLackedNpcMap().clear();
        questId_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.internal_static_GetQuestLackingResourceRsp_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp build() {
        emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp buildPartial() {
        emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp result = new emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          lackedNpcList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.lackedNpcList_ = lackedNpcList_;
        result.lackedPlaceMap_ = internalGetLackedPlaceMap();
        result.lackedPlaceMap_.makeImmutable();
        if (((bitField0_ & 0x00000004) != 0)) {
          lackedPlaceList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.lackedPlaceList_ = lackedPlaceList_;
        result.retcode_ = retcode_;
        result.lackedNpcMap_ = internalGetLackedNpcMap();
        result.lackedNpcMap_.makeImmutable();
        result.questId_ = questId_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp) {
          return mergeFrom((emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp other) {
        if (other == emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp.getDefaultInstance()) return this;
        if (!other.lackedNpcList_.isEmpty()) {
          if (lackedNpcList_.isEmpty()) {
            lackedNpcList_ = other.lackedNpcList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureLackedNpcListIsMutable();
            lackedNpcList_.addAll(other.lackedNpcList_);
          }
          onChanged();
        }
        internalGetMutableLackedPlaceMap().mergeFrom(
            other.internalGetLackedPlaceMap());
        if (!other.lackedPlaceList_.isEmpty()) {
          if (lackedPlaceList_.isEmpty()) {
            lackedPlaceList_ = other.lackedPlaceList_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureLackedPlaceListIsMutable();
            lackedPlaceList_.addAll(other.lackedPlaceList_);
          }
          onChanged();
        }
        if (other.getRetcode() != 0) {
          setRetcode(other.getRetcode());
        }
        internalGetMutableLackedNpcMap().mergeFrom(
            other.internalGetLackedNpcMap());
        if (other.getQuestId() != 0) {
          setQuestId(other.getQuestId());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList lackedNpcList_ = emptyIntList();
      private void ensureLackedNpcListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          lackedNpcList_ = mutableCopy(lackedNpcList_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 lacked_npc_list = 15;</code>
       * @return A list containing the lackedNpcList.
       */
      public java.util.List<java.lang.Integer>
          getLackedNpcListList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(lackedNpcList_) : lackedNpcList_;
      }
      /**
       * <code>repeated uint32 lacked_npc_list = 15;</code>
       * @return The count of lackedNpcList.
       */
      public int getLackedNpcListCount() {
        return lackedNpcList_.size();
      }
      /**
       * <code>repeated uint32 lacked_npc_list = 15;</code>
       * @param index The index of the element to return.
       * @return The lackedNpcList at the given index.
       */
      public int getLackedNpcList(int index) {
        return lackedNpcList_.getInt(index);
      }
      /**
       * <code>repeated uint32 lacked_npc_list = 15;</code>
       * @param index The index to set the value at.
       * @param value The lackedNpcList to set.
       * @return This builder for chaining.
       */
      public Builder setLackedNpcList(
          int index, int value) {
        ensureLackedNpcListIsMutable();
        lackedNpcList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 lacked_npc_list = 15;</code>
       * @param value The lackedNpcList to add.
       * @return This builder for chaining.
       */
      public Builder addLackedNpcList(int value) {
        ensureLackedNpcListIsMutable();
        lackedNpcList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 lacked_npc_list = 15;</code>
       * @param values The lackedNpcList to add.
       * @return This builder for chaining.
       */
      public Builder addAllLackedNpcList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLackedNpcListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lackedNpcList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 lacked_npc_list = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearLackedNpcList() {
        lackedNpcList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> lackedPlaceMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetLackedPlaceMap() {
        if (lackedPlaceMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LackedPlaceMapDefaultEntryHolder.defaultEntry);
        }
        return lackedPlaceMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableLackedPlaceMap() {
        onChanged();;
        if (lackedPlaceMap_ == null) {
          lackedPlaceMap_ = com.google.protobuf.MapField.newMapField(
              LackedPlaceMapDefaultEntryHolder.defaultEntry);
        }
        if (!lackedPlaceMap_.isMutable()) {
          lackedPlaceMap_ = lackedPlaceMap_.copy();
        }
        return lackedPlaceMap_;
      }

      public int getLackedPlaceMapCount() {
        return internalGetLackedPlaceMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
       */

      @java.lang.Override
      public boolean containsLackedPlaceMap(
          int key) {
        
        return internalGetLackedPlaceMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLackedPlaceMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getLackedPlaceMap() {
        return getLackedPlaceMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getLackedPlaceMapMap() {
        return internalGetLackedPlaceMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
       */
      @java.lang.Override

      public int getLackedPlaceMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLackedPlaceMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
       */
      @java.lang.Override

      public int getLackedPlaceMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLackedPlaceMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLackedPlaceMap() {
        internalGetMutableLackedPlaceMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
       */

      public Builder removeLackedPlaceMap(
          int key) {
        
        internalGetMutableLackedPlaceMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableLackedPlaceMap() {
        return internalGetMutableLackedPlaceMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
       */
      public Builder putLackedPlaceMap(
          int key,
          int value) {
        
        
        internalGetMutableLackedPlaceMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; lacked_place_map = 4;</code>
       */

      public Builder putAllLackedPlaceMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableLackedPlaceMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.Internal.IntList lackedPlaceList_ = emptyIntList();
      private void ensureLackedPlaceListIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          lackedPlaceList_ = mutableCopy(lackedPlaceList_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint32 lacked_place_list = 10;</code>
       * @return A list containing the lackedPlaceList.
       */
      public java.util.List<java.lang.Integer>
          getLackedPlaceListList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(lackedPlaceList_) : lackedPlaceList_;
      }
      /**
       * <code>repeated uint32 lacked_place_list = 10;</code>
       * @return The count of lackedPlaceList.
       */
      public int getLackedPlaceListCount() {
        return lackedPlaceList_.size();
      }
      /**
       * <code>repeated uint32 lacked_place_list = 10;</code>
       * @param index The index of the element to return.
       * @return The lackedPlaceList at the given index.
       */
      public int getLackedPlaceList(int index) {
        return lackedPlaceList_.getInt(index);
      }
      /**
       * <code>repeated uint32 lacked_place_list = 10;</code>
       * @param index The index to set the value at.
       * @param value The lackedPlaceList to set.
       * @return This builder for chaining.
       */
      public Builder setLackedPlaceList(
          int index, int value) {
        ensureLackedPlaceListIsMutable();
        lackedPlaceList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 lacked_place_list = 10;</code>
       * @param value The lackedPlaceList to add.
       * @return This builder for chaining.
       */
      public Builder addLackedPlaceList(int value) {
        ensureLackedPlaceListIsMutable();
        lackedPlaceList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 lacked_place_list = 10;</code>
       * @param values The lackedPlaceList to add.
       * @return This builder for chaining.
       */
      public Builder addAllLackedPlaceList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLackedPlaceListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, lackedPlaceList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 lacked_place_list = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearLackedPlaceList() {
        lackedPlaceList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private int retcode_ ;
      /**
       * <code>int32 retcode = 9;</code>
       * @return The retcode.
       */
      @java.lang.Override
      public int getRetcode() {
        return retcode_;
      }
      /**
       * <code>int32 retcode = 9;</code>
       * @param value The retcode to set.
       * @return This builder for chaining.
       */
      public Builder setRetcode(int value) {
        
        retcode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>int32 retcode = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearRetcode() {
        
        retcode_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, java.lang.Integer> lackedNpcMap_;
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetLackedNpcMap() {
        if (lackedNpcMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              LackedNpcMapDefaultEntryHolder.defaultEntry);
        }
        return lackedNpcMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, java.lang.Integer>
      internalGetMutableLackedNpcMap() {
        onChanged();;
        if (lackedNpcMap_ == null) {
          lackedNpcMap_ = com.google.protobuf.MapField.newMapField(
              LackedNpcMapDefaultEntryHolder.defaultEntry);
        }
        if (!lackedNpcMap_.isMutable()) {
          lackedNpcMap_ = lackedNpcMap_.copy();
        }
        return lackedNpcMap_;
      }

      public int getLackedNpcMapCount() {
        return internalGetLackedNpcMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
       */

      @java.lang.Override
      public boolean containsLackedNpcMap(
          int key) {
        
        return internalGetLackedNpcMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getLackedNpcMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer> getLackedNpcMap() {
        return getLackedNpcMapMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, java.lang.Integer> getLackedNpcMapMap() {
        return internalGetLackedNpcMap().getMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
       */
      @java.lang.Override

      public int getLackedNpcMapOrDefault(
          int key,
          int defaultValue) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLackedNpcMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
       */
      @java.lang.Override

      public int getLackedNpcMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, java.lang.Integer> map =
            internalGetLackedNpcMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearLackedNpcMap() {
        internalGetMutableLackedNpcMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
       */

      public Builder removeLackedNpcMap(
          int key) {
        
        internalGetMutableLackedNpcMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, java.lang.Integer>
      getMutableLackedNpcMap() {
        return internalGetMutableLackedNpcMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
       */
      public Builder putLackedNpcMap(
          int key,
          int value) {
        
        
        internalGetMutableLackedNpcMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, uint32&gt; lacked_npc_map = 1;</code>
       */

      public Builder putAllLackedNpcMap(
          java.util.Map<java.lang.Integer, java.lang.Integer> values) {
        internalGetMutableLackedNpcMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private int questId_ ;
      /**
       * <code>uint32 quest_id = 7;</code>
       * @return The questId.
       */
      @java.lang.Override
      public int getQuestId() {
        return questId_;
      }
      /**
       * <code>uint32 quest_id = 7;</code>
       * @param value The questId to set.
       * @return This builder for chaining.
       */
      public Builder setQuestId(int value) {
        
        questId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 quest_id = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearQuestId() {
        
        questId_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:GetQuestLackingResourceRsp)
    }

    // @@protoc_insertion_point(class_scope:GetQuestLackingResourceRsp)
    private static final emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp();
    }

    public static emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<GetQuestLackingResourceRsp>
        PARSER = new com.google.protobuf.AbstractParser<GetQuestLackingResourceRsp>() {
      @java.lang.Override
      public GetQuestLackingResourceRsp parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GetQuestLackingResourceRsp(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<GetQuestLackingResourceRsp> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<GetQuestLackingResourceRsp> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.GetQuestLackingResourceRspOuterClass.GetQuestLackingResourceRsp getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetQuestLackingResourceRsp_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetQuestLackingResourceRsp_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetQuestLackingResourceRsp_LackedPlaceMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetQuestLackingResourceRsp_LackedPlaceMapEntry_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GetQuestLackingResourceRsp_LackedNpcMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_GetQuestLackingResourceRsp_LackedNpcMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n GetQuestLackingResourceRsp.proto\"\361\002\n\032G" +
      "etQuestLackingResourceRsp\022\027\n\017lacked_npc_" +
      "list\030\017 \003(\r\022I\n\020lacked_place_map\030\004 \003(\0132/.G" +
      "etQuestLackingResourceRsp.LackedPlaceMap" +
      "Entry\022\031\n\021lacked_place_list\030\n \003(\r\022\017\n\007retc" +
      "ode\030\t \001(\005\022E\n\016lacked_npc_map\030\001 \003(\0132-.GetQ" +
      "uestLackingResourceRsp.LackedNpcMapEntry" +
      "\022\020\n\010quest_id\030\007 \001(\r\0325\n\023LackedPlaceMapEntr" +
      "y\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001(\r:\0028\001\0323\n\021Lac" +
      "kedNpcMapEntry\022\013\n\003key\030\001 \001(\r\022\r\n\005value\030\002 \001" +
      "(\r:\0028\001B\033\n\031emu.grasscutter.net.protob\006pro" +
      "to3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_GetQuestLackingResourceRsp_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_GetQuestLackingResourceRsp_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetQuestLackingResourceRsp_descriptor,
        new java.lang.String[] { "LackedNpcList", "LackedPlaceMap", "LackedPlaceList", "Retcode", "LackedNpcMap", "QuestId", });
    internal_static_GetQuestLackingResourceRsp_LackedPlaceMapEntry_descriptor =
      internal_static_GetQuestLackingResourceRsp_descriptor.getNestedTypes().get(0);
    internal_static_GetQuestLackingResourceRsp_LackedPlaceMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetQuestLackingResourceRsp_LackedPlaceMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_GetQuestLackingResourceRsp_LackedNpcMapEntry_descriptor =
      internal_static_GetQuestLackingResourceRsp_descriptor.getNestedTypes().get(1);
    internal_static_GetQuestLackingResourceRsp_LackedNpcMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_GetQuestLackingResourceRsp_LackedNpcMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
