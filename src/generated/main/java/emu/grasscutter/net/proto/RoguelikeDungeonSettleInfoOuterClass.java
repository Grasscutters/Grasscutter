// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: RoguelikeDungeonSettleInfo.proto

package emu.grasscutter.net.proto;

public final class RoguelikeDungeonSettleInfoOuterClass {
  private RoguelikeDungeonSettleInfoOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface RoguelikeDungeonSettleInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:RoguelikeDungeonSettleInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 stage_id = 5;</code>
     * @return The stageId.
     */
    int getStageId();

    /**
     * <code>bool is_final_level = 15;</code>
     * @return The isFinalLevel.
     */
    boolean getIsFinalLevel();

    /**
     * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
     */
    int getFinishedChallengeCellNumMapCount();
    /**
     * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
     */
    boolean containsFinishedChallengeCellNumMap(
        int key);
    /**
     * Use {@link #getFinishedChallengeCellNumMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo>
    getFinishedChallengeCellNumMap();
    /**
     * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
     */
    java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo>
    getFinishedChallengeCellNumMapMap();
    /**
     * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
     */

    emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo getFinishedChallengeCellNumMapOrDefault(
        int key,
        emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo defaultValue);
    /**
     * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
     */

    emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo getFinishedChallengeCellNumMapOrThrow(
        int key);

    /**
     * <code>bool is_coin_c_reach_limit = 13;</code>
     * @return The isCoinCReachLimit.
     */
    boolean getIsCoinCReachLimit();

    /**
     * <code>uint32 cur_level = 9;</code>
     * @return The curLevel.
     */
    int getCurLevel();

    /**
     * <code>uint32 total_coin_b_num = 6;</code>
     * @return The totalCoinBNum.
     */
    int getTotalCoinBNum();

    /**
     * <code>uint32 total_coin_c_num = 10;</code>
     * @return The totalCoinCNum.
     */
    int getTotalCoinCNum();
  }
  /**
   * Protobuf type {@code RoguelikeDungeonSettleInfo}
   */
  public static final class RoguelikeDungeonSettleInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:RoguelikeDungeonSettleInfo)
      RoguelikeDungeonSettleInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RoguelikeDungeonSettleInfo.newBuilder() to construct.
    private RoguelikeDungeonSettleInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RoguelikeDungeonSettleInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new RoguelikeDungeonSettleInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RoguelikeDungeonSettleInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 26: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                finishedChallengeCellNumMap_ = com.google.protobuf.MapField.newMapField(
                    FinishedChallengeCellNumMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo>
              finishedChallengeCellNumMap__ = input.readMessage(
                  FinishedChallengeCellNumMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              finishedChallengeCellNumMap_.getMutableMap().put(
                  finishedChallengeCellNumMap__.getKey(), finishedChallengeCellNumMap__.getValue());
              break;
            }
            case 40: {

              stageId_ = input.readUInt32();
              break;
            }
            case 48: {

              totalCoinBNum_ = input.readUInt32();
              break;
            }
            case 72: {

              curLevel_ = input.readUInt32();
              break;
            }
            case 80: {

              totalCoinCNum_ = input.readUInt32();
              break;
            }
            case 104: {

              isCoinCReachLimit_ = input.readBool();
              break;
            }
            case 120: {

              isFinalLevel_ = input.readBool();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.internal_static_RoguelikeDungeonSettleInfo_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 3:
          return internalGetFinishedChallengeCellNumMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.internal_static_RoguelikeDungeonSettleInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo.class, emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo.Builder.class);
    }

    public static final int STAGE_ID_FIELD_NUMBER = 5;
    private int stageId_;
    /**
     * <code>uint32 stage_id = 5;</code>
     * @return The stageId.
     */
    @java.lang.Override
    public int getStageId() {
      return stageId_;
    }

    public static final int IS_FINAL_LEVEL_FIELD_NUMBER = 15;
    private boolean isFinalLevel_;
    /**
     * <code>bool is_final_level = 15;</code>
     * @return The isFinalLevel.
     */
    @java.lang.Override
    public boolean getIsFinalLevel() {
      return isFinalLevel_;
    }

    public static final int FINISHED_CHALLENGE_CELL_NUM_MAP_FIELD_NUMBER = 3;
    private static final class FinishedChallengeCellNumMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo>newDefaultInstance(
                  emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.internal_static_RoguelikeDungeonSettleInfo_FinishedChallengeCellNumMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo> finishedChallengeCellNumMap_;
    private com.google.protobuf.MapField<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo>
    internalGetFinishedChallengeCellNumMap() {
      if (finishedChallengeCellNumMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            FinishedChallengeCellNumMapDefaultEntryHolder.defaultEntry);
      }
      return finishedChallengeCellNumMap_;
    }

    public int getFinishedChallengeCellNumMapCount() {
      return internalGetFinishedChallengeCellNumMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
     */

    @java.lang.Override
    public boolean containsFinishedChallengeCellNumMap(
        int key) {
      
      return internalGetFinishedChallengeCellNumMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getFinishedChallengeCellNumMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo> getFinishedChallengeCellNumMap() {
      return getFinishedChallengeCellNumMapMap();
    }
    /**
     * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo> getFinishedChallengeCellNumMapMap() {
      return internalGetFinishedChallengeCellNumMap().getMap();
    }
    /**
     * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
     */
    @java.lang.Override

    public emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo getFinishedChallengeCellNumMapOrDefault(
        int key,
        emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo defaultValue) {
      
      java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo> map =
          internalGetFinishedChallengeCellNumMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
     */
    @java.lang.Override

    public emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo getFinishedChallengeCellNumMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo> map =
          internalGetFinishedChallengeCellNumMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int IS_COIN_C_REACH_LIMIT_FIELD_NUMBER = 13;
    private boolean isCoinCReachLimit_;
    /**
     * <code>bool is_coin_c_reach_limit = 13;</code>
     * @return The isCoinCReachLimit.
     */
    @java.lang.Override
    public boolean getIsCoinCReachLimit() {
      return isCoinCReachLimit_;
    }

    public static final int CUR_LEVEL_FIELD_NUMBER = 9;
    private int curLevel_;
    /**
     * <code>uint32 cur_level = 9;</code>
     * @return The curLevel.
     */
    @java.lang.Override
    public int getCurLevel() {
      return curLevel_;
    }

    public static final int TOTAL_COIN_B_NUM_FIELD_NUMBER = 6;
    private int totalCoinBNum_;
    /**
     * <code>uint32 total_coin_b_num = 6;</code>
     * @return The totalCoinBNum.
     */
    @java.lang.Override
    public int getTotalCoinBNum() {
      return totalCoinBNum_;
    }

    public static final int TOTAL_COIN_C_NUM_FIELD_NUMBER = 10;
    private int totalCoinCNum_;
    /**
     * <code>uint32 total_coin_c_num = 10;</code>
     * @return The totalCoinCNum.
     */
    @java.lang.Override
    public int getTotalCoinCNum() {
      return totalCoinCNum_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetFinishedChallengeCellNumMap(),
          FinishedChallengeCellNumMapDefaultEntryHolder.defaultEntry,
          3);
      if (stageId_ != 0) {
        output.writeUInt32(5, stageId_);
      }
      if (totalCoinBNum_ != 0) {
        output.writeUInt32(6, totalCoinBNum_);
      }
      if (curLevel_ != 0) {
        output.writeUInt32(9, curLevel_);
      }
      if (totalCoinCNum_ != 0) {
        output.writeUInt32(10, totalCoinCNum_);
      }
      if (isCoinCReachLimit_ != false) {
        output.writeBool(13, isCoinCReachLimit_);
      }
      if (isFinalLevel_ != false) {
        output.writeBool(15, isFinalLevel_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (java.util.Map.Entry<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo> entry
           : internalGetFinishedChallengeCellNumMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo>
        finishedChallengeCellNumMap__ = FinishedChallengeCellNumMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(3, finishedChallengeCellNumMap__);
      }
      if (stageId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, stageId_);
      }
      if (totalCoinBNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, totalCoinBNum_);
      }
      if (curLevel_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, curLevel_);
      }
      if (totalCoinCNum_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, totalCoinCNum_);
      }
      if (isCoinCReachLimit_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(13, isCoinCReachLimit_);
      }
      if (isFinalLevel_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(15, isFinalLevel_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo other = (emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo) obj;

      if (getStageId()
          != other.getStageId()) return false;
      if (getIsFinalLevel()
          != other.getIsFinalLevel()) return false;
      if (!internalGetFinishedChallengeCellNumMap().equals(
          other.internalGetFinishedChallengeCellNumMap())) return false;
      if (getIsCoinCReachLimit()
          != other.getIsCoinCReachLimit()) return false;
      if (getCurLevel()
          != other.getCurLevel()) return false;
      if (getTotalCoinBNum()
          != other.getTotalCoinBNum()) return false;
      if (getTotalCoinCNum()
          != other.getTotalCoinCNum()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STAGE_ID_FIELD_NUMBER;
      hash = (53 * hash) + getStageId();
      hash = (37 * hash) + IS_FINAL_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsFinalLevel());
      if (!internalGetFinishedChallengeCellNumMap().getMap().isEmpty()) {
        hash = (37 * hash) + FINISHED_CHALLENGE_CELL_NUM_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetFinishedChallengeCellNumMap().hashCode();
      }
      hash = (37 * hash) + IS_COIN_C_REACH_LIMIT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getIsCoinCReachLimit());
      hash = (37 * hash) + CUR_LEVEL_FIELD_NUMBER;
      hash = (53 * hash) + getCurLevel();
      hash = (37 * hash) + TOTAL_COIN_B_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getTotalCoinBNum();
      hash = (37 * hash) + TOTAL_COIN_C_NUM_FIELD_NUMBER;
      hash = (53 * hash) + getTotalCoinCNum();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code RoguelikeDungeonSettleInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:RoguelikeDungeonSettleInfo)
        emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.internal_static_RoguelikeDungeonSettleInfo_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetFinishedChallengeCellNumMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 3:
            return internalGetMutableFinishedChallengeCellNumMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.internal_static_RoguelikeDungeonSettleInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo.class, emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        stageId_ = 0;

        isFinalLevel_ = false;

        internalGetMutableFinishedChallengeCellNumMap().clear();
        isCoinCReachLimit_ = false;

        curLevel_ = 0;

        totalCoinBNum_ = 0;

        totalCoinCNum_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.internal_static_RoguelikeDungeonSettleInfo_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo build() {
        emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo buildPartial() {
        emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo result = new emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo(this);
        int from_bitField0_ = bitField0_;
        result.stageId_ = stageId_;
        result.isFinalLevel_ = isFinalLevel_;
        result.finishedChallengeCellNumMap_ = internalGetFinishedChallengeCellNumMap();
        result.finishedChallengeCellNumMap_.makeImmutable();
        result.isCoinCReachLimit_ = isCoinCReachLimit_;
        result.curLevel_ = curLevel_;
        result.totalCoinBNum_ = totalCoinBNum_;
        result.totalCoinCNum_ = totalCoinCNum_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo) {
          return mergeFrom((emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo other) {
        if (other == emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo.getDefaultInstance()) return this;
        if (other.getStageId() != 0) {
          setStageId(other.getStageId());
        }
        if (other.getIsFinalLevel() != false) {
          setIsFinalLevel(other.getIsFinalLevel());
        }
        internalGetMutableFinishedChallengeCellNumMap().mergeFrom(
            other.internalGetFinishedChallengeCellNumMap());
        if (other.getIsCoinCReachLimit() != false) {
          setIsCoinCReachLimit(other.getIsCoinCReachLimit());
        }
        if (other.getCurLevel() != 0) {
          setCurLevel(other.getCurLevel());
        }
        if (other.getTotalCoinBNum() != 0) {
          setTotalCoinBNum(other.getTotalCoinBNum());
        }
        if (other.getTotalCoinCNum() != 0) {
          setTotalCoinCNum(other.getTotalCoinCNum());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int stageId_ ;
      /**
       * <code>uint32 stage_id = 5;</code>
       * @return The stageId.
       */
      @java.lang.Override
      public int getStageId() {
        return stageId_;
      }
      /**
       * <code>uint32 stage_id = 5;</code>
       * @param value The stageId to set.
       * @return This builder for chaining.
       */
      public Builder setStageId(int value) {
        
        stageId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 stage_id = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearStageId() {
        
        stageId_ = 0;
        onChanged();
        return this;
      }

      private boolean isFinalLevel_ ;
      /**
       * <code>bool is_final_level = 15;</code>
       * @return The isFinalLevel.
       */
      @java.lang.Override
      public boolean getIsFinalLevel() {
        return isFinalLevel_;
      }
      /**
       * <code>bool is_final_level = 15;</code>
       * @param value The isFinalLevel to set.
       * @return This builder for chaining.
       */
      public Builder setIsFinalLevel(boolean value) {
        
        isFinalLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_final_level = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsFinalLevel() {
        
        isFinalLevel_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo> finishedChallengeCellNumMap_;
      private com.google.protobuf.MapField<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo>
      internalGetFinishedChallengeCellNumMap() {
        if (finishedChallengeCellNumMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              FinishedChallengeCellNumMapDefaultEntryHolder.defaultEntry);
        }
        return finishedChallengeCellNumMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo>
      internalGetMutableFinishedChallengeCellNumMap() {
        onChanged();;
        if (finishedChallengeCellNumMap_ == null) {
          finishedChallengeCellNumMap_ = com.google.protobuf.MapField.newMapField(
              FinishedChallengeCellNumMapDefaultEntryHolder.defaultEntry);
        }
        if (!finishedChallengeCellNumMap_.isMutable()) {
          finishedChallengeCellNumMap_ = finishedChallengeCellNumMap_.copy();
        }
        return finishedChallengeCellNumMap_;
      }

      public int getFinishedChallengeCellNumMapCount() {
        return internalGetFinishedChallengeCellNumMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
       */

      @java.lang.Override
      public boolean containsFinishedChallengeCellNumMap(
          int key) {
        
        return internalGetFinishedChallengeCellNumMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getFinishedChallengeCellNumMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo> getFinishedChallengeCellNumMap() {
        return getFinishedChallengeCellNumMapMap();
      }
      /**
       * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo> getFinishedChallengeCellNumMapMap() {
        return internalGetFinishedChallengeCellNumMap().getMap();
      }
      /**
       * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
       */
      @java.lang.Override

      public emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo getFinishedChallengeCellNumMapOrDefault(
          int key,
          emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo defaultValue) {
        
        java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo> map =
            internalGetFinishedChallengeCellNumMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
       */
      @java.lang.Override

      public emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo getFinishedChallengeCellNumMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo> map =
            internalGetFinishedChallengeCellNumMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearFinishedChallengeCellNumMap() {
        internalGetMutableFinishedChallengeCellNumMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
       */

      public Builder removeFinishedChallengeCellNumMap(
          int key) {
        
        internalGetMutableFinishedChallengeCellNumMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo>
      getMutableFinishedChallengeCellNumMap() {
        return internalGetMutableFinishedChallengeCellNumMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
       */
      public Builder putFinishedChallengeCellNumMap(
          int key,
          emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutableFinishedChallengeCellNumMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, .RoguelikeSettleCoinInfo&gt; finished_challenge_cell_num_map = 3;</code>
       */

      public Builder putAllFinishedChallengeCellNumMap(
          java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.RoguelikeSettleCoinInfo> values) {
        internalGetMutableFinishedChallengeCellNumMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private boolean isCoinCReachLimit_ ;
      /**
       * <code>bool is_coin_c_reach_limit = 13;</code>
       * @return The isCoinCReachLimit.
       */
      @java.lang.Override
      public boolean getIsCoinCReachLimit() {
        return isCoinCReachLimit_;
      }
      /**
       * <code>bool is_coin_c_reach_limit = 13;</code>
       * @param value The isCoinCReachLimit to set.
       * @return This builder for chaining.
       */
      public Builder setIsCoinCReachLimit(boolean value) {
        
        isCoinCReachLimit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>bool is_coin_c_reach_limit = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearIsCoinCReachLimit() {
        
        isCoinCReachLimit_ = false;
        onChanged();
        return this;
      }

      private int curLevel_ ;
      /**
       * <code>uint32 cur_level = 9;</code>
       * @return The curLevel.
       */
      @java.lang.Override
      public int getCurLevel() {
        return curLevel_;
      }
      /**
       * <code>uint32 cur_level = 9;</code>
       * @param value The curLevel to set.
       * @return This builder for chaining.
       */
      public Builder setCurLevel(int value) {
        
        curLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 cur_level = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearCurLevel() {
        
        curLevel_ = 0;
        onChanged();
        return this;
      }

      private int totalCoinBNum_ ;
      /**
       * <code>uint32 total_coin_b_num = 6;</code>
       * @return The totalCoinBNum.
       */
      @java.lang.Override
      public int getTotalCoinBNum() {
        return totalCoinBNum_;
      }
      /**
       * <code>uint32 total_coin_b_num = 6;</code>
       * @param value The totalCoinBNum to set.
       * @return This builder for chaining.
       */
      public Builder setTotalCoinBNum(int value) {
        
        totalCoinBNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 total_coin_b_num = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalCoinBNum() {
        
        totalCoinBNum_ = 0;
        onChanged();
        return this;
      }

      private int totalCoinCNum_ ;
      /**
       * <code>uint32 total_coin_c_num = 10;</code>
       * @return The totalCoinCNum.
       */
      @java.lang.Override
      public int getTotalCoinCNum() {
        return totalCoinCNum_;
      }
      /**
       * <code>uint32 total_coin_c_num = 10;</code>
       * @param value The totalCoinCNum to set.
       * @return This builder for chaining.
       */
      public Builder setTotalCoinCNum(int value) {
        
        totalCoinCNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 total_coin_c_num = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearTotalCoinCNum() {
        
        totalCoinCNum_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:RoguelikeDungeonSettleInfo)
    }

    // @@protoc_insertion_point(class_scope:RoguelikeDungeonSettleInfo)
    private static final emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo();
    }

    public static emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RoguelikeDungeonSettleInfo>
        PARSER = new com.google.protobuf.AbstractParser<RoguelikeDungeonSettleInfo>() {
      @java.lang.Override
      public RoguelikeDungeonSettleInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RoguelikeDungeonSettleInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RoguelikeDungeonSettleInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RoguelikeDungeonSettleInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.RoguelikeDungeonSettleInfoOuterClass.RoguelikeDungeonSettleInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RoguelikeDungeonSettleInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RoguelikeDungeonSettleInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_RoguelikeDungeonSettleInfo_FinishedChallengeCellNumMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_RoguelikeDungeonSettleInfo_FinishedChallengeCellNumMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n RoguelikeDungeonSettleInfo.proto\032\035Rogu" +
      "elikeSettleCoinInfo.proto\"\361\002\n\032RoguelikeD" +
      "ungeonSettleInfo\022\020\n\010stage_id\030\005 \001(\r\022\026\n\016is" +
      "_final_level\030\017 \001(\010\022e\n\037finished_challenge" +
      "_cell_num_map\030\003 \003(\0132<.RoguelikeDungeonSe" +
      "ttleInfo.FinishedChallengeCellNumMapEntr" +
      "y\022\035\n\025is_coin_c_reach_limit\030\r \001(\010\022\021\n\tcur_" +
      "level\030\t \001(\r\022\030\n\020total_coin_b_num\030\006 \001(\r\022\030\n" +
      "\020total_coin_c_num\030\n \001(\r\032\\\n FinishedChall" +
      "engeCellNumMapEntry\022\013\n\003key\030\001 \001(\r\022\'\n\005valu" +
      "e\030\002 \001(\0132\030.RoguelikeSettleCoinInfo:\0028\001B\033\n" +
      "\031emu.grasscutter.net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.getDescriptor(),
        });
    internal_static_RoguelikeDungeonSettleInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_RoguelikeDungeonSettleInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RoguelikeDungeonSettleInfo_descriptor,
        new java.lang.String[] { "StageId", "IsFinalLevel", "FinishedChallengeCellNumMap", "IsCoinCReachLimit", "CurLevel", "TotalCoinBNum", "TotalCoinCNum", });
    internal_static_RoguelikeDungeonSettleInfo_FinishedChallengeCellNumMapEntry_descriptor =
      internal_static_RoguelikeDungeonSettleInfo_descriptor.getNestedTypes().get(0);
    internal_static_RoguelikeDungeonSettleInfo_FinishedChallengeCellNumMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_RoguelikeDungeonSettleInfo_FinishedChallengeCellNumMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    emu.grasscutter.net.proto.RoguelikeSettleCoinInfoOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
