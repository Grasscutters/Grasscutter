// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: InBattleChessInfo.proto

package emu.grasscutter.net.proto;

public final class InBattleChessInfoOuterClass {
  private InBattleChessInfoOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface InBattleChessInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:InBattleChessInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>uint32 round = 14;</code>
     * @return The round.
     */
    int getRound();

    /**
     * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
     */
    int getPlayerInfoMapCount();
    /**
     * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
     */
    boolean containsPlayerInfoMap(
        int key);
    /**
     * Use {@link #getPlayerInfoMapMap()} instead.
     */
    @java.lang.Deprecated
    java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo>
    getPlayerInfoMap();
    /**
     * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
     */
    java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo>
    getPlayerInfoMapMap();
    /**
     * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
     */

    emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo getPlayerInfoMapOrDefault(
        int key,
        emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo defaultValue);
    /**
     * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
     */

    emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo getPlayerInfoMapOrThrow(
        int key);

    /**
     * <code>repeated uint32 ban_card_tag_list = 13;</code>
     * @return A list containing the banCardTagList.
     */
    java.util.List<java.lang.Integer> getBanCardTagListList();
    /**
     * <code>repeated uint32 ban_card_tag_list = 13;</code>
     * @return The count of banCardTagList.
     */
    int getBanCardTagListCount();
    /**
     * <code>repeated uint32 ban_card_tag_list = 13;</code>
     * @param index The index of the element to return.
     * @return The banCardTagList at the given index.
     */
    int getBanCardTagList(int index);

    /**
     * <code>.ChessMysteryInfo mystery_info = 4;</code>
     * @return Whether the mysteryInfo field is set.
     */
    boolean hasMysteryInfo();
    /**
     * <code>.ChessMysteryInfo mystery_info = 4;</code>
     * @return The mysteryInfo.
     */
    emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo getMysteryInfo();
    /**
     * <code>.ChessMysteryInfo mystery_info = 4;</code>
     */
    emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfoOrBuilder getMysteryInfoOrBuilder();

    /**
     * <code>uint32 IOCEGCOPGNJ = 5;</code>
     * @return The iOCEGCOPGNJ.
     */
    int getIOCEGCOPGNJ();

    /**
     * <code>uint32 excaped_monsters = 15;</code>
     * @return The excapedMonsters.
     */
    int getExcapedMonsters();

    /**
     * <code>uint32 left_monsters = 7;</code>
     * @return The leftMonsters.
     */
    int getLeftMonsters();

    /**
     * <code>uint32 ECACOGNFOLF = 1;</code>
     * @return The eCACOGNFOLF.
     */
    int getECACOGNFOLF();

    /**
     * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
     */
    java.util.List<emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo> 
        getSelectedCardInfoListList();
    /**
     * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
     */
    emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo getSelectedCardInfoList(int index);
    /**
     * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
     */
    int getSelectedCardInfoListCount();
    /**
     * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
     */
    java.util.List<? extends emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfoOrBuilder> 
        getSelectedCardInfoListOrBuilderList();
    /**
     * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
     */
    emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfoOrBuilder getSelectedCardInfoListOrBuilder(
        int index);
  }
  /**
   * <pre>
   * Obf: DNBDGCOOHPA
   * </pre>
   *
   * Protobuf type {@code InBattleChessInfo}
   */
  public static final class InBattleChessInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:InBattleChessInfo)
      InBattleChessInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use InBattleChessInfo.newBuilder() to construct.
    private InBattleChessInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private InBattleChessInfo() {
      banCardTagList_ = emptyIntList();
      selectedCardInfoList_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new InBattleChessInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private InBattleChessInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              eCACOGNFOLF_ = input.readUInt32();
              break;
            }
            case 34: {
              emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo.Builder subBuilder = null;
              if (mysteryInfo_ != null) {
                subBuilder = mysteryInfo_.toBuilder();
              }
              mysteryInfo_ = input.readMessage(emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(mysteryInfo_);
                mysteryInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            case 40: {

              iOCEGCOPGNJ_ = input.readUInt32();
              break;
            }
            case 56: {

              leftMonsters_ = input.readUInt32();
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                playerInfoMap_ = com.google.protobuf.MapField.newMapField(
                    PlayerInfoMapDefaultEntryHolder.defaultEntry);
                mutable_bitField0_ |= 0x00000001;
              }
              com.google.protobuf.MapEntry<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo>
              playerInfoMap__ = input.readMessage(
                  PlayerInfoMapDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
              playerInfoMap_.getMutableMap().put(
                  playerInfoMap__.getKey(), playerInfoMap__.getValue());
              break;
            }
            case 98: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                selectedCardInfoList_ = new java.util.ArrayList<emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo>();
                mutable_bitField0_ |= 0x00000004;
              }
              selectedCardInfoList_.add(
                  input.readMessage(emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo.parser(), extensionRegistry));
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                banCardTagList_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              banCardTagList_.addInt(input.readUInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) != 0) && input.getBytesUntilLimit() > 0) {
                banCardTagList_ = newIntList();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                banCardTagList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {

              round_ = input.readUInt32();
              break;
            }
            case 120: {

              excapedMonsters_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          selectedCardInfoList_ = java.util.Collections.unmodifiableList(selectedCardInfoList_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          banCardTagList_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.InBattleChessInfoOuterClass.internal_static_InBattleChessInfo_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    @java.lang.Override
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 9:
          return internalGetPlayerInfoMap();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.InBattleChessInfoOuterClass.internal_static_InBattleChessInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo.class, emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo.Builder.class);
    }

    public static final int ROUND_FIELD_NUMBER = 14;
    private int round_;
    /**
     * <code>uint32 round = 14;</code>
     * @return The round.
     */
    @java.lang.Override
    public int getRound() {
      return round_;
    }

    public static final int PLAYER_INFO_MAP_FIELD_NUMBER = 9;
    private static final class PlayerInfoMapDefaultEntryHolder {
      static final com.google.protobuf.MapEntry<
          java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo> defaultEntry =
              com.google.protobuf.MapEntry
              .<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo>newDefaultInstance(
                  emu.grasscutter.net.proto.InBattleChessInfoOuterClass.internal_static_InBattleChessInfo_PlayerInfoMapEntry_descriptor, 
                  com.google.protobuf.WireFormat.FieldType.UINT32,
                  0,
                  com.google.protobuf.WireFormat.FieldType.MESSAGE,
                  emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo.getDefaultInstance());
    }
    private com.google.protobuf.MapField<
        java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo> playerInfoMap_;
    private com.google.protobuf.MapField<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo>
    internalGetPlayerInfoMap() {
      if (playerInfoMap_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            PlayerInfoMapDefaultEntryHolder.defaultEntry);
      }
      return playerInfoMap_;
    }

    public int getPlayerInfoMapCount() {
      return internalGetPlayerInfoMap().getMap().size();
    }
    /**
     * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
     */

    @java.lang.Override
    public boolean containsPlayerInfoMap(
        int key) {
      
      return internalGetPlayerInfoMap().getMap().containsKey(key);
    }
    /**
     * Use {@link #getPlayerInfoMapMap()} instead.
     */
    @java.lang.Override
    @java.lang.Deprecated
    public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo> getPlayerInfoMap() {
      return getPlayerInfoMapMap();
    }
    /**
     * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
     */
    @java.lang.Override

    public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo> getPlayerInfoMapMap() {
      return internalGetPlayerInfoMap().getMap();
    }
    /**
     * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
     */
    @java.lang.Override

    public emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo getPlayerInfoMapOrDefault(
        int key,
        emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo defaultValue) {
      
      java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo> map =
          internalGetPlayerInfoMap().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
     */
    @java.lang.Override

    public emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo getPlayerInfoMapOrThrow(
        int key) {
      
      java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo> map =
          internalGetPlayerInfoMap().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public static final int BAN_CARD_TAG_LIST_FIELD_NUMBER = 13;
    private com.google.protobuf.Internal.IntList banCardTagList_;
    /**
     * <code>repeated uint32 ban_card_tag_list = 13;</code>
     * @return A list containing the banCardTagList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getBanCardTagListList() {
      return banCardTagList_;
    }
    /**
     * <code>repeated uint32 ban_card_tag_list = 13;</code>
     * @return The count of banCardTagList.
     */
    public int getBanCardTagListCount() {
      return banCardTagList_.size();
    }
    /**
     * <code>repeated uint32 ban_card_tag_list = 13;</code>
     * @param index The index of the element to return.
     * @return The banCardTagList at the given index.
     */
    public int getBanCardTagList(int index) {
      return banCardTagList_.getInt(index);
    }
    private int banCardTagListMemoizedSerializedSize = -1;

    public static final int MYSTERY_INFO_FIELD_NUMBER = 4;
    private emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo mysteryInfo_;
    /**
     * <code>.ChessMysteryInfo mystery_info = 4;</code>
     * @return Whether the mysteryInfo field is set.
     */
    @java.lang.Override
    public boolean hasMysteryInfo() {
      return mysteryInfo_ != null;
    }
    /**
     * <code>.ChessMysteryInfo mystery_info = 4;</code>
     * @return The mysteryInfo.
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo getMysteryInfo() {
      return mysteryInfo_ == null ? emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo.getDefaultInstance() : mysteryInfo_;
    }
    /**
     * <code>.ChessMysteryInfo mystery_info = 4;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfoOrBuilder getMysteryInfoOrBuilder() {
      return getMysteryInfo();
    }

    public static final int IOCEGCOPGNJ_FIELD_NUMBER = 5;
    private int iOCEGCOPGNJ_;
    /**
     * <code>uint32 IOCEGCOPGNJ = 5;</code>
     * @return The iOCEGCOPGNJ.
     */
    @java.lang.Override
    public int getIOCEGCOPGNJ() {
      return iOCEGCOPGNJ_;
    }

    public static final int EXCAPED_MONSTERS_FIELD_NUMBER = 15;
    private int excapedMonsters_;
    /**
     * <code>uint32 excaped_monsters = 15;</code>
     * @return The excapedMonsters.
     */
    @java.lang.Override
    public int getExcapedMonsters() {
      return excapedMonsters_;
    }

    public static final int LEFT_MONSTERS_FIELD_NUMBER = 7;
    private int leftMonsters_;
    /**
     * <code>uint32 left_monsters = 7;</code>
     * @return The leftMonsters.
     */
    @java.lang.Override
    public int getLeftMonsters() {
      return leftMonsters_;
    }

    public static final int ECACOGNFOLF_FIELD_NUMBER = 1;
    private int eCACOGNFOLF_;
    /**
     * <code>uint32 ECACOGNFOLF = 1;</code>
     * @return The eCACOGNFOLF.
     */
    @java.lang.Override
    public int getECACOGNFOLF() {
      return eCACOGNFOLF_;
    }

    public static final int SELECTED_CARD_INFO_LIST_FIELD_NUMBER = 12;
    private java.util.List<emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo> selectedCardInfoList_;
    /**
     * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
     */
    @java.lang.Override
    public java.util.List<emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo> getSelectedCardInfoListList() {
      return selectedCardInfoList_;
    }
    /**
     * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
     */
    @java.lang.Override
    public java.util.List<? extends emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfoOrBuilder> 
        getSelectedCardInfoListOrBuilderList() {
      return selectedCardInfoList_;
    }
    /**
     * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
     */
    @java.lang.Override
    public int getSelectedCardInfoListCount() {
      return selectedCardInfoList_.size();
    }
    /**
     * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo getSelectedCardInfoList(int index) {
      return selectedCardInfoList_.get(index);
    }
    /**
     * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
     */
    @java.lang.Override
    public emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfoOrBuilder getSelectedCardInfoListOrBuilder(
        int index) {
      return selectedCardInfoList_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (eCACOGNFOLF_ != 0) {
        output.writeUInt32(1, eCACOGNFOLF_);
      }
      if (mysteryInfo_ != null) {
        output.writeMessage(4, getMysteryInfo());
      }
      if (iOCEGCOPGNJ_ != 0) {
        output.writeUInt32(5, iOCEGCOPGNJ_);
      }
      if (leftMonsters_ != 0) {
        output.writeUInt32(7, leftMonsters_);
      }
      com.google.protobuf.GeneratedMessageV3
        .serializeIntegerMapTo(
          output,
          internalGetPlayerInfoMap(),
          PlayerInfoMapDefaultEntryHolder.defaultEntry,
          9);
      for (int i = 0; i < selectedCardInfoList_.size(); i++) {
        output.writeMessage(12, selectedCardInfoList_.get(i));
      }
      if (getBanCardTagListList().size() > 0) {
        output.writeUInt32NoTag(106);
        output.writeUInt32NoTag(banCardTagListMemoizedSerializedSize);
      }
      for (int i = 0; i < banCardTagList_.size(); i++) {
        output.writeUInt32NoTag(banCardTagList_.getInt(i));
      }
      if (round_ != 0) {
        output.writeUInt32(14, round_);
      }
      if (excapedMonsters_ != 0) {
        output.writeUInt32(15, excapedMonsters_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (eCACOGNFOLF_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, eCACOGNFOLF_);
      }
      if (mysteryInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getMysteryInfo());
      }
      if (iOCEGCOPGNJ_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, iOCEGCOPGNJ_);
      }
      if (leftMonsters_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, leftMonsters_);
      }
      for (java.util.Map.Entry<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo> entry
           : internalGetPlayerInfoMap().getMap().entrySet()) {
        com.google.protobuf.MapEntry<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo>
        playerInfoMap__ = PlayerInfoMapDefaultEntryHolder.defaultEntry.newBuilderForType()
            .setKey(entry.getKey())
            .setValue(entry.getValue())
            .build();
        size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(9, playerInfoMap__);
      }
      for (int i = 0; i < selectedCardInfoList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, selectedCardInfoList_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < banCardTagList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(banCardTagList_.getInt(i));
        }
        size += dataSize;
        if (!getBanCardTagListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        banCardTagListMemoizedSerializedSize = dataSize;
      }
      if (round_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, round_);
      }
      if (excapedMonsters_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, excapedMonsters_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo other = (emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo) obj;

      if (getRound()
          != other.getRound()) return false;
      if (!internalGetPlayerInfoMap().equals(
          other.internalGetPlayerInfoMap())) return false;
      if (!getBanCardTagListList()
          .equals(other.getBanCardTagListList())) return false;
      if (hasMysteryInfo() != other.hasMysteryInfo()) return false;
      if (hasMysteryInfo()) {
        if (!getMysteryInfo()
            .equals(other.getMysteryInfo())) return false;
      }
      if (getIOCEGCOPGNJ()
          != other.getIOCEGCOPGNJ()) return false;
      if (getExcapedMonsters()
          != other.getExcapedMonsters()) return false;
      if (getLeftMonsters()
          != other.getLeftMonsters()) return false;
      if (getECACOGNFOLF()
          != other.getECACOGNFOLF()) return false;
      if (!getSelectedCardInfoListList()
          .equals(other.getSelectedCardInfoListList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + ROUND_FIELD_NUMBER;
      hash = (53 * hash) + getRound();
      if (!internalGetPlayerInfoMap().getMap().isEmpty()) {
        hash = (37 * hash) + PLAYER_INFO_MAP_FIELD_NUMBER;
        hash = (53 * hash) + internalGetPlayerInfoMap().hashCode();
      }
      if (getBanCardTagListCount() > 0) {
        hash = (37 * hash) + BAN_CARD_TAG_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getBanCardTagListList().hashCode();
      }
      if (hasMysteryInfo()) {
        hash = (37 * hash) + MYSTERY_INFO_FIELD_NUMBER;
        hash = (53 * hash) + getMysteryInfo().hashCode();
      }
      hash = (37 * hash) + IOCEGCOPGNJ_FIELD_NUMBER;
      hash = (53 * hash) + getIOCEGCOPGNJ();
      hash = (37 * hash) + EXCAPED_MONSTERS_FIELD_NUMBER;
      hash = (53 * hash) + getExcapedMonsters();
      hash = (37 * hash) + LEFT_MONSTERS_FIELD_NUMBER;
      hash = (53 * hash) + getLeftMonsters();
      hash = (37 * hash) + ECACOGNFOLF_FIELD_NUMBER;
      hash = (53 * hash) + getECACOGNFOLF();
      if (getSelectedCardInfoListCount() > 0) {
        hash = (37 * hash) + SELECTED_CARD_INFO_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getSelectedCardInfoListList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Obf: DNBDGCOOHPA
     * </pre>
     *
     * Protobuf type {@code InBattleChessInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:InBattleChessInfo)
        emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.InBattleChessInfoOuterClass.internal_static_InBattleChessInfo_descriptor;
      }

      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMapField(
          int number) {
        switch (number) {
          case 9:
            return internalGetPlayerInfoMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @SuppressWarnings({"rawtypes"})
      protected com.google.protobuf.MapField internalGetMutableMapField(
          int number) {
        switch (number) {
          case 9:
            return internalGetMutablePlayerInfoMap();
          default:
            throw new RuntimeException(
                "Invalid map field number: " + number);
        }
      }
      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.InBattleChessInfoOuterClass.internal_static_InBattleChessInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo.class, emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSelectedCardInfoListFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        round_ = 0;

        internalGetMutablePlayerInfoMap().clear();
        banCardTagList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        if (mysteryInfoBuilder_ == null) {
          mysteryInfo_ = null;
        } else {
          mysteryInfo_ = null;
          mysteryInfoBuilder_ = null;
        }
        iOCEGCOPGNJ_ = 0;

        excapedMonsters_ = 0;

        leftMonsters_ = 0;

        eCACOGNFOLF_ = 0;

        if (selectedCardInfoListBuilder_ == null) {
          selectedCardInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          selectedCardInfoListBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.InBattleChessInfoOuterClass.internal_static_InBattleChessInfo_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo build() {
        emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo buildPartial() {
        emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo result = new emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo(this);
        int from_bitField0_ = bitField0_;
        result.round_ = round_;
        result.playerInfoMap_ = internalGetPlayerInfoMap();
        result.playerInfoMap_.makeImmutable();
        if (((bitField0_ & 0x00000002) != 0)) {
          banCardTagList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.banCardTagList_ = banCardTagList_;
        if (mysteryInfoBuilder_ == null) {
          result.mysteryInfo_ = mysteryInfo_;
        } else {
          result.mysteryInfo_ = mysteryInfoBuilder_.build();
        }
        result.iOCEGCOPGNJ_ = iOCEGCOPGNJ_;
        result.excapedMonsters_ = excapedMonsters_;
        result.leftMonsters_ = leftMonsters_;
        result.eCACOGNFOLF_ = eCACOGNFOLF_;
        if (selectedCardInfoListBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            selectedCardInfoList_ = java.util.Collections.unmodifiableList(selectedCardInfoList_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.selectedCardInfoList_ = selectedCardInfoList_;
        } else {
          result.selectedCardInfoList_ = selectedCardInfoListBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo) {
          return mergeFrom((emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo other) {
        if (other == emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo.getDefaultInstance()) return this;
        if (other.getRound() != 0) {
          setRound(other.getRound());
        }
        internalGetMutablePlayerInfoMap().mergeFrom(
            other.internalGetPlayerInfoMap());
        if (!other.banCardTagList_.isEmpty()) {
          if (banCardTagList_.isEmpty()) {
            banCardTagList_ = other.banCardTagList_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBanCardTagListIsMutable();
            banCardTagList_.addAll(other.banCardTagList_);
          }
          onChanged();
        }
        if (other.hasMysteryInfo()) {
          mergeMysteryInfo(other.getMysteryInfo());
        }
        if (other.getIOCEGCOPGNJ() != 0) {
          setIOCEGCOPGNJ(other.getIOCEGCOPGNJ());
        }
        if (other.getExcapedMonsters() != 0) {
          setExcapedMonsters(other.getExcapedMonsters());
        }
        if (other.getLeftMonsters() != 0) {
          setLeftMonsters(other.getLeftMonsters());
        }
        if (other.getECACOGNFOLF() != 0) {
          setECACOGNFOLF(other.getECACOGNFOLF());
        }
        if (selectedCardInfoListBuilder_ == null) {
          if (!other.selectedCardInfoList_.isEmpty()) {
            if (selectedCardInfoList_.isEmpty()) {
              selectedCardInfoList_ = other.selectedCardInfoList_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureSelectedCardInfoListIsMutable();
              selectedCardInfoList_.addAll(other.selectedCardInfoList_);
            }
            onChanged();
          }
        } else {
          if (!other.selectedCardInfoList_.isEmpty()) {
            if (selectedCardInfoListBuilder_.isEmpty()) {
              selectedCardInfoListBuilder_.dispose();
              selectedCardInfoListBuilder_ = null;
              selectedCardInfoList_ = other.selectedCardInfoList_;
              bitField0_ = (bitField0_ & ~0x00000004);
              selectedCardInfoListBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSelectedCardInfoListFieldBuilder() : null;
            } else {
              selectedCardInfoListBuilder_.addAllMessages(other.selectedCardInfoList_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int round_ ;
      /**
       * <code>uint32 round = 14;</code>
       * @return The round.
       */
      @java.lang.Override
      public int getRound() {
        return round_;
      }
      /**
       * <code>uint32 round = 14;</code>
       * @param value The round to set.
       * @return This builder for chaining.
       */
      public Builder setRound(int value) {
        
        round_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 round = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearRound() {
        
        round_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.MapField<
          java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo> playerInfoMap_;
      private com.google.protobuf.MapField<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo>
      internalGetPlayerInfoMap() {
        if (playerInfoMap_ == null) {
          return com.google.protobuf.MapField.emptyMapField(
              PlayerInfoMapDefaultEntryHolder.defaultEntry);
        }
        return playerInfoMap_;
      }
      private com.google.protobuf.MapField<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo>
      internalGetMutablePlayerInfoMap() {
        onChanged();;
        if (playerInfoMap_ == null) {
          playerInfoMap_ = com.google.protobuf.MapField.newMapField(
              PlayerInfoMapDefaultEntryHolder.defaultEntry);
        }
        if (!playerInfoMap_.isMutable()) {
          playerInfoMap_ = playerInfoMap_.copy();
        }
        return playerInfoMap_;
      }

      public int getPlayerInfoMapCount() {
        return internalGetPlayerInfoMap().getMap().size();
      }
      /**
       * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
       */

      @java.lang.Override
      public boolean containsPlayerInfoMap(
          int key) {
        
        return internalGetPlayerInfoMap().getMap().containsKey(key);
      }
      /**
       * Use {@link #getPlayerInfoMapMap()} instead.
       */
      @java.lang.Override
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo> getPlayerInfoMap() {
        return getPlayerInfoMapMap();
      }
      /**
       * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
       */
      @java.lang.Override

      public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo> getPlayerInfoMapMap() {
        return internalGetPlayerInfoMap().getMap();
      }
      /**
       * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
       */
      @java.lang.Override

      public emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo getPlayerInfoMapOrDefault(
          int key,
          emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo defaultValue) {
        
        java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo> map =
            internalGetPlayerInfoMap().getMap();
        return map.containsKey(key) ? map.get(key) : defaultValue;
      }
      /**
       * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
       */
      @java.lang.Override

      public emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo getPlayerInfoMapOrThrow(
          int key) {
        
        java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo> map =
            internalGetPlayerInfoMap().getMap();
        if (!map.containsKey(key)) {
          throw new java.lang.IllegalArgumentException();
        }
        return map.get(key);
      }

      public Builder clearPlayerInfoMap() {
        internalGetMutablePlayerInfoMap().getMutableMap()
            .clear();
        return this;
      }
      /**
       * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
       */

      public Builder removePlayerInfoMap(
          int key) {
        
        internalGetMutablePlayerInfoMap().getMutableMap()
            .remove(key);
        return this;
      }
      /**
       * Use alternate mutation accessors instead.
       */
      @java.lang.Deprecated
      public java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo>
      getMutablePlayerInfoMap() {
        return internalGetMutablePlayerInfoMap().getMutableMap();
      }
      /**
       * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
       */
      public Builder putPlayerInfoMap(
          int key,
          emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo value) {
        
        if (value == null) { throw new java.lang.NullPointerException(); }
        internalGetMutablePlayerInfoMap().getMutableMap()
            .put(key, value);
        return this;
      }
      /**
       * <code>map&lt;uint32, .ChessPlayerInfo&gt; player_info_map = 9;</code>
       */

      public Builder putAllPlayerInfoMap(
          java.util.Map<java.lang.Integer, emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.ChessPlayerInfo> values) {
        internalGetMutablePlayerInfoMap().getMutableMap()
            .putAll(values);
        return this;
      }

      private com.google.protobuf.Internal.IntList banCardTagList_ = emptyIntList();
      private void ensureBanCardTagListIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          banCardTagList_ = mutableCopy(banCardTagList_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated uint32 ban_card_tag_list = 13;</code>
       * @return A list containing the banCardTagList.
       */
      public java.util.List<java.lang.Integer>
          getBanCardTagListList() {
        return ((bitField0_ & 0x00000002) != 0) ?
                 java.util.Collections.unmodifiableList(banCardTagList_) : banCardTagList_;
      }
      /**
       * <code>repeated uint32 ban_card_tag_list = 13;</code>
       * @return The count of banCardTagList.
       */
      public int getBanCardTagListCount() {
        return banCardTagList_.size();
      }
      /**
       * <code>repeated uint32 ban_card_tag_list = 13;</code>
       * @param index The index of the element to return.
       * @return The banCardTagList at the given index.
       */
      public int getBanCardTagList(int index) {
        return banCardTagList_.getInt(index);
      }
      /**
       * <code>repeated uint32 ban_card_tag_list = 13;</code>
       * @param index The index to set the value at.
       * @param value The banCardTagList to set.
       * @return This builder for chaining.
       */
      public Builder setBanCardTagList(
          int index, int value) {
        ensureBanCardTagListIsMutable();
        banCardTagList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ban_card_tag_list = 13;</code>
       * @param value The banCardTagList to add.
       * @return This builder for chaining.
       */
      public Builder addBanCardTagList(int value) {
        ensureBanCardTagListIsMutable();
        banCardTagList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ban_card_tag_list = 13;</code>
       * @param values The banCardTagList to add.
       * @return This builder for chaining.
       */
      public Builder addAllBanCardTagList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBanCardTagListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, banCardTagList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 ban_card_tag_list = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearBanCardTagList() {
        banCardTagList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      private emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo mysteryInfo_;
      private com.google.protobuf.SingleFieldBuilderV3<
          emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo, emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo.Builder, emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfoOrBuilder> mysteryInfoBuilder_;
      /**
       * <code>.ChessMysteryInfo mystery_info = 4;</code>
       * @return Whether the mysteryInfo field is set.
       */
      public boolean hasMysteryInfo() {
        return mysteryInfoBuilder_ != null || mysteryInfo_ != null;
      }
      /**
       * <code>.ChessMysteryInfo mystery_info = 4;</code>
       * @return The mysteryInfo.
       */
      public emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo getMysteryInfo() {
        if (mysteryInfoBuilder_ == null) {
          return mysteryInfo_ == null ? emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo.getDefaultInstance() : mysteryInfo_;
        } else {
          return mysteryInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>.ChessMysteryInfo mystery_info = 4;</code>
       */
      public Builder setMysteryInfo(emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo value) {
        if (mysteryInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mysteryInfo_ = value;
          onChanged();
        } else {
          mysteryInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.ChessMysteryInfo mystery_info = 4;</code>
       */
      public Builder setMysteryInfo(
          emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo.Builder builderForValue) {
        if (mysteryInfoBuilder_ == null) {
          mysteryInfo_ = builderForValue.build();
          onChanged();
        } else {
          mysteryInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.ChessMysteryInfo mystery_info = 4;</code>
       */
      public Builder mergeMysteryInfo(emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo value) {
        if (mysteryInfoBuilder_ == null) {
          if (mysteryInfo_ != null) {
            mysteryInfo_ =
              emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo.newBuilder(mysteryInfo_).mergeFrom(value).buildPartial();
          } else {
            mysteryInfo_ = value;
          }
          onChanged();
        } else {
          mysteryInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.ChessMysteryInfo mystery_info = 4;</code>
       */
      public Builder clearMysteryInfo() {
        if (mysteryInfoBuilder_ == null) {
          mysteryInfo_ = null;
          onChanged();
        } else {
          mysteryInfo_ = null;
          mysteryInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.ChessMysteryInfo mystery_info = 4;</code>
       */
      public emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo.Builder getMysteryInfoBuilder() {
        
        onChanged();
        return getMysteryInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>.ChessMysteryInfo mystery_info = 4;</code>
       */
      public emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfoOrBuilder getMysteryInfoOrBuilder() {
        if (mysteryInfoBuilder_ != null) {
          return mysteryInfoBuilder_.getMessageOrBuilder();
        } else {
          return mysteryInfo_ == null ?
              emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo.getDefaultInstance() : mysteryInfo_;
        }
      }
      /**
       * <code>.ChessMysteryInfo mystery_info = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo, emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo.Builder, emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfoOrBuilder> 
          getMysteryInfoFieldBuilder() {
        if (mysteryInfoBuilder_ == null) {
          mysteryInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo, emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfo.Builder, emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.ChessMysteryInfoOrBuilder>(
                  getMysteryInfo(),
                  getParentForChildren(),
                  isClean());
          mysteryInfo_ = null;
        }
        return mysteryInfoBuilder_;
      }

      private int iOCEGCOPGNJ_ ;
      /**
       * <code>uint32 IOCEGCOPGNJ = 5;</code>
       * @return The iOCEGCOPGNJ.
       */
      @java.lang.Override
      public int getIOCEGCOPGNJ() {
        return iOCEGCOPGNJ_;
      }
      /**
       * <code>uint32 IOCEGCOPGNJ = 5;</code>
       * @param value The iOCEGCOPGNJ to set.
       * @return This builder for chaining.
       */
      public Builder setIOCEGCOPGNJ(int value) {
        
        iOCEGCOPGNJ_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 IOCEGCOPGNJ = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearIOCEGCOPGNJ() {
        
        iOCEGCOPGNJ_ = 0;
        onChanged();
        return this;
      }

      private int excapedMonsters_ ;
      /**
       * <code>uint32 excaped_monsters = 15;</code>
       * @return The excapedMonsters.
       */
      @java.lang.Override
      public int getExcapedMonsters() {
        return excapedMonsters_;
      }
      /**
       * <code>uint32 excaped_monsters = 15;</code>
       * @param value The excapedMonsters to set.
       * @return This builder for chaining.
       */
      public Builder setExcapedMonsters(int value) {
        
        excapedMonsters_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 excaped_monsters = 15;</code>
       * @return This builder for chaining.
       */
      public Builder clearExcapedMonsters() {
        
        excapedMonsters_ = 0;
        onChanged();
        return this;
      }

      private int leftMonsters_ ;
      /**
       * <code>uint32 left_monsters = 7;</code>
       * @return The leftMonsters.
       */
      @java.lang.Override
      public int getLeftMonsters() {
        return leftMonsters_;
      }
      /**
       * <code>uint32 left_monsters = 7;</code>
       * @param value The leftMonsters to set.
       * @return This builder for chaining.
       */
      public Builder setLeftMonsters(int value) {
        
        leftMonsters_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 left_monsters = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearLeftMonsters() {
        
        leftMonsters_ = 0;
        onChanged();
        return this;
      }

      private int eCACOGNFOLF_ ;
      /**
       * <code>uint32 ECACOGNFOLF = 1;</code>
       * @return The eCACOGNFOLF.
       */
      @java.lang.Override
      public int getECACOGNFOLF() {
        return eCACOGNFOLF_;
      }
      /**
       * <code>uint32 ECACOGNFOLF = 1;</code>
       * @param value The eCACOGNFOLF to set.
       * @return This builder for chaining.
       */
      public Builder setECACOGNFOLF(int value) {
        
        eCACOGNFOLF_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 ECACOGNFOLF = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearECACOGNFOLF() {
        
        eCACOGNFOLF_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo> selectedCardInfoList_ =
        java.util.Collections.emptyList();
      private void ensureSelectedCardInfoListIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          selectedCardInfoList_ = new java.util.ArrayList<emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo>(selectedCardInfoList_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo, emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo.Builder, emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfoOrBuilder> selectedCardInfoListBuilder_;

      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo> getSelectedCardInfoListList() {
        if (selectedCardInfoListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(selectedCardInfoList_);
        } else {
          return selectedCardInfoListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public int getSelectedCardInfoListCount() {
        if (selectedCardInfoListBuilder_ == null) {
          return selectedCardInfoList_.size();
        } else {
          return selectedCardInfoListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo getSelectedCardInfoList(int index) {
        if (selectedCardInfoListBuilder_ == null) {
          return selectedCardInfoList_.get(index);
        } else {
          return selectedCardInfoListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public Builder setSelectedCardInfoList(
          int index, emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo value) {
        if (selectedCardInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSelectedCardInfoListIsMutable();
          selectedCardInfoList_.set(index, value);
          onChanged();
        } else {
          selectedCardInfoListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public Builder setSelectedCardInfoList(
          int index, emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo.Builder builderForValue) {
        if (selectedCardInfoListBuilder_ == null) {
          ensureSelectedCardInfoListIsMutable();
          selectedCardInfoList_.set(index, builderForValue.build());
          onChanged();
        } else {
          selectedCardInfoListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public Builder addSelectedCardInfoList(emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo value) {
        if (selectedCardInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSelectedCardInfoListIsMutable();
          selectedCardInfoList_.add(value);
          onChanged();
        } else {
          selectedCardInfoListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public Builder addSelectedCardInfoList(
          int index, emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo value) {
        if (selectedCardInfoListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSelectedCardInfoListIsMutable();
          selectedCardInfoList_.add(index, value);
          onChanged();
        } else {
          selectedCardInfoListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public Builder addSelectedCardInfoList(
          emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo.Builder builderForValue) {
        if (selectedCardInfoListBuilder_ == null) {
          ensureSelectedCardInfoListIsMutable();
          selectedCardInfoList_.add(builderForValue.build());
          onChanged();
        } else {
          selectedCardInfoListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public Builder addSelectedCardInfoList(
          int index, emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo.Builder builderForValue) {
        if (selectedCardInfoListBuilder_ == null) {
          ensureSelectedCardInfoListIsMutable();
          selectedCardInfoList_.add(index, builderForValue.build());
          onChanged();
        } else {
          selectedCardInfoListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public Builder addAllSelectedCardInfoList(
          java.lang.Iterable<? extends emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo> values) {
        if (selectedCardInfoListBuilder_ == null) {
          ensureSelectedCardInfoListIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, selectedCardInfoList_);
          onChanged();
        } else {
          selectedCardInfoListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public Builder clearSelectedCardInfoList() {
        if (selectedCardInfoListBuilder_ == null) {
          selectedCardInfoList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          selectedCardInfoListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public Builder removeSelectedCardInfoList(int index) {
        if (selectedCardInfoListBuilder_ == null) {
          ensureSelectedCardInfoListIsMutable();
          selectedCardInfoList_.remove(index);
          onChanged();
        } else {
          selectedCardInfoListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo.Builder getSelectedCardInfoListBuilder(
          int index) {
        return getSelectedCardInfoListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfoOrBuilder getSelectedCardInfoListOrBuilder(
          int index) {
        if (selectedCardInfoListBuilder_ == null) {
          return selectedCardInfoList_.get(index);  } else {
          return selectedCardInfoListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public java.util.List<? extends emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfoOrBuilder> 
           getSelectedCardInfoListOrBuilderList() {
        if (selectedCardInfoListBuilder_ != null) {
          return selectedCardInfoListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(selectedCardInfoList_);
        }
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo.Builder addSelectedCardInfoListBuilder() {
        return getSelectedCardInfoListFieldBuilder().addBuilder(
            emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo.Builder addSelectedCardInfoListBuilder(
          int index) {
        return getSelectedCardInfoListFieldBuilder().addBuilder(
            index, emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .ChessCardInfo selected_card_info_list = 12;</code>
       */
      public java.util.List<emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo.Builder> 
           getSelectedCardInfoListBuilderList() {
        return getSelectedCardInfoListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo, emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo.Builder, emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfoOrBuilder> 
          getSelectedCardInfoListFieldBuilder() {
        if (selectedCardInfoListBuilder_ == null) {
          selectedCardInfoListBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo, emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfo.Builder, emu.grasscutter.net.proto.ChessCardInfoOuterClass.ChessCardInfoOrBuilder>(
                  selectedCardInfoList_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          selectedCardInfoList_ = null;
        }
        return selectedCardInfoListBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:InBattleChessInfo)
    }

    // @@protoc_insertion_point(class_scope:InBattleChessInfo)
    private static final emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo();
    }

    public static emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<InBattleChessInfo>
        PARSER = new com.google.protobuf.AbstractParser<InBattleChessInfo>() {
      @java.lang.Override
      public InBattleChessInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new InBattleChessInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<InBattleChessInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<InBattleChessInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.InBattleChessInfoOuterClass.InBattleChessInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_InBattleChessInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_InBattleChessInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_InBattleChessInfo_PlayerInfoMapEntry_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_InBattleChessInfo_PlayerInfoMapEntry_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\027InBattleChessInfo.proto\032\025ChessPlayerIn" +
      "fo.proto\032\026ChessMysteryInfo.proto\032\023ChessC" +
      "ardInfo.proto\"\372\002\n\021InBattleChessInfo\022\r\n\005r" +
      "ound\030\016 \001(\r\022>\n\017player_info_map\030\t \003(\0132%.In" +
      "BattleChessInfo.PlayerInfoMapEntry\022\031\n\021ba" +
      "n_card_tag_list\030\r \003(\r\022\'\n\014mystery_info\030\004 " +
      "\001(\0132\021.ChessMysteryInfo\022\023\n\013IOCEGCOPGNJ\030\005 " +
      "\001(\r\022\030\n\020excaped_monsters\030\017 \001(\r\022\025\n\rleft_mo" +
      "nsters\030\007 \001(\r\022\023\n\013ECACOGNFOLF\030\001 \001(\r\022/\n\027sel" +
      "ected_card_info_list\030\014 \003(\0132\016.ChessCardIn" +
      "fo\032F\n\022PlayerInfoMapEntry\022\013\n\003key\030\001 \001(\r\022\037\n" +
      "\005value\030\002 \001(\0132\020.ChessPlayerInfo:\0028\001B\033\n\031em" +
      "u.grasscutter.net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.getDescriptor(),
          emu.grasscutter.net.proto.ChessCardInfoOuterClass.getDescriptor(),
        });
    internal_static_InBattleChessInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_InBattleChessInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_InBattleChessInfo_descriptor,
        new java.lang.String[] { "Round", "PlayerInfoMap", "BanCardTagList", "MysteryInfo", "IOCEGCOPGNJ", "ExcapedMonsters", "LeftMonsters", "ECACOGNFOLF", "SelectedCardInfoList", });
    internal_static_InBattleChessInfo_PlayerInfoMapEntry_descriptor =
      internal_static_InBattleChessInfo_descriptor.getNestedTypes().get(0);
    internal_static_InBattleChessInfo_PlayerInfoMapEntry_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_InBattleChessInfo_PlayerInfoMapEntry_descriptor,
        new java.lang.String[] { "Key", "Value", });
    emu.grasscutter.net.proto.ChessPlayerInfoOuterClass.getDescriptor();
    emu.grasscutter.net.proto.ChessMysteryInfoOuterClass.getDescriptor();
    emu.grasscutter.net.proto.ChessCardInfoOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
