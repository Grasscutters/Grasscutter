// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ScenePlayBattleInfo.proto

package emu.grasscutter.net.proto;

public final class ScenePlayBattleInfoOuterClass {
  private ScenePlayBattleInfoOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ScenePlayBattleInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ScenePlayBattleInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 progress_stage_list = 2;</code>
     * @return A list containing the progressStageList.
     */
    java.util.List<java.lang.Integer> getProgressStageListList();
    /**
     * <code>repeated uint32 progress_stage_list = 2;</code>
     * @return The count of progressStageList.
     */
    int getProgressStageListCount();
    /**
     * <code>repeated uint32 progress_stage_list = 2;</code>
     * @param index The index of the element to return.
     * @return The progressStageList at the given index.
     */
    int getProgressStageList(int index);

    /**
     * <code>uint32 state = 7;</code>
     * @return The state.
     */
    int getState();

    /**
     * <code>uint32 prepare_end_time = 4;</code>
     * @return The prepareEndTime.
     */
    int getPrepareEndTime();

    /**
     * <code>uint32 play_type = 14;</code>
     * @return The playType.
     */
    int getPlayType();

    /**
     * <code>uint32 play_id = 9;</code>
     * @return The playId.
     */
    int getPlayId();

    /**
     * <code>uint32 mode = 13;</code>
     * @return The mode.
     */
    int getMode();

    /**
     * <code>uint32 start_time = 11;</code>
     * @return The startTime.
     */
    int getStartTime();

    /**
     * <code>uint32 duration = 10;</code>
     * @return The duration.
     */
    int getDuration();

    /**
     * <code>uint32 type = 12;</code>
     * @return The type.
     */
    int getType();

    /**
     * <code>uint32 progress = 5;</code>
     * @return The progress.
     */
    int getProgress();
  }
  /**
   * <pre>
   * Obf: ONDNMNBNCPE
   * </pre>
   *
   * Protobuf type {@code ScenePlayBattleInfo}
   */
  public static final class ScenePlayBattleInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ScenePlayBattleInfo)
      ScenePlayBattleInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ScenePlayBattleInfo.newBuilder() to construct.
    private ScenePlayBattleInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ScenePlayBattleInfo() {
      progressStageList_ = emptyIntList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ScenePlayBattleInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ScenePlayBattleInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 16: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                progressStageList_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              progressStageList_.addInt(input.readUInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) != 0) && input.getBytesUntilLimit() > 0) {
                progressStageList_ = newIntList();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                progressStageList_.addInt(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {

              prepareEndTime_ = input.readUInt32();
              break;
            }
            case 40: {

              progress_ = input.readUInt32();
              break;
            }
            case 56: {

              state_ = input.readUInt32();
              break;
            }
            case 72: {

              playId_ = input.readUInt32();
              break;
            }
            case 80: {

              duration_ = input.readUInt32();
              break;
            }
            case 88: {

              startTime_ = input.readUInt32();
              break;
            }
            case 96: {

              type_ = input.readUInt32();
              break;
            }
            case 104: {

              mode_ = input.readUInt32();
              break;
            }
            case 112: {

              playType_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          progressStageList_.makeImmutable(); // C
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.internal_static_ScenePlayBattleInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.internal_static_ScenePlayBattleInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo.class, emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo.Builder.class);
    }

    public static final int PROGRESS_STAGE_LIST_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.IntList progressStageList_;
    /**
     * <code>repeated uint32 progress_stage_list = 2;</code>
     * @return A list containing the progressStageList.
     */
    @java.lang.Override
    public java.util.List<java.lang.Integer>
        getProgressStageListList() {
      return progressStageList_;
    }
    /**
     * <code>repeated uint32 progress_stage_list = 2;</code>
     * @return The count of progressStageList.
     */
    public int getProgressStageListCount() {
      return progressStageList_.size();
    }
    /**
     * <code>repeated uint32 progress_stage_list = 2;</code>
     * @param index The index of the element to return.
     * @return The progressStageList at the given index.
     */
    public int getProgressStageList(int index) {
      return progressStageList_.getInt(index);
    }
    private int progressStageListMemoizedSerializedSize = -1;

    public static final int STATE_FIELD_NUMBER = 7;
    private int state_;
    /**
     * <code>uint32 state = 7;</code>
     * @return The state.
     */
    @java.lang.Override
    public int getState() {
      return state_;
    }

    public static final int PREPARE_END_TIME_FIELD_NUMBER = 4;
    private int prepareEndTime_;
    /**
     * <code>uint32 prepare_end_time = 4;</code>
     * @return The prepareEndTime.
     */
    @java.lang.Override
    public int getPrepareEndTime() {
      return prepareEndTime_;
    }

    public static final int PLAY_TYPE_FIELD_NUMBER = 14;
    private int playType_;
    /**
     * <code>uint32 play_type = 14;</code>
     * @return The playType.
     */
    @java.lang.Override
    public int getPlayType() {
      return playType_;
    }

    public static final int PLAY_ID_FIELD_NUMBER = 9;
    private int playId_;
    /**
     * <code>uint32 play_id = 9;</code>
     * @return The playId.
     */
    @java.lang.Override
    public int getPlayId() {
      return playId_;
    }

    public static final int MODE_FIELD_NUMBER = 13;
    private int mode_;
    /**
     * <code>uint32 mode = 13;</code>
     * @return The mode.
     */
    @java.lang.Override
    public int getMode() {
      return mode_;
    }

    public static final int START_TIME_FIELD_NUMBER = 11;
    private int startTime_;
    /**
     * <code>uint32 start_time = 11;</code>
     * @return The startTime.
     */
    @java.lang.Override
    public int getStartTime() {
      return startTime_;
    }

    public static final int DURATION_FIELD_NUMBER = 10;
    private int duration_;
    /**
     * <code>uint32 duration = 10;</code>
     * @return The duration.
     */
    @java.lang.Override
    public int getDuration() {
      return duration_;
    }

    public static final int TYPE_FIELD_NUMBER = 12;
    private int type_;
    /**
     * <code>uint32 type = 12;</code>
     * @return The type.
     */
    @java.lang.Override
    public int getType() {
      return type_;
    }

    public static final int PROGRESS_FIELD_NUMBER = 5;
    private int progress_;
    /**
     * <code>uint32 progress = 5;</code>
     * @return The progress.
     */
    @java.lang.Override
    public int getProgress() {
      return progress_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (getProgressStageListList().size() > 0) {
        output.writeUInt32NoTag(18);
        output.writeUInt32NoTag(progressStageListMemoizedSerializedSize);
      }
      for (int i = 0; i < progressStageList_.size(); i++) {
        output.writeUInt32NoTag(progressStageList_.getInt(i));
      }
      if (prepareEndTime_ != 0) {
        output.writeUInt32(4, prepareEndTime_);
      }
      if (progress_ != 0) {
        output.writeUInt32(5, progress_);
      }
      if (state_ != 0) {
        output.writeUInt32(7, state_);
      }
      if (playId_ != 0) {
        output.writeUInt32(9, playId_);
      }
      if (duration_ != 0) {
        output.writeUInt32(10, duration_);
      }
      if (startTime_ != 0) {
        output.writeUInt32(11, startTime_);
      }
      if (type_ != 0) {
        output.writeUInt32(12, type_);
      }
      if (mode_ != 0) {
        output.writeUInt32(13, mode_);
      }
      if (playType_ != 0) {
        output.writeUInt32(14, playType_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < progressStageList_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(progressStageList_.getInt(i));
        }
        size += dataSize;
        if (!getProgressStageListList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        progressStageListMemoizedSerializedSize = dataSize;
      }
      if (prepareEndTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, prepareEndTime_);
      }
      if (progress_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, progress_);
      }
      if (state_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, state_);
      }
      if (playId_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, playId_);
      }
      if (duration_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, duration_);
      }
      if (startTime_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, startTime_);
      }
      if (type_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, type_);
      }
      if (mode_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, mode_);
      }
      if (playType_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(14, playType_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo other = (emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo) obj;

      if (!getProgressStageListList()
          .equals(other.getProgressStageListList())) return false;
      if (getState()
          != other.getState()) return false;
      if (getPrepareEndTime()
          != other.getPrepareEndTime()) return false;
      if (getPlayType()
          != other.getPlayType()) return false;
      if (getPlayId()
          != other.getPlayId()) return false;
      if (getMode()
          != other.getMode()) return false;
      if (getStartTime()
          != other.getStartTime()) return false;
      if (getDuration()
          != other.getDuration()) return false;
      if (getType()
          != other.getType()) return false;
      if (getProgress()
          != other.getProgress()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getProgressStageListCount() > 0) {
        hash = (37 * hash) + PROGRESS_STAGE_LIST_FIELD_NUMBER;
        hash = (53 * hash) + getProgressStageListList().hashCode();
      }
      hash = (37 * hash) + STATE_FIELD_NUMBER;
      hash = (53 * hash) + getState();
      hash = (37 * hash) + PREPARE_END_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getPrepareEndTime();
      hash = (37 * hash) + PLAY_TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getPlayType();
      hash = (37 * hash) + PLAY_ID_FIELD_NUMBER;
      hash = (53 * hash) + getPlayId();
      hash = (37 * hash) + MODE_FIELD_NUMBER;
      hash = (53 * hash) + getMode();
      hash = (37 * hash) + START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + getStartTime();
      hash = (37 * hash) + DURATION_FIELD_NUMBER;
      hash = (53 * hash) + getDuration();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + getType();
      hash = (37 * hash) + PROGRESS_FIELD_NUMBER;
      hash = (53 * hash) + getProgress();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Obf: ONDNMNBNCPE
     * </pre>
     *
     * Protobuf type {@code ScenePlayBattleInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ScenePlayBattleInfo)
        emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.internal_static_ScenePlayBattleInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.internal_static_ScenePlayBattleInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo.class, emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo.Builder.class);
      }

      // Construct using emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        progressStageList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        state_ = 0;

        prepareEndTime_ = 0;

        playType_ = 0;

        playId_ = 0;

        mode_ = 0;

        startTime_ = 0;

        duration_ = 0;

        type_ = 0;

        progress_ = 0;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.internal_static_ScenePlayBattleInfo_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo build() {
        emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo buildPartial() {
        emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo result = new emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) != 0)) {
          progressStageList_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.progressStageList_ = progressStageList_;
        result.state_ = state_;
        result.prepareEndTime_ = prepareEndTime_;
        result.playType_ = playType_;
        result.playId_ = playId_;
        result.mode_ = mode_;
        result.startTime_ = startTime_;
        result.duration_ = duration_;
        result.type_ = type_;
        result.progress_ = progress_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo) {
          return mergeFrom((emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo other) {
        if (other == emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo.getDefaultInstance()) return this;
        if (!other.progressStageList_.isEmpty()) {
          if (progressStageList_.isEmpty()) {
            progressStageList_ = other.progressStageList_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureProgressStageListIsMutable();
            progressStageList_.addAll(other.progressStageList_);
          }
          onChanged();
        }
        if (other.getState() != 0) {
          setState(other.getState());
        }
        if (other.getPrepareEndTime() != 0) {
          setPrepareEndTime(other.getPrepareEndTime());
        }
        if (other.getPlayType() != 0) {
          setPlayType(other.getPlayType());
        }
        if (other.getPlayId() != 0) {
          setPlayId(other.getPlayId());
        }
        if (other.getMode() != 0) {
          setMode(other.getMode());
        }
        if (other.getStartTime() != 0) {
          setStartTime(other.getStartTime());
        }
        if (other.getDuration() != 0) {
          setDuration(other.getDuration());
        }
        if (other.getType() != 0) {
          setType(other.getType());
        }
        if (other.getProgress() != 0) {
          setProgress(other.getProgress());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.Internal.IntList progressStageList_ = emptyIntList();
      private void ensureProgressStageListIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          progressStageList_ = mutableCopy(progressStageList_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 progress_stage_list = 2;</code>
       * @return A list containing the progressStageList.
       */
      public java.util.List<java.lang.Integer>
          getProgressStageListList() {
        return ((bitField0_ & 0x00000001) != 0) ?
                 java.util.Collections.unmodifiableList(progressStageList_) : progressStageList_;
      }
      /**
       * <code>repeated uint32 progress_stage_list = 2;</code>
       * @return The count of progressStageList.
       */
      public int getProgressStageListCount() {
        return progressStageList_.size();
      }
      /**
       * <code>repeated uint32 progress_stage_list = 2;</code>
       * @param index The index of the element to return.
       * @return The progressStageList at the given index.
       */
      public int getProgressStageList(int index) {
        return progressStageList_.getInt(index);
      }
      /**
       * <code>repeated uint32 progress_stage_list = 2;</code>
       * @param index The index to set the value at.
       * @param value The progressStageList to set.
       * @return This builder for chaining.
       */
      public Builder setProgressStageList(
          int index, int value) {
        ensureProgressStageListIsMutable();
        progressStageList_.setInt(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 progress_stage_list = 2;</code>
       * @param value The progressStageList to add.
       * @return This builder for chaining.
       */
      public Builder addProgressStageList(int value) {
        ensureProgressStageListIsMutable();
        progressStageList_.addInt(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 progress_stage_list = 2;</code>
       * @param values The progressStageList to add.
       * @return This builder for chaining.
       */
      public Builder addAllProgressStageList(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureProgressStageListIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, progressStageList_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 progress_stage_list = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearProgressStageList() {
        progressStageList_ = emptyIntList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int state_ ;
      /**
       * <code>uint32 state = 7;</code>
       * @return The state.
       */
      @java.lang.Override
      public int getState() {
        return state_;
      }
      /**
       * <code>uint32 state = 7;</code>
       * @param value The state to set.
       * @return This builder for chaining.
       */
      public Builder setState(int value) {
        
        state_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 state = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearState() {
        
        state_ = 0;
        onChanged();
        return this;
      }

      private int prepareEndTime_ ;
      /**
       * <code>uint32 prepare_end_time = 4;</code>
       * @return The prepareEndTime.
       */
      @java.lang.Override
      public int getPrepareEndTime() {
        return prepareEndTime_;
      }
      /**
       * <code>uint32 prepare_end_time = 4;</code>
       * @param value The prepareEndTime to set.
       * @return This builder for chaining.
       */
      public Builder setPrepareEndTime(int value) {
        
        prepareEndTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 prepare_end_time = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearPrepareEndTime() {
        
        prepareEndTime_ = 0;
        onChanged();
        return this;
      }

      private int playType_ ;
      /**
       * <code>uint32 play_type = 14;</code>
       * @return The playType.
       */
      @java.lang.Override
      public int getPlayType() {
        return playType_;
      }
      /**
       * <code>uint32 play_type = 14;</code>
       * @param value The playType to set.
       * @return This builder for chaining.
       */
      public Builder setPlayType(int value) {
        
        playType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 play_type = 14;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayType() {
        
        playType_ = 0;
        onChanged();
        return this;
      }

      private int playId_ ;
      /**
       * <code>uint32 play_id = 9;</code>
       * @return The playId.
       */
      @java.lang.Override
      public int getPlayId() {
        return playId_;
      }
      /**
       * <code>uint32 play_id = 9;</code>
       * @param value The playId to set.
       * @return This builder for chaining.
       */
      public Builder setPlayId(int value) {
        
        playId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 play_id = 9;</code>
       * @return This builder for chaining.
       */
      public Builder clearPlayId() {
        
        playId_ = 0;
        onChanged();
        return this;
      }

      private int mode_ ;
      /**
       * <code>uint32 mode = 13;</code>
       * @return The mode.
       */
      @java.lang.Override
      public int getMode() {
        return mode_;
      }
      /**
       * <code>uint32 mode = 13;</code>
       * @param value The mode to set.
       * @return This builder for chaining.
       */
      public Builder setMode(int value) {
        
        mode_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 mode = 13;</code>
       * @return This builder for chaining.
       */
      public Builder clearMode() {
        
        mode_ = 0;
        onChanged();
        return this;
      }

      private int startTime_ ;
      /**
       * <code>uint32 start_time = 11;</code>
       * @return The startTime.
       */
      @java.lang.Override
      public int getStartTime() {
        return startTime_;
      }
      /**
       * <code>uint32 start_time = 11;</code>
       * @param value The startTime to set.
       * @return This builder for chaining.
       */
      public Builder setStartTime(int value) {
        
        startTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 start_time = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearStartTime() {
        
        startTime_ = 0;
        onChanged();
        return this;
      }

      private int duration_ ;
      /**
       * <code>uint32 duration = 10;</code>
       * @return The duration.
       */
      @java.lang.Override
      public int getDuration() {
        return duration_;
      }
      /**
       * <code>uint32 duration = 10;</code>
       * @param value The duration to set.
       * @return This builder for chaining.
       */
      public Builder setDuration(int value) {
        
        duration_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 duration = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearDuration() {
        
        duration_ = 0;
        onChanged();
        return this;
      }

      private int type_ ;
      /**
       * <code>uint32 type = 12;</code>
       * @return The type.
       */
      @java.lang.Override
      public int getType() {
        return type_;
      }
      /**
       * <code>uint32 type = 12;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 type = 12;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int progress_ ;
      /**
       * <code>uint32 progress = 5;</code>
       * @return The progress.
       */
      @java.lang.Override
      public int getProgress() {
        return progress_;
      }
      /**
       * <code>uint32 progress = 5;</code>
       * @param value The progress to set.
       * @return This builder for chaining.
       */
      public Builder setProgress(int value) {
        
        progress_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 progress = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearProgress() {
        
        progress_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ScenePlayBattleInfo)
    }

    // @@protoc_insertion_point(class_scope:ScenePlayBattleInfo)
    private static final emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo();
    }

    public static emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScenePlayBattleInfo>
        PARSER = new com.google.protobuf.AbstractParser<ScenePlayBattleInfo>() {
      @java.lang.Override
      public ScenePlayBattleInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ScenePlayBattleInfo(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ScenePlayBattleInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScenePlayBattleInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto.ScenePlayBattleInfoOuterClass.ScenePlayBattleInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ScenePlayBattleInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ScenePlayBattleInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\031ScenePlayBattleInfo.proto\"\323\001\n\023ScenePla" +
      "yBattleInfo\022\033\n\023progress_stage_list\030\002 \003(\r" +
      "\022\r\n\005state\030\007 \001(\r\022\030\n\020prepare_end_time\030\004 \001(" +
      "\r\022\021\n\tplay_type\030\016 \001(\r\022\017\n\007play_id\030\t \001(\r\022\014\n" +
      "\004mode\030\r \001(\r\022\022\n\nstart_time\030\013 \001(\r\022\020\n\010durat" +
      "ion\030\n \001(\r\022\014\n\004type\030\014 \001(\r\022\020\n\010progress\030\005 \001(" +
      "\rB\033\n\031emu.grasscutter.net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_ScenePlayBattleInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ScenePlayBattleInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ScenePlayBattleInfo_descriptor,
        new java.lang.String[] { "ProgressStageList", "State", "PrepareEndTime", "PlayType", "PlayId", "Mode", "StartTime", "Duration", "Type", "Progress", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
