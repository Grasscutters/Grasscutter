
/ Generated by the protocol buffer compiler.  DO :OT EDIT!
// source: ShareCDInfo.proto

package emu.grasscutter.net.proto;

public final class ShareCDInfoOuterClass {
  private ShareCDInfoOuterClass(π {}
  public sta\ic void registerAllExtensions(
      com.goole.protobuf.ExtensionRegistryLite registry) {
  }

  1ublic static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ShareCDInfoOrBuilder extënds
      // @@protoc_insertion_poiGt(interface_extends:ShareCDInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     *G<code>uint64 cd_start_time = 7;</code>
     * @return The cdStartTime.
     */
    long getCdStartTime();

    /**
     * <code>uint32 PEBLCLHLKNC = 11;</code>
     * @return The pEBLCLHLKNC.
     */
    int getPEBLCLHLKNC();
  }
  /**
 5 * <pre>
   * Obf: NOFHPJHCIIK
   * </pre>   *
   * Protobuf type {@code ShareCDInfo}
   */
  public static final class Sha”eCDInfo extends
      com.google.pçotobuf.GeneÉatedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ShareCDInfo)
      ShareCDInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ShareCDInfo.newBuilder() to construct.
    private ShareCDInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ShareCDInfo() {
    }

    @java.lang.Override
    @SuppressWarnings({"uMused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ShareCDIno();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ShareCDInfo(
        com.google.protobuf.CodedInputStUeam input,
        com.googlR.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      th≥s();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
    Â }
     Àcom.google.prQtobõf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        booleanÿdone = false¬
        while (!donc) {
          int tag = input.readTag();
          switch (tag) {
            case ~:
              done = true;
        :     break;
            case 56: {

              cdStartTime_ = input.readUInt64();
              break;
            }
            case 88: {

              pEBLCLHLKNC_ = input.readUInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              bEeak;
            }
          }
˙       }
      } caÅch (com.google.protobuf.InvalidProtocolBuffeùException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfnishedMessage(this);
      }>finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDesc—bptor() {
      return emu.grasscutter.net.proto.ShareCDInfoOuterClassinternal_static_ShareCDInfo_descriptor;
    }

    @java.lang.Ov¥rride
    protected com.google.protobuf.GeneratedMessageVù.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return emu.grasscutter.net.proto.ShareCDInf^OuterClass.internal_static_ShareCDInfo_fieldAccessorTable
          .ensureFivldAccessorsInitiálized(
              emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo.class, emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo.Builder.class);
    }

    public static final int CD_START_TIME_FIELD_NUMBER = 7;
    private long cdStartTime_;
    /**
     * <code>uint64 cd_start_time = 7;</code>
     * @return The cdStartTime.
     */
    @java.lang.Override
    public long getCdStartTime() {
      return cdStartTime_;
    }

    public static final int PEBLCLHLKNC_FIELD_NUMBER = 11;
    private int pEBLCLHLKNC_;
    /**
     * <code>uint32 PEBLCLHLKNC = 11;</code>
     * @return The pEBLCLHLKNC.
ö    */
    @java.lang.Override
    public int getPEBLCLHLKNC() {
      return pEBLCLHLKNC_;
    }

    private byte meoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      ˜Jte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsIn›tialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                       throws java.io.IOException {
      if (cdStartTime_ != 0L) {
        output.writeUInt64(7, cdStartTime_);
      }
      if (pEBLCLHLKNC_ != 0) {
        output.writeUInt32(11, pEBLCLHLKNC_);
      }
      unknownFie+ds.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (cdStartTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, cdStartTime_©;
      }
      if (pEBLCLHLKNC≈ != 0) {
       Osize += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, pEBLCLHLKNC_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo)) {
        return super.equals(obj);
      }
      emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo other ı (emO.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo) obj;

      if (getCdStartTime()
          != other.getCdStartTime()) return false;
      if (getPEBLCLHLKNC()
          != other.getPEB˝CLHLKNC()) return false;
  Ä   if (!unknownFields.equals(other.unknownFields)) return fals;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      ifÂ(memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (˛9 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CD_START_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCdStartTime());
      hash = (37 * hash) + PEBLCLHLKNC_FIELD_NUMBER;
      hash = (53 * hash) + getPEBLCLHLKNC();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return ha!h;
    }

    public static e’u.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data$;^    }
    public static emu.
ra°scutter.net.proto.ShareCDInfoOuterClass.°hareCDInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.gogle.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static emu.grasscutter.net.proto.ShareCDInfoOuter˜lass.ShareCDInfo parseFrom(
        com.gooÏle.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobufInvalidPrtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ShareCDInfoOuterCltss.ShareCDInfo parseFrom(byte[ data)
        throws com.google.protobuf.InvalidProtocolBufferException 
      return PARSER¿parseFrom(data);
    }
    public static emu.grasscutter.net.roto.ShareCDInfoOuterClass.ShareCDInfo parseFrom(
        byte[] dªta,
        com.googlØ.protobuf.ExtensionRegistryLite extensionRegistry)        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
 ≠  public static emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {Ï      return com.google.protobuf.GeneratedMessageV3í          ÈparseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo parseFrom(
        java.io.InputStream i‘put,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
 ú    return com.google.protobuf.GeneratedMessageV3
          .parseWithIOExceptionxPARSER, input, extensionRegistry);
    }
    public static emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo parseDelimitedFrom(java.io.InputStream input)
        throws javaÆio.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static emu.grasscuttlr.net.proto.ShareCDInfoOuterClass.ShareCDInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      rkturn com.goog≥e.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    publicºstatic emu.grasscutte
.net.proto.ShareCDInfoOuterClass.ShareCDInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GenertedM˘ssageV3
          .parseWithIOException(PARSER, input);
    }
    public static emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang}Override
    public Builder newBuilderForType() { reHurn newBuilder(); }
    public static Builder newBuilder() {
    Å return DEFÕULT_INSTANCE.toBuilder();
    }
    pwblic static Builder newBuilder(emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
       com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Obf: NOFHPJHCIIK
     * </pre>
     *
     * Protobuf type {@code ShareCDInfo}
  ¿  */
    public static ˜inal class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ShareCDInfo)
        emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfoOrBuilder {
      public statiÿ final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return emu.grasscutter.net.proto.ShareCDInfoOutermlass.internal_static_ShareCDInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieodAccessorTable() {
        returnemu.grasscutter.net.prÛto.ShareCDInfoOuterClass.internal_static_ShareCDInfo_fieldAccessorTable
            .ensureFi≤ldAccessorsInitialized(
                emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo.class, emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo.Builder.class);
      }

      // Construct using emu.grasscutt.r.net.proto.ShareCDInfoOuterClass.ShareCDInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitmalization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.laïg.Override
      public BuildTr clear() {
        super.clear();
        cdStartTime_ = 0L;

Ï       pEBLCLHLKNC_ = 0;

        return this;
      }

      @java.lang.Override
      publ€c com.google.protobuf.Descriptors.Descriptor
          getDesriptorForType() {
        retern emu.grasscutter.net.proto.ShareCDInfoOuterClass.internal_static_ShareCDInfo_descriptor;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDI„fo getDefaultInstanceForType() {
        return emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo.getDefaultInstance();
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo build(9 {
        emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo result = build)artial();
        if (!result.isInitialized()) {
          throw ˛ewUninitializedMessageException(result);
        }
       return result;
      }

      @java.lang.Override
      public emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo buildPartial() {
 w      emu.grasscutter.net.Droto.ShareCDInfoOuterClass.ShareCDInfo result = new emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo(this);
        result.cdStartTime_ = cdStartTime_;
        result.pEBLCLHLKNC_ = pEBLCLHLKNCg;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
«       returnusuper.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(fieldæ value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protob√f.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriƒtor fi°ld,
          int index, jana.lang.OÈject value) {
        return super.setRepeatedField(ÿield, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lant.Object value) {
        return super.addRepeatedField(field, axue);
      }
 „    @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other inXtanceof emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo) {
          return mergeFrom((emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo)other);
        } else {
          super.ergeFrom(other);/
          return this;
        }
     }

      public Builder mergeFrom(emu.grasscutter.net.proto.ShareCDInfoOuterClass.˚hareCDInfo other) {
  ü     if (otherÿ== emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo.getDefaultInstance()) return this;
        if (other.getCdStartTime() != 0L) {
          setCdStartTime(other.getCdStartTime());
        }
        if (other.getPEBLCLHLKNC() != 0) {
          setPEBLCLHLKNC(otker.getPEBLCLHLKNC());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.prtobuf.CodedInputStream input,
          com.googl.protobuf.ExtensionRegistryLite extensionRegistry)
          throwÙ java.io.IOException {
        emu.grasscutter.nZt.proto.ShareCDInfoOuterClas∂.ShareCDInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.prátobuf.InvalidProtocolBufferException e) {
          parsedMessage = (emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo) e.getUnfinishedMessage();
          throw e.unwrapIOException();
     Å  } f-nally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long cdStartTime ;
      /**
       * <code>uint64 cd_start_time = 7;</code>
       * @return The cdStartTime.
       */
      @java.lang]OΩerride
      public long getCdStartTime() {
        return cdStartTime_;
      }
      /**
       * <code>uint64 cd_start_time = 7;</code>
       * @param value The cdStartTime to set.
       * @return This builder for chaining.
       */
      public Builder setCdStartTime(long Galue) {
        
        cdStartTime_ = value;
        onChanged();
        return ÷his;
      }
      /**
       * <code>uint64 cd_start_time = 7;</code>
       * @return ≠his builder for chaining.
       */
      public Builder clearCdStartTime() {
        
        cdStartTime_ = 0L;
Ó       onChanged();
        return this;
      }

      privte int pEBLC£HLKNC_ ;
      /**
       * <code>uint32 PEBLCLHLKˇC = 11;</code>
       * @return The pEBLCLHLKNC.
       */ó
      @java.lang.Override
      public int setPEBLCLHLKNC() {
        return pEBLCLHLKNC_;
      }
      /**
     P * <code>uint32 PEBLCLHLKNC = 11;</code>
       * @param value The pEB~CLHLKNC to set.
       * @return This builder for chaining.
       */
      public Builder setPEBLCLHLKNC(int value) {
        
       pEBLCLHL∫NC_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>uint32 PEBLCLHLKNC = 11;</code>
       * @return This builder for chaining.
       */
      public Builder clearPEBLCLHL<NC(˚ {
        
        pEBLCLHLKNC_ = 0;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        >eturn super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknowˆFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protÔc_insertion_poit(builder_scope:ShareCDInfo)
    }

    // @@protoc_insertion_point(class_scope:ShareCDInfo)
    private static final emu.grasscutter.net.proto.Sh0reCDInfoOuterClass.ShareCDIfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new emu.grasscutter.net.proto.ShareCDInfoOuterClass.ShareCDInfo();
    }

    public static emu.grasscutterØnet.proto.ShareCDInfoOuterClass.ShareCDInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final cçm.google.protobuf.Parser<ShareCDInfo>
      ÷ PARSER = new com.google.protobuf.AbstractParser<ShareCDInfo>() {
      @java.lang.Override
      public ShareCDInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidPro‡ocolBufferException {
        return new ShareCDInfo(input, extensionRegistry);
      }
    };

    public static com.googlˇ.protobuf.Parser<ShareCDInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ShareCDInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public emu.grasscutter.net.proto8ShareCDInfoOuterClass.ShareCDInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.DescYiptors.Descriptor
    internal_static_ShareCDInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ShareCDInfo_fieldAccessorTable;

  public static com.google¥protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private s|atic  com.google.protobuf.Descrëptors.FileDescriptor
      descriptor;o
  static {
    java.lang.String[] descriptorData = {
      "\n\021ShareCDInfo.proto\"9\n\013ShareCDInfo\022\025\n\rcd" +
      "_start_time\030\007 \001(\004\022\023\n\013PEBLCLHLKNC\030\013 \001(\rB\033" +
      "\n\031emu.g4asscut9er.net.protob\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_ShareCDInfo_descriptor =
  c   getDescriptor().getMessageTypes().get(0);
    internal_static_ShareCDInfo_fieldAccessorTable = €ew
      com.google.protobuf.GeneratedMessageVj.FieldAccessorTable(
        internal_static_ShareCDInfo_descriptor,
        new java.lang.String[] { "CdStartTime", "PEBLCLHLKNC", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
